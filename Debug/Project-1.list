
Project-1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000064d0  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000650  08006660  08006660  00016660  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006cb0  08006cb0  000201d0  2**0
                  CONTENTS
  4 .ARM          00000000  08006cb0  08006cb0  000201d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006cb0  08006cb0  000201d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006cb0  08006cb0  00016cb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006cb4  08006cb4  00016cb4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d0  20000000  08006cb8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000580  200001d0  08006e88  000201d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000750  08006e88  00020750  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002e22  00000000  00000000  00020243  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000c76  00000000  00000000  00023065  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000270  00000000  00000000  00023ce0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001ac  00000000  00000000  00023f50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002755b  00000000  00000000  000240fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000045d3  00000000  00000000  0004b657  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000f643e  00000000  00000000  0004fc2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001d38  00000000  00000000  00146068  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  00147da0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001d0 	.word	0x200001d0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08006648 	.word	0x08006648

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001d4 	.word	0x200001d4
 80001cc:	08006648 	.word	0x08006648

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2lz>:
 8000c88:	b538      	push	{r3, r4, r5, lr}
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4604      	mov	r4, r0
 8000c90:	460d      	mov	r5, r1
 8000c92:	f7ff ff23 	bl	8000adc <__aeabi_dcmplt>
 8000c96:	b928      	cbnz	r0, 8000ca4 <__aeabi_d2lz+0x1c>
 8000c98:	4620      	mov	r0, r4
 8000c9a:	4629      	mov	r1, r5
 8000c9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ca0:	f000 b80a 	b.w	8000cb8 <__aeabi_d2ulz>
 8000ca4:	4620      	mov	r0, r4
 8000ca6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000caa:	f000 f805 	bl	8000cb8 <__aeabi_d2ulz>
 8000cae:	4240      	negs	r0, r0
 8000cb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cb4:	bd38      	pop	{r3, r4, r5, pc}
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_d2ulz>:
 8000cb8:	b5d0      	push	{r4, r6, r7, lr}
 8000cba:	4b0c      	ldr	r3, [pc, #48]	; (8000cec <__aeabi_d2ulz+0x34>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	4606      	mov	r6, r0
 8000cc0:	460f      	mov	r7, r1
 8000cc2:	f7ff fc99 	bl	80005f8 <__aeabi_dmul>
 8000cc6:	f7ff ff6f 	bl	8000ba8 <__aeabi_d2uiz>
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f7ff fc1a 	bl	8000504 <__aeabi_ui2d>
 8000cd0:	4b07      	ldr	r3, [pc, #28]	; (8000cf0 <__aeabi_d2ulz+0x38>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	f7ff fc90 	bl	80005f8 <__aeabi_dmul>
 8000cd8:	4602      	mov	r2, r0
 8000cda:	460b      	mov	r3, r1
 8000cdc:	4630      	mov	r0, r6
 8000cde:	4639      	mov	r1, r7
 8000ce0:	f7ff fad2 	bl	8000288 <__aeabi_dsub>
 8000ce4:	f7ff ff60 	bl	8000ba8 <__aeabi_d2uiz>
 8000ce8:	4621      	mov	r1, r4
 8000cea:	bdd0      	pop	{r4, r6, r7, pc}
 8000cec:	3df00000 	.word	0x3df00000
 8000cf0:	41f00000 	.word	0x41f00000

08000cf4 <GPIO_Init>:

/*----------------------------------------------------------------------------*/
/* Configure GPIO                                                             */
/*----------------------------------------------------------------------------*/
void GPIO_Init(void)
{
 8000cf4:	b580      	push	{r7, lr}
 8000cf6:	b08e      	sub	sp, #56	; 0x38
 8000cf8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cfa:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000cfe:	2200      	movs	r2, #0
 8000d00:	601a      	str	r2, [r3, #0]
 8000d02:	605a      	str	r2, [r3, #4]
 8000d04:	609a      	str	r2, [r3, #8]
 8000d06:	60da      	str	r2, [r3, #12]
 8000d08:	611a      	str	r2, [r3, #16]

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8000d0a:	4b49      	ldr	r3, [pc, #292]	; (8000e30 <GPIO_Init+0x13c>)
 8000d0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d0e:	4a48      	ldr	r2, [pc, #288]	; (8000e30 <GPIO_Init+0x13c>)
 8000d10:	f043 0304 	orr.w	r3, r3, #4
 8000d14:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d16:	4b46      	ldr	r3, [pc, #280]	; (8000e30 <GPIO_Init+0x13c>)
 8000d18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d1a:	f003 0304 	and.w	r3, r3, #4
 8000d1e:	623b      	str	r3, [r7, #32]
 8000d20:	6a3b      	ldr	r3, [r7, #32]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8000d22:	4b43      	ldr	r3, [pc, #268]	; (8000e30 <GPIO_Init+0x13c>)
 8000d24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d26:	4a42      	ldr	r2, [pc, #264]	; (8000e30 <GPIO_Init+0x13c>)
 8000d28:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d2c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d2e:	4b40      	ldr	r3, [pc, #256]	; (8000e30 <GPIO_Init+0x13c>)
 8000d30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000d36:	61fb      	str	r3, [r7, #28]
 8000d38:	69fb      	ldr	r3, [r7, #28]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8000d3a:	4b3d      	ldr	r3, [pc, #244]	; (8000e30 <GPIO_Init+0x13c>)
 8000d3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d3e:	4a3c      	ldr	r2, [pc, #240]	; (8000e30 <GPIO_Init+0x13c>)
 8000d40:	f043 0301 	orr.w	r3, r3, #1
 8000d44:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d46:	4b3a      	ldr	r3, [pc, #232]	; (8000e30 <GPIO_Init+0x13c>)
 8000d48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d4a:	f003 0301 	and.w	r3, r3, #1
 8000d4e:	61bb      	str	r3, [r7, #24]
 8000d50:	69bb      	ldr	r3, [r7, #24]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000d52:	4b37      	ldr	r3, [pc, #220]	; (8000e30 <GPIO_Init+0x13c>)
 8000d54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d56:	4a36      	ldr	r2, [pc, #216]	; (8000e30 <GPIO_Init+0x13c>)
 8000d58:	f043 0302 	orr.w	r3, r3, #2
 8000d5c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d5e:	4b34      	ldr	r3, [pc, #208]	; (8000e30 <GPIO_Init+0x13c>)
 8000d60:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d62:	f003 0302 	and.w	r3, r3, #2
 8000d66:	617b      	str	r3, [r7, #20]
 8000d68:	697b      	ldr	r3, [r7, #20]
	__HAL_RCC_GPIOA_CLK_ENABLE(); // Enable GPIOA clock
 8000d6a:	4b31      	ldr	r3, [pc, #196]	; (8000e30 <GPIO_Init+0x13c>)
 8000d6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d6e:	4a30      	ldr	r2, [pc, #192]	; (8000e30 <GPIO_Init+0x13c>)
 8000d70:	f043 0301 	orr.w	r3, r3, #1
 8000d74:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d76:	4b2e      	ldr	r3, [pc, #184]	; (8000e30 <GPIO_Init+0x13c>)
 8000d78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d7a:	f003 0301 	and.w	r3, r3, #1
 8000d7e:	613b      	str	r3, [r7, #16]
 8000d80:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOA_CLK_ENABLE(); // Enable GPIOA clock
 8000d82:	4b2b      	ldr	r3, [pc, #172]	; (8000e30 <GPIO_Init+0x13c>)
 8000d84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d86:	4a2a      	ldr	r2, [pc, #168]	; (8000e30 <GPIO_Init+0x13c>)
 8000d88:	f043 0301 	orr.w	r3, r3, #1
 8000d8c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d8e:	4b28      	ldr	r3, [pc, #160]	; (8000e30 <GPIO_Init+0x13c>)
 8000d90:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d92:	f003 0301 	and.w	r3, r3, #1
 8000d96:	60fb      	str	r3, [r7, #12]
 8000d98:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE(); // Enable GPIOA clock
 8000d9a:	4b25      	ldr	r3, [pc, #148]	; (8000e30 <GPIO_Init+0x13c>)
 8000d9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d9e:	4a24      	ldr	r2, [pc, #144]	; (8000e30 <GPIO_Init+0x13c>)
 8000da0:	f043 0301 	orr.w	r3, r3, #1
 8000da4:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000da6:	4b22      	ldr	r3, [pc, #136]	; (8000e30 <GPIO_Init+0x13c>)
 8000da8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000daa:	f003 0301 	and.w	r3, r3, #1
 8000dae:	60bb      	str	r3, [r7, #8]
 8000db0:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_TIM2_CLK_ENABLE();  // Enable TIM2 clock	/*Configure GPIO pin : PtPin */
 8000db2:	4b1f      	ldr	r3, [pc, #124]	; (8000e30 <GPIO_Init+0x13c>)
 8000db4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000db6:	4a1e      	ldr	r2, [pc, #120]	; (8000e30 <GPIO_Init+0x13c>)
 8000db8:	f043 0301 	orr.w	r3, r3, #1
 8000dbc:	6593      	str	r3, [r2, #88]	; 0x58
 8000dbe:	4b1c      	ldr	r3, [pc, #112]	; (8000e30 <GPIO_Init+0x13c>)
 8000dc0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000dc2:	f003 0301 	and.w	r3, r3, #1
 8000dc6:	607b      	str	r3, [r7, #4]
 8000dc8:	687b      	ldr	r3, [r7, #4]
	GPIO_InitStruct.Pin = B1_Pin;
 8000dca:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000dce:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000dd0:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000dd4:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	62fb      	str	r3, [r7, #44]	; 0x2c
	HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000dda:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dde:	4619      	mov	r1, r3
 8000de0:	4814      	ldr	r0, [pc, #80]	; (8000e34 <GPIO_Init+0x140>)
 8000de2:	f000 fe91 	bl	8001b08 <HAL_GPIO_Init>

	GPIO_InitStruct.Pin = S1_Pin;
 8000de6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000dea:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8000dec:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 8000df0:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000df2:	2302      	movs	r3, #2
 8000df4:	62fb      	str	r3, [r7, #44]	; 0x2c
	HAL_GPIO_Init(S1_GPIO_Port, &GPIO_InitStruct);
 8000df6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dfa:	4619      	mov	r1, r3
 8000dfc:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e00:	f000 fe82 	bl	8001b08 <HAL_GPIO_Init>

	GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000e04:	2301      	movs	r3, #1
 8000e06:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e08:	2302      	movs	r3, #2
 8000e0a:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e10:	2300      	movs	r3, #0
 8000e12:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8000e14:	2301      	movs	r3, #1
 8000e16:	637b      	str	r3, [r7, #52]	; 0x34

	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e18:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e1c:	4619      	mov	r1, r3
 8000e1e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e22:	f000 fe71 	bl	8001b08 <HAL_GPIO_Init>


}
 8000e26:	bf00      	nop
 8000e28:	3738      	adds	r7, #56	; 0x38
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	bd80      	pop	{r7, pc}
 8000e2e:	bf00      	nop
 8000e30:	40021000 	.word	0x40021000
 8000e34:	48000800 	.word	0x48000800

08000e38 <UART2_Init>:
// PA.3 = USART2_RX (AF7)

#define TX_PIN 2
#define RX_PIN 3

void UART2_Init(void) {
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	af00      	add	r7, sp, #0
	// Enable the clock of USART 1 & 2
	RCC->APB1ENR1 |= RCC_APB1ENR1_USART2EN;  // Enable USART 2 clock		
 8000e3c:	4b0e      	ldr	r3, [pc, #56]	; (8000e78 <UART2_Init+0x40>)
 8000e3e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000e40:	4a0d      	ldr	r2, [pc, #52]	; (8000e78 <UART2_Init+0x40>)
 8000e42:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000e46:	6593      	str	r3, [r2, #88]	; 0x58
	// Select the USART1 clock source
	// 00: PCLK selected as USART2 clock
	// 01: System clock (SYSCLK) selected as USART2 clock
	// 10: HSI16 clock selected as USART2 clock
	// 11: LSE clock selected as USART2 clock
	RCC->CCIPR &= ~RCC_CCIPR_USART2SEL;
 8000e48:	4b0b      	ldr	r3, [pc, #44]	; (8000e78 <UART2_Init+0x40>)
 8000e4a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e4e:	4a0a      	ldr	r2, [pc, #40]	; (8000e78 <UART2_Init+0x40>)
 8000e50:	f023 030c 	bic.w	r3, r3, #12
 8000e54:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	RCC->CCIPR |=  RCC_CCIPR_USART2SEL_0;
 8000e58:	4b07      	ldr	r3, [pc, #28]	; (8000e78 <UART2_Init+0x40>)
 8000e5a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e5e:	4a06      	ldr	r2, [pc, #24]	; (8000e78 <UART2_Init+0x40>)
 8000e60:	f043 0304 	orr.w	r3, r3, #4
 8000e64:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	
	UART2_GPIO_Init();
 8000e68:	f000 f80a 	bl	8000e80 <UART2_GPIO_Init>
	USART_Init(USART2);
 8000e6c:	4803      	ldr	r0, [pc, #12]	; (8000e7c <UART2_Init+0x44>)
 8000e6e:	f000 f84f 	bl	8000f10 <USART_Init>
	
	//NVIC_SetPriority(USART2_IRQn, 0);			// Set Priority to 1
	//NVIC_EnableIRQ(USART2_IRQn);					// Enable interrupt of USART1 peripheral
}
 8000e72:	bf00      	nop
 8000e74:	bd80      	pop	{r7, pc}
 8000e76:	bf00      	nop
 8000e78:	40021000 	.word	0x40021000
 8000e7c:	40004400 	.word	0x40004400

08000e80 <UART2_GPIO_Init>:

void UART2_GPIO_Init(void) {
 8000e80:	b480      	push	{r7}
 8000e82:	af00      	add	r7, sp, #0
	
	// Enable the peripheral clock of GPIO Port
	RCC->AHB2ENR |=   RCC_AHB2ENR_GPIOAEN;
 8000e84:	4b21      	ldr	r3, [pc, #132]	; (8000f0c <UART2_GPIO_Init+0x8c>)
 8000e86:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000e88:	4a20      	ldr	r2, [pc, #128]	; (8000f0c <UART2_GPIO_Init+0x8c>)
 8000e8a:	f043 0301 	orr.w	r3, r3, #1
 8000e8e:	64d3      	str	r3, [r2, #76]	; 0x4c
	// PA2 = USART2_TX (AF7)
	// PA3 = USART2_RX (AF7)
	// Alternate function, High Speed, Push pull, Pull up
	// **********************************************************
	// Input(00), Output(01), AlterFunc(10), Analog(11)
	GPIOA->MODER   &= ~(3<<(2*TX_PIN) | 3<<(2*RX_PIN));	// Clear bits
 8000e90:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000e9a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000e9e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER   |=   2<<(2*TX_PIN) | 2<<(2*RX_PIN); 
 8000ea0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eaa:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000eae:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0]  &= ~(0xF<<(4*TX_PIN) | 0xF<<(4*RX_PIN));	
 8000eb0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000eb4:	6a1b      	ldr	r3, [r3, #32]
 8000eb6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eba:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8000ebe:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |=   7<<(4*TX_PIN) | 7<<(4*RX_PIN);       	
 8000ec0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ec4:	6a1b      	ldr	r3, [r3, #32]
 8000ec6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eca:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000ece:	6213      	str	r3, [r2, #32]
	// GPIO Speed: Low speed (00), Medium speed (01), Fast speed (10), High speed (11)
	GPIOA->OSPEEDR |=   3<<(2*TX_PIN) | 3<<(2*RX_PIN); 					 	
 8000ed0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ed4:	689b      	ldr	r3, [r3, #8]
 8000ed6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eda:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8000ede:	6093      	str	r3, [r2, #8]
	// GPIO Push-Pull: No pull-up, pull-down (00), Pull-up (01), Pull-down (10), Reserved (11)
	GPIOA->PUPDR   &= ~(3<<(2*TX_PIN) | 3<<(2*RX_PIN));
 8000ee0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ee4:	68db      	ldr	r3, [r3, #12]
 8000ee6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eea:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000eee:	60d3      	str	r3, [r2, #12]
	// GPIO Output Type: Output push-pull (0, reset), Output open drain (1) 
	GPIOA->OTYPER  &=  ~(1<<TX_PIN | 1<<RX_PIN);       	
 8000ef0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ef4:	685b      	ldr	r3, [r3, #4]
 8000ef6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000efa:	f023 030c 	bic.w	r3, r3, #12
 8000efe:	6053      	str	r3, [r2, #4]
}
 8000f00:	bf00      	nop
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	40021000 	.word	0x40021000

08000f10 <USART_Init>:


void USART_Init (USART_TypeDef * USARTx) {
 8000f10:	b480      	push	{r7}
 8000f12:	b083      	sub	sp, #12
 8000f14:	af00      	add	r7, sp, #0
 8000f16:	6078      	str	r0, [r7, #4]
	// Default setting: 
	//     No hardware flow control, 8 data bits, no parity, 1 start bit and 1 stop bit		
	USARTx->CR1 &= ~USART_CR1_UE;  // Disable USART
 8000f18:	687b      	ldr	r3, [r7, #4]
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	f023 0201 	bic.w	r2, r3, #1
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	601a      	str	r2, [r3, #0]
	
	// Configure word length to 8 bit
	USARTx->CR1 &= ~USART_CR1_M;   // M: 00 = 8 data bits, 01 = 9 data bits, 10 = 7 data bits
 8000f24:	687b      	ldr	r3, [r7, #4]
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	f023 2210 	bic.w	r2, r3, #268439552	; 0x10001000
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	601a      	str	r2, [r3, #0]
	
	// Configure oversampling mode: Oversampling by 16 
	USARTx->CR1 &= ~USART_CR1_OVER8;  // 0 = oversampling by 16, 1 = oversampling by 8
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	601a      	str	r2, [r3, #0]
	
	// Configure stop bits to 1 stop bit
	//   00: 1 Stop bit;      01: 0.5 Stop bit
	//   10: 2 Stop bits;     11: 1.5 Stop bit
	USARTx->CR2 &= ~USART_CR2_STOP;   
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	685b      	ldr	r3, [r3, #4]
 8000f40:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	605a      	str	r2, [r3, #4]
	// CSet Baudrate to 9600 using APB frequency (80,000,000 Hz)
	// If oversampling by 16, Tx/Rx baud = f_CK / USARTDIV,  
	// If oversampling by 8,  Tx/Rx baud = 2*f_CK / USARTDIV
  // When OVER8 = 0, BRR = USARTDIV
	// USARTDIV = 80MHz/9600 = 8333 = 0x208D
	USARTx->BRR  = 0x208D; // Limited to 16 bits
 8000f48:	687b      	ldr	r3, [r7, #4]
 8000f4a:	f242 028d 	movw	r2, #8333	; 0x208d
 8000f4e:	60da      	str	r2, [r3, #12]

	USARTx->CR1  |= (USART_CR1_RE | USART_CR1_TE);  	// Transmitter and Receiver enable
 8000f50:	687b      	ldr	r3, [r7, #4]
 8000f52:	681b      	ldr	r3, [r3, #0]
 8000f54:	f043 020c 	orr.w	r2, r3, #12
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	601a      	str	r2, [r3, #0]
	
  if (USARTx == UART4){	
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	4a2c      	ldr	r2, [pc, #176]	; (8001010 <USART_Init+0x100>)
 8000f60:	4293      	cmp	r3, r2
 8000f62:	d129      	bne.n	8000fb8 <USART_Init+0xa8>
		USARTx->CR1 |= USART_CR1_RXNEIE;  			// Received Data Ready to be Read Interrupt  
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	f043 0220 	orr.w	r2, r3, #32
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_TCIE;    			// Transmission Complete Interrupt 
 8000f70:	687b      	ldr	r3, [r7, #4]
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_IDLEIE;  			// Idle Line Detected Interrupt 
 8000f7c:	687b      	ldr	r3, [r7, #4]
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	f023 0210 	bic.w	r2, r3, #16
 8000f84:	687b      	ldr	r3, [r7, #4]
 8000f86:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_TXEIE;   			// Transmit Data Register Empty Interrupt 
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_PEIE;    			// Parity Error Interrupt 
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR2_LBDIE;				// LIN Break Detection Interrupt Enable
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	681b      	ldr	r3, [r3, #0]
 8000fa4:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR3_EIE;					// Error Interrupt Enable (Frame error, noise error, overrun error) 
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	f023 0201 	bic.w	r2, r3, #1
 8000fb4:	687b      	ldr	r3, [r7, #4]
 8000fb6:	601a      	str	r2, [r3, #0]
		//USARTx->CR3 &= ~USART_CR3_CTSIE;				// CTS Interrupt
	}

	if (USARTx == USART2){
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	4a16      	ldr	r2, [pc, #88]	; (8001014 <USART_Init+0x104>)
 8000fbc:	4293      	cmp	r3, r2
 8000fbe:	d10b      	bne.n	8000fd8 <USART_Init+0xc8>
		USARTx->ICR |= USART_ICR_TCCF;
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	6a1b      	ldr	r3, [r3, #32]
 8000fc4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	621a      	str	r2, [r3, #32]
		USART1->CR3 |= USART_CR3_DMAT | USART_CR3_DMAR;
 8000fcc:	4b12      	ldr	r3, [pc, #72]	; (8001018 <USART_Init+0x108>)
 8000fce:	689b      	ldr	r3, [r3, #8]
 8000fd0:	4a11      	ldr	r2, [pc, #68]	; (8001018 <USART_Init+0x108>)
 8000fd2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8000fd6:	6093      	str	r3, [r2, #8]
	}
	
	USARTx->CR1  |= USART_CR1_UE; // USART enable                 
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	f043 0201 	orr.w	r2, r3, #1
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	601a      	str	r2, [r3, #0]
	
	while ( (USARTx->ISR & USART_ISR_TEACK) == 0); // Verify that the USART is ready for reception
 8000fe4:	bf00      	nop
 8000fe6:	687b      	ldr	r3, [r7, #4]
 8000fe8:	69db      	ldr	r3, [r3, #28]
 8000fea:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	d0f9      	beq.n	8000fe6 <USART_Init+0xd6>
	while ( (USARTx->ISR & USART_ISR_REACK) == 0); // Verify that the USART is ready for transmission
 8000ff2:	bf00      	nop
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	69db      	ldr	r3, [r3, #28]
 8000ff8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000ffc:	2b00      	cmp	r3, #0
 8000ffe:	d0f9      	beq.n	8000ff4 <USART_Init+0xe4>
}
 8001000:	bf00      	nop
 8001002:	bf00      	nop
 8001004:	370c      	adds	r7, #12
 8001006:	46bd      	mov	sp, r7
 8001008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800100c:	4770      	bx	lr
 800100e:	bf00      	nop
 8001010:	40004c00 	.word	0x40004c00
 8001014:	40004400 	.word	0x40004400
 8001018:	40013800 	.word	0x40013800

0800101c <USART_Read>:


uint8_t USART_Read (USART_TypeDef * USARTx) {
 800101c:	b480      	push	{r7}
 800101e:	b083      	sub	sp, #12
 8001020:	af00      	add	r7, sp, #0
 8001022:	6078      	str	r0, [r7, #4]
	// SR_RXNE (Read data register not empty) bit is set by hardware
	while (!(USARTx->ISR & USART_ISR_RXNE));  // Wait until RXNE (RX not empty) bit is set
 8001024:	bf00      	nop
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	69db      	ldr	r3, [r3, #28]
 800102a:	f003 0320 	and.w	r3, r3, #32
 800102e:	2b00      	cmp	r3, #0
 8001030:	d0f9      	beq.n	8001026 <USART_Read+0xa>
	// USART resets the RXNE flag automatically after reading DR
	return ((uint8_t)(USARTx->RDR & 0xFF));
 8001032:	687b      	ldr	r3, [r7, #4]
 8001034:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8001036:	b29b      	uxth	r3, r3
 8001038:	b2db      	uxtb	r3, r3
	// Reading USART_DR automatically clears the RXNE flag 
}
 800103a:	4618      	mov	r0, r3
 800103c:	370c      	adds	r7, #12
 800103e:	46bd      	mov	sp, r7
 8001040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001044:	4770      	bx	lr

08001046 <USART_Write>:

void USART_Write(USART_TypeDef * USARTx, uint8_t *buffer, uint32_t nBytes) {
 8001046:	b580      	push	{r7, lr}
 8001048:	b086      	sub	sp, #24
 800104a:	af00      	add	r7, sp, #0
 800104c:	60f8      	str	r0, [r7, #12]
 800104e:	60b9      	str	r1, [r7, #8]
 8001050:	607a      	str	r2, [r7, #4]
	int i;
	// TXE is cleared by a write to the USART_DR register.
	// TXE is set by hardware when the content of the TDR 
	// register has been transferred into the shift register.
	for (i = 0; i < nBytes; i++) {
 8001052:	2300      	movs	r3, #0
 8001054:	617b      	str	r3, [r7, #20]
 8001056:	e014      	b.n	8001082 <USART_Write+0x3c>
		while (!(USARTx->ISR & USART_ISR_TXE));   	// wait until TXE (TX empty) bit is set
 8001058:	bf00      	nop
 800105a:	68fb      	ldr	r3, [r7, #12]
 800105c:	69db      	ldr	r3, [r3, #28]
 800105e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001062:	2b00      	cmp	r3, #0
 8001064:	d0f9      	beq.n	800105a <USART_Write+0x14>
		// Writing USART_DR automatically clears the TXE flag 	
		USARTx->TDR = buffer[i] & 0xFF;
 8001066:	697b      	ldr	r3, [r7, #20]
 8001068:	68ba      	ldr	r2, [r7, #8]
 800106a:	4413      	add	r3, r2
 800106c:	781b      	ldrb	r3, [r3, #0]
 800106e:	b29a      	uxth	r2, r3
 8001070:	68fb      	ldr	r3, [r7, #12]
 8001072:	851a      	strh	r2, [r3, #40]	; 0x28
		USART_Delay(300);
 8001074:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001078:	f000 f818 	bl	80010ac <USART_Delay>
	for (i = 0; i < nBytes; i++) {
 800107c:	697b      	ldr	r3, [r7, #20]
 800107e:	3301      	adds	r3, #1
 8001080:	617b      	str	r3, [r7, #20]
 8001082:	697b      	ldr	r3, [r7, #20]
 8001084:	687a      	ldr	r2, [r7, #4]
 8001086:	429a      	cmp	r2, r3
 8001088:	d8e6      	bhi.n	8001058 <USART_Write+0x12>
	}
	while (!(USARTx->ISR & USART_ISR_TC));   		  // wait until TC bit is set
 800108a:	bf00      	nop
 800108c:	68fb      	ldr	r3, [r7, #12]
 800108e:	69db      	ldr	r3, [r3, #28]
 8001090:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001094:	2b00      	cmp	r3, #0
 8001096:	d0f9      	beq.n	800108c <USART_Write+0x46>
	USARTx->ISR &= ~USART_ISR_TC;
 8001098:	68fb      	ldr	r3, [r7, #12]
 800109a:	69db      	ldr	r3, [r3, #28]
 800109c:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 80010a0:	68fb      	ldr	r3, [r7, #12]
 80010a2:	61da      	str	r2, [r3, #28]
}   
 80010a4:	bf00      	nop
 80010a6:	3718      	adds	r7, #24
 80010a8:	46bd      	mov	sp, r7
 80010aa:	bd80      	pop	{r7, pc}

080010ac <USART_Delay>:
 

void USART_Delay(uint32_t us) {
 80010ac:	b480      	push	{r7}
 80010ae:	b085      	sub	sp, #20
 80010b0:	af00      	add	r7, sp, #0
 80010b2:	6078      	str	r0, [r7, #4]
	uint32_t time = 100*us/7;    
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	2264      	movs	r2, #100	; 0x64
 80010b8:	fb03 f202 	mul.w	r2, r3, r2
 80010bc:	4b0a      	ldr	r3, [pc, #40]	; (80010e8 <USART_Delay+0x3c>)
 80010be:	fba3 1302 	umull	r1, r3, r3, r2
 80010c2:	1ad2      	subs	r2, r2, r3
 80010c4:	0852      	lsrs	r2, r2, #1
 80010c6:	4413      	add	r3, r2
 80010c8:	089b      	lsrs	r3, r3, #2
 80010ca:	60fb      	str	r3, [r7, #12]
	while(--time);   
 80010cc:	bf00      	nop
 80010ce:	68fb      	ldr	r3, [r7, #12]
 80010d0:	3b01      	subs	r3, #1
 80010d2:	60fb      	str	r3, [r7, #12]
 80010d4:	68fb      	ldr	r3, [r7, #12]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d1f9      	bne.n	80010ce <USART_Delay+0x22>
}
 80010da:	bf00      	nop
 80010dc:	bf00      	nop
 80010de:	3714      	adds	r7, #20
 80010e0:	46bd      	mov	sp, r7
 80010e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e6:	4770      	bx	lr
 80010e8:	24924925 	.word	0x24924925

080010ec <Clock_Init>:
#include "clock.h"
void Clock_Init(void){
 80010ec:	b480      	push	{r7}
 80010ee:	b083      	sub	sp, #12
 80010f0:	af00      	add	r7, sp, #0
	// disable input capture to configure
	TIM2->CCER &= ~(TIM_CCER_CC1E);
 80010f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010f6:	6a1b      	ldr	r3, [r3, #32]
 80010f8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80010fc:	f023 0301 	bic.w	r3, r3, #1
 8001100:	6213      	str	r3, [r2, #32]
	// Load the prescaler value into the TIM2->PSC register
	TIM2->PSC = 3;
 8001102:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001106:	2203      	movs	r2, #3
 8001108:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->EGR |= TIM_EGR_UG;
 800110a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800110e:	695b      	ldr	r3, [r3, #20]
 8001110:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001114:	f043 0301 	orr.w	r3, r3, #1
 8001118:	6153      	str	r3, [r2, #20]

	// Enable clock for TIM2
	RCC->AHB1ENR |= RCC_AHB2ENR_GPIOAEN;
 800111a:	4ba2      	ldr	r3, [pc, #648]	; (80013a4 <Clock_Init+0x2b8>)
 800111c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800111e:	4aa1      	ldr	r2, [pc, #644]	; (80013a4 <Clock_Init+0x2b8>)
 8001120:	f043 0301 	orr.w	r3, r3, #1
 8001124:	6493      	str	r3, [r2, #72]	; 0x48
	RCC->APB1ENR1 |= RCC_APB1ENR1_TIM2EN;
 8001126:	4b9f      	ldr	r3, [pc, #636]	; (80013a4 <Clock_Init+0x2b8>)
 8001128:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800112a:	4a9e      	ldr	r2, [pc, #632]	; (80013a4 <Clock_Init+0x2b8>)
 800112c:	f043 0301 	orr.w	r3, r3, #1
 8001130:	6593      	str	r3, [r2, #88]	; 0x58


	// configure input capture for channel 1 for rising edge
	TIM2->CCMR1 &= ~(TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC1S_1);
 8001132:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001136:	699b      	ldr	r3, [r3, #24]
 8001138:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800113c:	f023 0303 	bic.w	r3, r3, #3
 8001140:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 |= TIM_CCMR1_CC1S_0;
 8001142:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001146:	699b      	ldr	r3, [r3, #24]
 8001148:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800114c:	f043 0301 	orr.w	r3, r3, #1
 8001150:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 &= ~TIM_CCMR1_IC1F;
 8001152:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001156:	699b      	ldr	r3, [r3, #24]
 8001158:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800115c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001160:	6193      	str	r3, [r2, #24]

	// Set input capture for rising edge
	TIM2->CCER &= ~TIM_CCER_CC1P; // Clear CC1P bit for rising edge detection on channel 1
 8001162:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001166:	6a1b      	ldr	r3, [r3, #32]
 8001168:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800116c:	f023 0302 	bic.w	r3, r3, #2
 8001170:	6213      	str	r3, [r2, #32]

	TIM2->CCER |= TIM_CCER_CC1E;
 8001172:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001176:	6a1b      	ldr	r3, [r3, #32]
 8001178:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800117c:	f043 0301 	orr.w	r3, r3, #1
 8001180:	6213      	str	r3, [r2, #32]
	// set it for alternative channel
	GPIOA->MODER &= ~(3UL << (0 * 2));
 8001182:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800118c:	f023 0303 	bic.w	r3, r3, #3
 8001190:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (2 << (0 * 2));
 8001192:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800119c:	f043 0302 	orr.w	r3, r3, #2
 80011a0:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0] &= ~(0xF << (0 * 4));
 80011a2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011a6:	6a1b      	ldr	r3, [r3, #32]
 80011a8:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011ac:	f023 030f 	bic.w	r3, r3, #15
 80011b0:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1 << (0 * 4));
 80011b2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011b6:	6a1b      	ldr	r3, [r3, #32]
 80011b8:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011bc:	f043 0301 	orr.w	r3, r3, #1
 80011c0:	6213      	str	r3, [r2, #32]

	// enable timer counter

	TIM2->CR1 |= TIM_CR1_CEN;
 80011c2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80011cc:	f043 0301 	orr.w	r3, r3, #1
 80011d0:	6013      	str	r3, [r2, #0]

	// Clear all pending interrupts
	TIM2->SR = 0;
 80011d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80011d6:	2200      	movs	r2, #0
 80011d8:	611a      	str	r2, [r3, #16]


	// Generate an update event to immediately update the prescaler value

	//
	TIM2->CR1 |= TIM_CR1_CEN;
 80011da:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80011e4:	f043 0301 	orr.w	r3, r3, #1
 80011e8:	6013      	str	r3, [r2, #0]

	RCC->CR |= ((uint32_t)RCC_CR_HSION);
 80011ea:	4b6e      	ldr	r3, [pc, #440]	; (80013a4 <Clock_Init+0x2b8>)
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	4a6d      	ldr	r2, [pc, #436]	; (80013a4 <Clock_Init+0x2b8>)
 80011f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80011f4:	6013      	str	r3, [r2, #0]
	uint32_t HSITrim;

	// To correctly read data from FLASH memory, the number of wait states (LATENCY)
  // must be correctly programmed according to the frequency of the CPU clock
  // (HCLK) and the supply voltage of the device.		
	FLASH->ACR &= ~FLASH_ACR_LATENCY;
 80011f6:	4b6c      	ldr	r3, [pc, #432]	; (80013a8 <Clock_Init+0x2bc>)
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	4a6b      	ldr	r2, [pc, #428]	; (80013a8 <Clock_Init+0x2bc>)
 80011fc:	f023 0307 	bic.w	r3, r3, #7
 8001200:	6013      	str	r3, [r2, #0]
	FLASH->ACR |=  FLASH_ACR_LATENCY_2WS;
 8001202:	4b69      	ldr	r3, [pc, #420]	; (80013a8 <Clock_Init+0x2bc>)
 8001204:	681b      	ldr	r3, [r3, #0]
 8001206:	4a68      	ldr	r2, [pc, #416]	; (80013a8 <Clock_Init+0x2bc>)
 8001208:	f043 0302 	orr.w	r3, r3, #2
 800120c:	6013      	str	r3, [r2, #0]
		
	// Enable the Internal High Speed oscillator (HSI
	RCC->CR |= RCC_CR_HSION;
 800120e:	4b65      	ldr	r3, [pc, #404]	; (80013a4 <Clock_Init+0x2b8>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	4a64      	ldr	r2, [pc, #400]	; (80013a4 <Clock_Init+0x2b8>)
 8001214:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001218:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_HSIRDY) == 0);
 800121a:	bf00      	nop
 800121c:	4b61      	ldr	r3, [pc, #388]	; (80013a4 <Clock_Init+0x2b8>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001224:	2b00      	cmp	r3, #0
 8001226:	d0f9      	beq.n	800121c <Clock_Init+0x130>
	// Adjusts the Internal High Speed oscillator (HSI) calibration value
	// RC oscillator frequencies are factory calibrated by ST for 1 % accuracy at 25oC
	// After reset, the factory calibration value is loaded in HSICAL[7:0] of RCC_ICSCR	
	HSITrim = 16; // user-programmable trimming value that is added to HSICAL[7:0] in ICSCR.
 8001228:	2310      	movs	r3, #16
 800122a:	607b      	str	r3, [r7, #4]
	RCC->ICSCR &= ~RCC_ICSCR_HSITRIM;
 800122c:	4b5d      	ldr	r3, [pc, #372]	; (80013a4 <Clock_Init+0x2b8>)
 800122e:	685b      	ldr	r3, [r3, #4]
 8001230:	4a5c      	ldr	r2, [pc, #368]	; (80013a4 <Clock_Init+0x2b8>)
 8001232:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 8001236:	6053      	str	r3, [r2, #4]
	RCC->ICSCR |= HSITrim << 24;
 8001238:	4b5a      	ldr	r3, [pc, #360]	; (80013a4 <Clock_Init+0x2b8>)
 800123a:	685a      	ldr	r2, [r3, #4]
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	061b      	lsls	r3, r3, #24
 8001240:	4958      	ldr	r1, [pc, #352]	; (80013a4 <Clock_Init+0x2b8>)
 8001242:	4313      	orrs	r3, r2
 8001244:	604b      	str	r3, [r1, #4]
	
	RCC->CR    &= ~RCC_CR_PLLON; 
 8001246:	4b57      	ldr	r3, [pc, #348]	; (80013a4 <Clock_Init+0x2b8>)
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	4a56      	ldr	r2, [pc, #344]	; (80013a4 <Clock_Init+0x2b8>)
 800124c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001250:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == RCC_CR_PLLRDY);
 8001252:	bf00      	nop
 8001254:	4b53      	ldr	r3, [pc, #332]	; (80013a4 <Clock_Init+0x2b8>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800125c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8001260:	d0f8      	beq.n	8001254 <Clock_Init+0x168>
	
	// Select clock source to PLL
	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLSRC;
 8001262:	4b50      	ldr	r3, [pc, #320]	; (80013a4 <Clock_Init+0x2b8>)
 8001264:	68db      	ldr	r3, [r3, #12]
 8001266:	4a4f      	ldr	r2, [pc, #316]	; (80013a4 <Clock_Init+0x2b8>)
 8001268:	f023 0303 	bic.w	r3, r3, #3
 800126c:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC_HSI; // 00 = No clock, 01 = MSI, 10 = HSI, 11 = HSE
 800126e:	4b4d      	ldr	r3, [pc, #308]	; (80013a4 <Clock_Init+0x2b8>)
 8001270:	68db      	ldr	r3, [r3, #12]
 8001272:	4a4c      	ldr	r2, [pc, #304]	; (80013a4 <Clock_Init+0x2b8>)
 8001274:	f043 0302 	orr.w	r3, r3, #2
 8001278:	60d3      	str	r3, [r2, #12]
	
	// Make PLL as 80 MHz
	// f(VCO clock) = f(PLL clock input) * (PLLN / PLLM) = 16MHz * 20/2 = 160 MHz
	// f(PLL_R) = f(VCO clock) / PLLR = 160MHz/2 = 80MHz
	RCC->PLLCFGR = (RCC->PLLCFGR & ~RCC_PLLCFGR_PLLN) | 20U << 8;
 800127a:	4b4a      	ldr	r3, [pc, #296]	; (80013a4 <Clock_Init+0x2b8>)
 800127c:	68db      	ldr	r3, [r3, #12]
 800127e:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001282:	4a48      	ldr	r2, [pc, #288]	; (80013a4 <Clock_Init+0x2b8>)
 8001284:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8001288:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR = (RCC->PLLCFGR & ~RCC_PLLCFGR_PLLM) | 1U << 4; // 000: PLLM = 1, 001: PLLM = 2, 010: PLLM = 3, 011: PLLM = 4, 100: PLLM = 5, 101: PLLM = 6, 110: PLLM = 7, 111: PLLM = 8
 800128a:	4b46      	ldr	r3, [pc, #280]	; (80013a4 <Clock_Init+0x2b8>)
 800128c:	68db      	ldr	r3, [r3, #12]
 800128e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001292:	4a44      	ldr	r2, [pc, #272]	; (80013a4 <Clock_Init+0x2b8>)
 8001294:	f043 0310 	orr.w	r3, r3, #16
 8001298:	60d3      	str	r3, [r2, #12]

	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLR;  // 00: PLLR = 2, 01: PLLR = 4, 10: PLLR = 6, 11: PLLR = 8	
 800129a:	4b42      	ldr	r3, [pc, #264]	; (80013a4 <Clock_Init+0x2b8>)
 800129c:	68db      	ldr	r3, [r3, #12]
 800129e:	4a41      	ldr	r2, [pc, #260]	; (80013a4 <Clock_Init+0x2b8>)
 80012a0:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 80012a4:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLREN; // Enable Main PLL PLLCLK output 
 80012a6:	4b3f      	ldr	r3, [pc, #252]	; (80013a4 <Clock_Init+0x2b8>)
 80012a8:	68db      	ldr	r3, [r3, #12]
 80012aa:	4a3e      	ldr	r2, [pc, #248]	; (80013a4 <Clock_Init+0x2b8>)
 80012ac:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80012b0:	60d3      	str	r3, [r2, #12]

	RCC->CR   |= RCC_CR_PLLON; 
 80012b2:	4b3c      	ldr	r3, [pc, #240]	; (80013a4 <Clock_Init+0x2b8>)
 80012b4:	681b      	ldr	r3, [r3, #0]
 80012b6:	4a3b      	ldr	r2, [pc, #236]	; (80013a4 <Clock_Init+0x2b8>)
 80012b8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80012bc:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == 0);
 80012be:	bf00      	nop
 80012c0:	4b38      	ldr	r3, [pc, #224]	; (80013a4 <Clock_Init+0x2b8>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d0f9      	beq.n	80012c0 <Clock_Init+0x1d4>
	
	// Select PLL selected as system clock
	RCC->CFGR &= ~RCC_CFGR_SW;
 80012cc:	4b35      	ldr	r3, [pc, #212]	; (80013a4 <Clock_Init+0x2b8>)
 80012ce:	689b      	ldr	r3, [r3, #8]
 80012d0:	4a34      	ldr	r2, [pc, #208]	; (80013a4 <Clock_Init+0x2b8>)
 80012d2:	f023 0303 	bic.w	r3, r3, #3
 80012d6:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_SW_PLL; // 00: MSI, 01:HSI, 10: HSE, 11: PLL
 80012d8:	4b32      	ldr	r3, [pc, #200]	; (80013a4 <Clock_Init+0x2b8>)
 80012da:	689b      	ldr	r3, [r3, #8]
 80012dc:	4a31      	ldr	r2, [pc, #196]	; (80013a4 <Clock_Init+0x2b8>)
 80012de:	f043 0303 	orr.w	r3, r3, #3
 80012e2:	6093      	str	r3, [r2, #8]
	
	// Wait until System Clock has been selected
	while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 80012e4:	bf00      	nop
 80012e6:	4b2f      	ldr	r3, [pc, #188]	; (80013a4 <Clock_Init+0x2b8>)
 80012e8:	689b      	ldr	r3, [r3, #8]
 80012ea:	f003 030c 	and.w	r3, r3, #12
 80012ee:	2b0c      	cmp	r3, #12
 80012f0:	d1f9      	bne.n	80012e6 <Clock_Init+0x1fa>
	
	// The maximum frequency of the AHB, the APB1 and the APB2 domains is 80 MHz.
	RCC->CFGR &= ~RCC_CFGR_HPRE;  // AHB prescaler = 1; SYSCLK not divided
 80012f2:	4b2c      	ldr	r3, [pc, #176]	; (80013a4 <Clock_Init+0x2b8>)
 80012f4:	689b      	ldr	r3, [r3, #8]
 80012f6:	4a2b      	ldr	r2, [pc, #172]	; (80013a4 <Clock_Init+0x2b8>)
 80012f8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80012fc:	6093      	str	r3, [r2, #8]
	RCC->CFGR &= ~RCC_CFGR_PPRE1; // APB high-speed prescaler (APB1) = 1, HCLK not divided
 80012fe:	4b29      	ldr	r3, [pc, #164]	; (80013a4 <Clock_Init+0x2b8>)
 8001300:	689b      	ldr	r3, [r3, #8]
 8001302:	4a28      	ldr	r2, [pc, #160]	; (80013a4 <Clock_Init+0x2b8>)
 8001304:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001308:	6093      	str	r3, [r2, #8]
	RCC->CFGR &= ~RCC_CFGR_PPRE2; // APB high-speed prescaler (APB2) = 1, HCLK not divided
 800130a:	4b26      	ldr	r3, [pc, #152]	; (80013a4 <Clock_Init+0x2b8>)
 800130c:	689b      	ldr	r3, [r3, #8]
 800130e:	4a25      	ldr	r2, [pc, #148]	; (80013a4 <Clock_Init+0x2b8>)
 8001310:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8001314:	6093      	str	r3, [r2, #8]
	// RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLP; 
	// RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLQ;	
	// RCC->PLLCFGR |= RCC_PLLCFGR_PLLPEN; // Enable Main PLL PLLSAI3CLK output enable
	// RCC->PLLCFGR |= RCC_PLLCFGR_PLLQEN; // Enable Main PLL PLL48M1CLK output enable
	
	RCC->CR &= ~RCC_CR_PLLSAI1ON;  // SAI1 PLL enable
 8001316:	4b23      	ldr	r3, [pc, #140]	; (80013a4 <Clock_Init+0x2b8>)
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	4a22      	ldr	r2, [pc, #136]	; (80013a4 <Clock_Init+0x2b8>)
 800131c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001320:	6013      	str	r3, [r2, #0]
	while ( (RCC->CR & RCC_CR_PLLSAI1ON) == RCC_CR_PLLSAI1ON );
 8001322:	bf00      	nop
 8001324:	4b1f      	ldr	r3, [pc, #124]	; (80013a4 <Clock_Init+0x2b8>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800132c:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8001330:	d0f8      	beq.n	8001324 <Clock_Init+0x238>
	// 8 MHz * 24 / 17 = 11.294MHz
	// f(VCOSAI1 clock) = f(PLL clock input) *  (PLLSAI1N / PLLM)
	// PLLSAI1CLK: f(PLLSAI1_P) = f(VCOSAI1 clock) / PLLSAI1P
	// PLLUSB2CLK: f(PLLSAI1_Q) = f(VCOSAI1 clock) / PLLSAI1Q
	// PLLADC1CLK: f(PLLSAI1_R) = f(VCOSAI1 clock) / PLLSAI1R
	RCC->PLLSAI1CFGR &= ~RCC_PLLSAI1CFGR_PLLSAI1N;
 8001332:	4b1c      	ldr	r3, [pc, #112]	; (80013a4 <Clock_Init+0x2b8>)
 8001334:	691b      	ldr	r3, [r3, #16]
 8001336:	4a1b      	ldr	r2, [pc, #108]	; (80013a4 <Clock_Init+0x2b8>)
 8001338:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 800133c:	6113      	str	r3, [r2, #16]
	RCC->PLLSAI1CFGR |= 24U<<8;
 800133e:	4b19      	ldr	r3, [pc, #100]	; (80013a4 <Clock_Init+0x2b8>)
 8001340:	691b      	ldr	r3, [r3, #16]
 8001342:	4a18      	ldr	r2, [pc, #96]	; (80013a4 <Clock_Init+0x2b8>)
 8001344:	f443 53c0 	orr.w	r3, r3, #6144	; 0x1800
 8001348:	6113      	str	r3, [r2, #16]
	
	// SAI1PLL division factor for PLLSAI1CLK
	// 0: PLLSAI1P = 7, 1: PLLSAI1P = 17
	RCC->PLLSAI1CFGR |= RCC_PLLSAI1CFGR_PLLSAI1P;
 800134a:	4b16      	ldr	r3, [pc, #88]	; (80013a4 <Clock_Init+0x2b8>)
 800134c:	691b      	ldr	r3, [r3, #16]
 800134e:	4a15      	ldr	r2, [pc, #84]	; (80013a4 <Clock_Init+0x2b8>)
 8001350:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001354:	6113      	str	r3, [r2, #16]
	RCC->PLLSAI1CFGR |= RCC_PLLSAI1CFGR_PLLSAI1PEN;
 8001356:	4b13      	ldr	r3, [pc, #76]	; (80013a4 <Clock_Init+0x2b8>)
 8001358:	691b      	ldr	r3, [r3, #16]
 800135a:	4a12      	ldr	r2, [pc, #72]	; (80013a4 <Clock_Init+0x2b8>)
 800135c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001360:	6113      	str	r3, [r2, #16]
	
	
	RCC->CR |= RCC_CR_PLLSAI1ON;  // SAI1 PLL enable
 8001362:	4b10      	ldr	r3, [pc, #64]	; (80013a4 <Clock_Init+0x2b8>)
 8001364:	681b      	ldr	r3, [r3, #0]
 8001366:	4a0f      	ldr	r2, [pc, #60]	; (80013a4 <Clock_Init+0x2b8>)
 8001368:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800136c:	6013      	str	r3, [r2, #0]
	while ( (RCC->CR & RCC_CR_PLLSAI1ON) == 0);
 800136e:	bf00      	nop
 8001370:	4b0c      	ldr	r3, [pc, #48]	; (80013a4 <Clock_Init+0x2b8>)
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001378:	2b00      	cmp	r3, #0
 800137a:	d0f9      	beq.n	8001370 <Clock_Init+0x284>
	
	RCC->CCIPR &= ~RCC_CCIPR_SAI1SEL;
 800137c:	4b09      	ldr	r3, [pc, #36]	; (80013a4 <Clock_Init+0x2b8>)
 800137e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001382:	4a08      	ldr	r2, [pc, #32]	; (80013a4 <Clock_Init+0x2b8>)
 8001384:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001388:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

	RCC->APB2ENR |= RCC_APB2ENR_SAI1EN;
 800138c:	4b05      	ldr	r3, [pc, #20]	; (80013a4 <Clock_Init+0x2b8>)
 800138e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001390:	4a04      	ldr	r2, [pc, #16]	; (80013a4 <Clock_Init+0x2b8>)
 8001392:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001396:	6613      	str	r3, [r2, #96]	; 0x60
}
 8001398:	bf00      	nop
 800139a:	370c      	adds	r7, #12
 800139c:	46bd      	mov	sp, r7
 800139e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013a2:	4770      	bx	lr
 80013a4:	40021000 	.word	0x40021000
 80013a8:	40022000 	.word	0x40022000

080013ac <power_on_self_test>:
struct bucket {
  int bucket_num;
  int count;
};

int power_on_self_test(void){
 80013ac:	b480      	push	{r7}
 80013ae:	b085      	sub	sp, #20
 80013b0:	af00      	add	r7, sp, #0
	 uint32_t start_time = TIM2->CNT;
 80013b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80013b8:	60bb      	str	r3, [r7, #8]
	 uint32_t timeout = 100000; // 100 milliseconds in microseconds
 80013ba:	4b13      	ldr	r3, [pc, #76]	; (8001408 <power_on_self_test+0x5c>)
 80013bc:	607b      	str	r3, [r7, #4]
	 int pulse_detected = 0;
 80013be:	2300      	movs	r3, #0
 80013c0:	60fb      	str	r3, [r7, #12]

	    // Wait for a pulse or timeout
	 while ((TIM2->CNT - start_time) < timeout) {
 80013c2:	e011      	b.n	80013e8 <power_on_self_test+0x3c>
	    if (TIM2->SR & TIM_SR_CC1IF) { // Check if the capture/compare interrupt flag is set
 80013c4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013c8:	691b      	ldr	r3, [r3, #16]
 80013ca:	f003 0302 	and.w	r3, r3, #2
 80013ce:	2b00      	cmp	r3, #0
 80013d0:	d00a      	beq.n	80013e8 <power_on_self_test+0x3c>
	    	pulse_detected = 1;
 80013d2:	2301      	movs	r3, #1
 80013d4:	60fb      	str	r3, [r7, #12]
	        TIM2->SR &= ~TIM_SR_CC1IF; // Clear the interrupt flag
 80013d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013da:	691b      	ldr	r3, [r3, #16]
 80013dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80013e0:	f023 0302 	bic.w	r3, r3, #2
 80013e4:	6113      	str	r3, [r2, #16]
	        break; // Exit the loop if a pulse is detected
 80013e6:	e007      	b.n	80013f8 <power_on_self_test+0x4c>
	 while ((TIM2->CNT - start_time) < timeout) {
 80013e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013ec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80013ee:	68bb      	ldr	r3, [r7, #8]
 80013f0:	1ad3      	subs	r3, r2, r3
 80013f2:	687a      	ldr	r2, [r7, #4]
 80013f4:	429a      	cmp	r2, r3
 80013f6:	d8e5      	bhi.n	80013c4 <power_on_self_test+0x18>
	    }
	 }
	 return pulse_detected;
 80013f8:	68fb      	ldr	r3, [r7, #12]
}
 80013fa:	4618      	mov	r0, r3
 80013fc:	3714      	adds	r7, #20
 80013fe:	46bd      	mov	sp, r7
 8001400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001404:	4770      	bx	lr
 8001406:	bf00      	nop
 8001408:	000186a0 	.word	0x000186a0

0800140c <init_buckets>:
struct bucket buckets[101];
void init_buckets(){
 800140c:	b480      	push	{r7}
 800140e:	b083      	sub	sp, #12
 8001410:	af00      	add	r7, sp, #0
	for(int i = 0;i<=100;i++){
 8001412:	2300      	movs	r3, #0
 8001414:	607b      	str	r3, [r7, #4]
 8001416:	e010      	b.n	800143a <init_buckets+0x2e>
		buckets[i].bucket_num = i+lower_limit;
 8001418:	4b0d      	ldr	r3, [pc, #52]	; (8001450 <init_buckets+0x44>)
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	441a      	add	r2, r3
 8001420:	490c      	ldr	r1, [pc, #48]	; (8001454 <init_buckets+0x48>)
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
		buckets[i].count = 0;
 8001428:	4a0a      	ldr	r2, [pc, #40]	; (8001454 <init_buckets+0x48>)
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	00db      	lsls	r3, r3, #3
 800142e:	4413      	add	r3, r2
 8001430:	2200      	movs	r2, #0
 8001432:	605a      	str	r2, [r3, #4]
	for(int i = 0;i<=100;i++){
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	3301      	adds	r3, #1
 8001438:	607b      	str	r3, [r7, #4]
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	2b64      	cmp	r3, #100	; 0x64
 800143e:	ddeb      	ble.n	8001418 <init_buckets+0xc>
	}
}
 8001440:	bf00      	nop
 8001442:	bf00      	nop
 8001444:	370c      	adds	r7, #12
 8001446:	46bd      	mov	sp, r7
 8001448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144c:	4770      	bx	lr
 800144e:	bf00      	nop
 8001450:	20000000 	.word	0x20000000
 8001454:	20000258 	.word	0x20000258

08001458 <get_limit>:


void get_limit(void *buff, int max_length){
 8001458:	b580      	push	{r7, lr}
 800145a:	b086      	sub	sp, #24
 800145c:	af00      	add	r7, sp, #0
 800145e:	6078      	str	r0, [r7, #4]
 8001460:	6039      	str	r1, [r7, #0]
	int count = 0;
 8001462:	2300      	movs	r3, #0
 8001464:	617b      	str	r3, [r7, #20]
	char rxByte = 0;
 8001466:	2300      	movs	r3, #0
 8001468:	74fb      	strb	r3, [r7, #19]
	while(rxByte != '\r'){
 800146a:	e028      	b.n	80014be <get_limit+0x66>
		rxByte = USART_Read(USART2);
 800146c:	4830      	ldr	r0, [pc, #192]	; (8001530 <get_limit+0xd8>)
 800146e:	f7ff fdd5 	bl	800101c <USART_Read>
 8001472:	4603      	mov	r3, r0
 8001474:	74fb      	strb	r3, [r7, #19]

		if(rxByte!= '\r'){
 8001476:	7cfb      	ldrb	r3, [r7, #19]
 8001478:	2b0d      	cmp	r3, #13
 800147a:	d020      	beq.n	80014be <get_limit+0x66>
			buffer[count] = rxByte;
 800147c:	4a2d      	ldr	r2, [pc, #180]	; (8001534 <get_limit+0xdc>)
 800147e:	697b      	ldr	r3, [r7, #20]
 8001480:	4413      	add	r3, r2
 8001482:	7cfa      	ldrb	r2, [r7, #19]
 8001484:	701a      	strb	r2, [r3, #0]
			if(!isdigit(buffer[count])){
 8001486:	4a2b      	ldr	r2, [pc, #172]	; (8001534 <get_limit+0xdc>)
 8001488:	697b      	ldr	r3, [r7, #20]
 800148a:	4413      	add	r3, r2
 800148c:	781b      	ldrb	r3, [r3, #0]
 800148e:	3301      	adds	r3, #1
 8001490:	4a29      	ldr	r2, [pc, #164]	; (8001538 <get_limit+0xe0>)
 8001492:	4413      	add	r3, r2
 8001494:	781b      	ldrb	r3, [r3, #0]
 8001496:	f003 0304 	and.w	r3, r3, #4
 800149a:	2b00      	cmp	r3, #0
 800149c:	d108      	bne.n	80014b0 <get_limit+0x58>
				printf("\r\n%s\r\n","Please input only digits");
 800149e:	4927      	ldr	r1, [pc, #156]	; (800153c <get_limit+0xe4>)
 80014a0:	4827      	ldr	r0, [pc, #156]	; (8001540 <get_limit+0xe8>)
 80014a2:	f000 f9ef 	bl	8001884 <printf>
				get_limit(buffer,sizeof(buffer));
 80014a6:	2164      	movs	r1, #100	; 0x64
 80014a8:	4822      	ldr	r0, [pc, #136]	; (8001534 <get_limit+0xdc>)
 80014aa:	f7ff ffd5 	bl	8001458 <get_limit>
				break;
 80014ae:	e009      	b.n	80014c4 <get_limit+0x6c>
			}
			count++;
 80014b0:	697b      	ldr	r3, [r7, #20]
 80014b2:	3301      	adds	r3, #1
 80014b4:	617b      	str	r3, [r7, #20]
			printf("%c",rxByte);
 80014b6:	7cfb      	ldrb	r3, [r7, #19]
 80014b8:	4618      	mov	r0, r3
 80014ba:	f000 f9d5 	bl	8001868 <putchar>
	while(rxByte != '\r'){
 80014be:	7cfb      	ldrb	r3, [r7, #19]
 80014c0:	2b0d      	cmp	r3, #13
 80014c2:	d1d3      	bne.n	800146c <get_limit+0x14>
		}
	}

	printf("\r\n");
 80014c4:	481f      	ldr	r0, [pc, #124]	; (8001544 <get_limit+0xec>)
 80014c6:	f000 f9b7 	bl	8001838 <puts>
    int result = 0;
 80014ca:	2300      	movs	r3, #0
 80014cc:	60fb      	str	r3, [r7, #12]
    for (int i = 0;i<count; i++) {
 80014ce:	2300      	movs	r3, #0
 80014d0:	60bb      	str	r3, [r7, #8]
 80014d2:	e00f      	b.n	80014f4 <get_limit+0x9c>
        result = result * 10 + (buffer[i] - '0');
 80014d4:	68fa      	ldr	r2, [r7, #12]
 80014d6:	4613      	mov	r3, r2
 80014d8:	009b      	lsls	r3, r3, #2
 80014da:	4413      	add	r3, r2
 80014dc:	005b      	lsls	r3, r3, #1
 80014de:	4619      	mov	r1, r3
 80014e0:	4a14      	ldr	r2, [pc, #80]	; (8001534 <get_limit+0xdc>)
 80014e2:	68bb      	ldr	r3, [r7, #8]
 80014e4:	4413      	add	r3, r2
 80014e6:	781b      	ldrb	r3, [r3, #0]
 80014e8:	3b30      	subs	r3, #48	; 0x30
 80014ea:	440b      	add	r3, r1
 80014ec:	60fb      	str	r3, [r7, #12]
    for (int i = 0;i<count; i++) {
 80014ee:	68bb      	ldr	r3, [r7, #8]
 80014f0:	3301      	adds	r3, #1
 80014f2:	60bb      	str	r3, [r7, #8]
 80014f4:	68ba      	ldr	r2, [r7, #8]
 80014f6:	697b      	ldr	r3, [r7, #20]
 80014f8:	429a      	cmp	r2, r3
 80014fa:	dbeb      	blt.n	80014d4 <get_limit+0x7c>
    }
    if(result >= 50 && result <= 9950){
 80014fc:	68fb      	ldr	r3, [r7, #12]
 80014fe:	2b31      	cmp	r3, #49	; 0x31
 8001500:	dd08      	ble.n	8001514 <get_limit+0xbc>
 8001502:	68fb      	ldr	r3, [r7, #12]
 8001504:	f242 62de 	movw	r2, #9950	; 0x26de
 8001508:	4293      	cmp	r3, r2
 800150a:	dc03      	bgt.n	8001514 <get_limit+0xbc>
    	lower_limit = result;
 800150c:	4a0e      	ldr	r2, [pc, #56]	; (8001548 <get_limit+0xf0>)
 800150e:	68fb      	ldr	r3, [r7, #12]
 8001510:	6013      	str	r3, [r2, #0]
 8001512:	e008      	b.n	8001526 <get_limit+0xce>
    }
    else{
    	printf("\r\n%s\r\n","Input should be between [50-9950]");
 8001514:	490d      	ldr	r1, [pc, #52]	; (800154c <get_limit+0xf4>)
 8001516:	480a      	ldr	r0, [pc, #40]	; (8001540 <get_limit+0xe8>)
 8001518:	f000 f9b4 	bl	8001884 <printf>

    	get_limit(buffer,sizeof(buffer));
 800151c:	2164      	movs	r1, #100	; 0x64
 800151e:	4805      	ldr	r0, [pc, #20]	; (8001534 <get_limit+0xdc>)
 8001520:	f7ff ff9a 	bl	8001458 <get_limit>
    }
}
 8001524:	bf00      	nop
 8001526:	bf00      	nop
 8001528:	3718      	adds	r7, #24
 800152a:	46bd      	mov	sp, r7
 800152c:	bd80      	pop	{r7, pc}
 800152e:	bf00      	nop
 8001530:	40004400 	.word	0x40004400
 8001534:	200001ec 	.word	0x200001ec
 8001538:	08006882 	.word	0x08006882
 800153c:	08006660 	.word	0x08006660
 8001540:	0800667c 	.word	0x0800667c
 8001544:	08006684 	.word	0x08006684
 8001548:	20000000 	.word	0x20000000
 800154c:	08006688 	.word	0x08006688

08001550 <main>:

int main(void){
 8001550:	b580      	push	{r7, lr}
 8001552:	f6ad 7dc8 	subw	sp, sp, #4040	; 0xfc8
 8001556:	af02      	add	r7, sp, #8
    // Initialization executed once at startup
	Clock_Init();
 8001558:	f7ff fdc8 	bl	80010ec <Clock_Init>
    UART2_Init();
 800155c:	f7ff fc6c 	bl	8000e38 <UART2_Init>
    GPIO_Init();
 8001560:	f7ff fbc8 	bl	8000cf4 <GPIO_Init>

    int post_success = 0;
 8001564:	2300      	movs	r3, #0
 8001566:	f8c7 3fbc 	str.w	r3, [r7, #4028]	; 0xfbc
       do {
           printf("\033[0;35m\r\n%s","Performing Power On Self Test (POST)");
 800156a:	498d      	ldr	r1, [pc, #564]	; (80017a0 <main+0x250>)
 800156c:	488d      	ldr	r0, [pc, #564]	; (80017a4 <main+0x254>)
 800156e:	f000 f989 	bl	8001884 <printf>
           if (power_on_self_test() == 1) {
 8001572:	f7ff ff1b 	bl	80013ac <power_on_self_test>
 8001576:	4603      	mov	r3, r0
 8001578:	2b01      	cmp	r3, #1
 800157a:	d107      	bne.n	800158c <main+0x3c>
               printf("\r\n%s","POST successful. Proceeding to the program");
 800157c:	498a      	ldr	r1, [pc, #552]	; (80017a8 <main+0x258>)
 800157e:	488b      	ldr	r0, [pc, #556]	; (80017ac <main+0x25c>)
 8001580:	f000 f980 	bl	8001884 <printf>
               post_success = 1;
 8001584:	2301      	movs	r3, #1
 8001586:	f8c7 3fbc 	str.w	r3, [r7, #4028]	; 0xfbc
 800158a:	e01b      	b.n	80015c4 <main+0x74>
           } else {
               printf("\r\n%s","POST failed. No pulse detected within 100 milliseconds.");
 800158c:	4988      	ldr	r1, [pc, #544]	; (80017b0 <main+0x260>)
 800158e:	4887      	ldr	r0, [pc, #540]	; (80017ac <main+0x25c>)
 8001590:	f000 f978 	bl	8001884 <printf>
               printf("\r\n%s","Press 'R' to retry POST or any other key to proceed");
 8001594:	4987      	ldr	r1, [pc, #540]	; (80017b4 <main+0x264>)
 8001596:	4885      	ldr	r0, [pc, #532]	; (80017ac <main+0x25c>)
 8001598:	f000 f974 	bl	8001884 <printf>
               printf("\033[0;37m");
 800159c:	4886      	ldr	r0, [pc, #536]	; (80017b8 <main+0x268>)
 800159e:	f000 f971 	bl	8001884 <printf>
               char choice = USART_Read(USART2);
 80015a2:	4886      	ldr	r0, [pc, #536]	; (80017bc <main+0x26c>)
 80015a4:	f7ff fd3a 	bl	800101c <USART_Read>
 80015a8:	4603      	mov	r3, r0
 80015aa:	f887 3faf 	strb.w	r3, [r7, #4015]	; 0xfaf
               if (choice != 'R' && choice != 'r') {
 80015ae:	f897 3faf 	ldrb.w	r3, [r7, #4015]	; 0xfaf
 80015b2:	2b52      	cmp	r3, #82	; 0x52
 80015b4:	d006      	beq.n	80015c4 <main+0x74>
 80015b6:	f897 3faf 	ldrb.w	r3, [r7, #4015]	; 0xfaf
 80015ba:	2b72      	cmp	r3, #114	; 0x72
 80015bc:	d002      	beq.n	80015c4 <main+0x74>
                   post_success = 1; // Proceed even though POST failed
 80015be:	2301      	movs	r3, #1
 80015c0:	f8c7 3fbc 	str.w	r3, [r7, #4028]	; 0xfbc
               }
           }
       } while (!post_success);
 80015c4:	f8d7 3fbc 	ldr.w	r3, [r7, #4028]	; 0xfbc
 80015c8:	2b00      	cmp	r3, #0
 80015ca:	d0ce      	beq.n	800156a <main+0x1a>
    // Main loop runs forever
    while(1)
    {
    	int pulse_count = 0;
 80015cc:	2300      	movs	r3, #0
 80015ce:	f8c7 3fb8 	str.w	r3, [r7, #4024]	; 0xfb8
    	uint32_t pulses[1001];
    	//Prompt user for limits
    	strcpy(buffer,"");
 80015d2:	4b7b      	ldr	r3, [pc, #492]	; (80017c0 <main+0x270>)
 80015d4:	2200      	movs	r2, #0
 80015d6:	701a      	strb	r2, [r3, #0]
    	printf("\033[0;35m");
 80015d8:	487a      	ldr	r0, [pc, #488]	; (80017c4 <main+0x274>)
 80015da:	f000 f953 	bl	8001884 <printf>
    	printf("\r\n%s%d\r\n","The current lower limit is ", lower_limit);
 80015de:	4b7a      	ldr	r3, [pc, #488]	; (80017c8 <main+0x278>)
 80015e0:	681b      	ldr	r3, [r3, #0]
 80015e2:	461a      	mov	r2, r3
 80015e4:	4979      	ldr	r1, [pc, #484]	; (80017cc <main+0x27c>)
 80015e6:	487a      	ldr	r0, [pc, #488]	; (80017d0 <main+0x280>)
 80015e8:	f000 f94c 	bl	8001884 <printf>
    	printf("%s\r\n","Press 'Y' if you would like to adjust.");
 80015ec:	4979      	ldr	r1, [pc, #484]	; (80017d4 <main+0x284>)
 80015ee:	487a      	ldr	r0, [pc, #488]	; (80017d8 <main+0x288>)
 80015f0:	f000 f948 	bl	8001884 <printf>
    	printf("\033[0;37m");
 80015f4:	4870      	ldr	r0, [pc, #448]	; (80017b8 <main+0x268>)
 80015f6:	f000 f945 	bl	8001884 <printf>
    	char answer = USART_Read(USART2);
 80015fa:	4870      	ldr	r0, [pc, #448]	; (80017bc <main+0x26c>)
 80015fc:	f7ff fd0e 	bl	800101c <USART_Read>
 8001600:	4603      	mov	r3, r0
 8001602:	f887 3fae 	strb.w	r3, [r7, #4014]	; 0xfae
    	if(answer == 'Y' || 'y'){
    		printf("\033[0;35m");
 8001606:	486f      	ldr	r0, [pc, #444]	; (80017c4 <main+0x274>)
 8001608:	f000 f93c 	bl	8001884 <printf>
    		printf("%s\r\n","Enter new limit between [50-9950]");
 800160c:	4973      	ldr	r1, [pc, #460]	; (80017dc <main+0x28c>)
 800160e:	4872      	ldr	r0, [pc, #456]	; (80017d8 <main+0x288>)
 8001610:	f000 f938 	bl	8001884 <printf>
    		printf("\033[0;37m");
 8001614:	4868      	ldr	r0, [pc, #416]	; (80017b8 <main+0x268>)
 8001616:	f000 f935 	bl	8001884 <printf>
    		get_limit(buffer,sizeof(buffer));
 800161a:	2164      	movs	r1, #100	; 0x64
 800161c:	4868      	ldr	r0, [pc, #416]	; (80017c0 <main+0x270>)
 800161e:	f7ff ff1b 	bl	8001458 <get_limit>
    	}
    	upper_limit = lower_limit + 100;
 8001622:	4b69      	ldr	r3, [pc, #420]	; (80017c8 <main+0x278>)
 8001624:	681b      	ldr	r3, [r3, #0]
 8001626:	3364      	adds	r3, #100	; 0x64
 8001628:	4a6d      	ldr	r2, [pc, #436]	; (80017e0 <main+0x290>)
 800162a:	6013      	str	r3, [r2, #0]
    	printf("\033[0;35m");
 800162c:	4865      	ldr	r0, [pc, #404]	; (80017c4 <main+0x274>)
 800162e:	f000 f929 	bl	8001884 <printf>
    	printf("\r\n%s%d%s%d%s","Your program will run with limits of [",lower_limit,"-",upper_limit,"]");
 8001632:	4b65      	ldr	r3, [pc, #404]	; (80017c8 <main+0x278>)
 8001634:	681a      	ldr	r2, [r3, #0]
 8001636:	4b6a      	ldr	r3, [pc, #424]	; (80017e0 <main+0x290>)
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	496a      	ldr	r1, [pc, #424]	; (80017e4 <main+0x294>)
 800163c:	9101      	str	r1, [sp, #4]
 800163e:	9300      	str	r3, [sp, #0]
 8001640:	4b69      	ldr	r3, [pc, #420]	; (80017e8 <main+0x298>)
 8001642:	496a      	ldr	r1, [pc, #424]	; (80017ec <main+0x29c>)
 8001644:	486a      	ldr	r0, [pc, #424]	; (80017f0 <main+0x2a0>)
 8001646:	f000 f91d 	bl	8001884 <printf>
    	printf("\r\n%s\r\n","Press any key to continue");
 800164a:	496a      	ldr	r1, [pc, #424]	; (80017f4 <main+0x2a4>)
 800164c:	486a      	ldr	r0, [pc, #424]	; (80017f8 <main+0x2a8>)
 800164e:	f000 f919 	bl	8001884 <printf>
    	char wait = USART_Read(USART2);
 8001652:	485a      	ldr	r0, [pc, #360]	; (80017bc <main+0x26c>)
 8001654:	f7ff fce2 	bl	800101c <USART_Read>
 8001658:	4603      	mov	r3, r0
 800165a:	f887 3fad 	strb.w	r3, [r7, #4013]	; 0xfad
    	init_buckets();
 800165e:	f7ff fed5 	bl	800140c <init_buckets>
    	while(pulse_count<1002){
 8001662:	e065      	b.n	8001730 <main+0x1e0>
    		if (TIM2->SR & TIM_SR_CC1IF) // Check if the capture/compare interrupt flag is set
 8001664:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001668:	691b      	ldr	r3, [r3, #16]
 800166a:	f003 0302 	and.w	r3, r3, #2
 800166e:	2b00      	cmp	r3, #0
 8001670:	d05e      	beq.n	8001730 <main+0x1e0>
    			    {
    			        uint32_t current_capture = TIM2->CNT;
 8001672:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001676:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001678:	f8c7 3fa8 	str.w	r3, [r7, #4008]	; 0xfa8
    			        if (current_capture >= last_capture){
 800167c:	4b5f      	ldr	r3, [pc, #380]	; (80017fc <main+0x2ac>)
 800167e:	681b      	ldr	r3, [r3, #0]
 8001680:	f8d7 2fa8 	ldr.w	r2, [r7, #4008]	; 0xfa8
 8001684:	429a      	cmp	r2, r3
 8001686:	d33a      	bcc.n	80016fe <main+0x1ae>
    			            pulse_duration = (current_capture - last_capture);
 8001688:	4b5c      	ldr	r3, [pc, #368]	; (80017fc <main+0x2ac>)
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	f8d7 2fa8 	ldr.w	r2, [r7, #4008]	; 0xfa8
 8001690:	1ad3      	subs	r3, r2, r3
 8001692:	4a5b      	ldr	r2, [pc, #364]	; (8001800 <main+0x2b0>)
 8001694:	6013      	str	r3, [r2, #0]
    			            pulses[pulse_count] = pulse_duration;
 8001696:	4b5a      	ldr	r3, [pc, #360]	; (8001800 <main+0x2b0>)
 8001698:	6819      	ldr	r1, [r3, #0]
 800169a:	f507 637c 	add.w	r3, r7, #4032	; 0xfc0
 800169e:	f6a3 73bc 	subw	r3, r3, #4028	; 0xfbc
 80016a2:	f8d7 2fb8 	ldr.w	r2, [r7, #4024]	; 0xfb8
 80016a6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    			            for(int i = 0;i<100;i++){
 80016aa:	2300      	movs	r3, #0
 80016ac:	f8c7 3fb4 	str.w	r3, [r7, #4020]	; 0xfb4
 80016b0:	e01b      	b.n	80016ea <main+0x19a>
    			            	if(buckets[i].bucket_num == pulse_duration){
 80016b2:	4a54      	ldr	r2, [pc, #336]	; (8001804 <main+0x2b4>)
 80016b4:	f8d7 3fb4 	ldr.w	r3, [r7, #4020]	; 0xfb4
 80016b8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80016bc:	4a50      	ldr	r2, [pc, #320]	; (8001800 <main+0x2b0>)
 80016be:	6812      	ldr	r2, [r2, #0]
 80016c0:	4293      	cmp	r3, r2
 80016c2:	d10d      	bne.n	80016e0 <main+0x190>
    			            		buckets[i].count++;
 80016c4:	4a4f      	ldr	r2, [pc, #316]	; (8001804 <main+0x2b4>)
 80016c6:	f8d7 3fb4 	ldr.w	r3, [r7, #4020]	; 0xfb4
 80016ca:	00db      	lsls	r3, r3, #3
 80016cc:	4413      	add	r3, r2
 80016ce:	685b      	ldr	r3, [r3, #4]
 80016d0:	1c5a      	adds	r2, r3, #1
 80016d2:	494c      	ldr	r1, [pc, #304]	; (8001804 <main+0x2b4>)
 80016d4:	f8d7 3fb4 	ldr.w	r3, [r7, #4020]	; 0xfb4
 80016d8:	00db      	lsls	r3, r3, #3
 80016da:	440b      	add	r3, r1
 80016dc:	605a      	str	r2, [r3, #4]
    			            		break;
 80016de:	e008      	b.n	80016f2 <main+0x1a2>
    			            for(int i = 0;i<100;i++){
 80016e0:	f8d7 3fb4 	ldr.w	r3, [r7, #4020]	; 0xfb4
 80016e4:	3301      	adds	r3, #1
 80016e6:	f8c7 3fb4 	str.w	r3, [r7, #4020]	; 0xfb4
 80016ea:	f8d7 3fb4 	ldr.w	r3, [r7, #4020]	; 0xfb4
 80016ee:	2b63      	cmp	r3, #99	; 0x63
 80016f0:	dddf      	ble.n	80016b2 <main+0x162>
    			            	}
    			            }
    			            pulse_count++;
 80016f2:	f8d7 3fb8 	ldr.w	r3, [r7, #4024]	; 0xfb8
 80016f6:	3301      	adds	r3, #1
 80016f8:	f8c7 3fb8 	str.w	r3, [r7, #4024]	; 0xfb8
 80016fc:	e00c      	b.n	8001718 <main+0x1c8>
    			        }else if(current_capture < last_capture) {
 80016fe:	4b3f      	ldr	r3, [pc, #252]	; (80017fc <main+0x2ac>)
 8001700:	681b      	ldr	r3, [r3, #0]
 8001702:	f8d7 2fa8 	ldr.w	r2, [r7, #4008]	; 0xfa8
 8001706:	429a      	cmp	r2, r3
 8001708:	d206      	bcs.n	8001718 <main+0x1c8>
    			            // Overflow occurred
    			            pulse_duration = (0XFFFFFFFF - last_capture) + current_capture + 1;
 800170a:	4b3c      	ldr	r3, [pc, #240]	; (80017fc <main+0x2ac>)
 800170c:	681b      	ldr	r3, [r3, #0]
 800170e:	f8d7 2fa8 	ldr.w	r2, [r7, #4008]	; 0xfa8
 8001712:	1ad3      	subs	r3, r2, r3
 8001714:	4a3a      	ldr	r2, [pc, #232]	; (8001800 <main+0x2b0>)
 8001716:	6013      	str	r3, [r2, #0]
    			        }
    			        last_capture = current_capture;
 8001718:	4a38      	ldr	r2, [pc, #224]	; (80017fc <main+0x2ac>)
 800171a:	f8d7 3fa8 	ldr.w	r3, [r7, #4008]	; 0xfa8
 800171e:	6013      	str	r3, [r2, #0]
    			        TIM2->SR &= ~TIM_SR_CC1IF;
 8001720:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001724:	691b      	ldr	r3, [r3, #16]
 8001726:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800172a:	f023 0302 	bic.w	r3, r3, #2
 800172e:	6113      	str	r3, [r2, #16]
    	while(pulse_count<1002){
 8001730:	f8d7 3fb8 	ldr.w	r3, [r7, #4024]	; 0xfb8
 8001734:	f240 32e9 	movw	r2, #1001	; 0x3e9
 8001738:	4293      	cmp	r3, r2
 800173a:	dd93      	ble.n	8001664 <main+0x114>
    			    }
    	}

    	for(int i = 0;i<101;i++){
 800173c:	2300      	movs	r3, #0
 800173e:	f8c7 3fb0 	str.w	r3, [r7, #4016]	; 0xfb0
 8001742:	e027      	b.n	8001794 <main+0x244>
    		printf("\r\n%d",pulses[i]);
 8001744:	f507 637c 	add.w	r3, r7, #4032	; 0xfc0
 8001748:	f6a3 73bc 	subw	r3, r3, #4028	; 0xfbc
 800174c:	f8d7 2fb0 	ldr.w	r2, [r7, #4016]	; 0xfb0
 8001750:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001754:	4619      	mov	r1, r3
 8001756:	482c      	ldr	r0, [pc, #176]	; (8001808 <main+0x2b8>)
 8001758:	f000 f894 	bl	8001884 <printf>
    		if(buckets[i].count > 0){
 800175c:	4a29      	ldr	r2, [pc, #164]	; (8001804 <main+0x2b4>)
 800175e:	f8d7 3fb0 	ldr.w	r3, [r7, #4016]	; 0xfb0
 8001762:	00db      	lsls	r3, r3, #3
 8001764:	4413      	add	r3, r2
 8001766:	685b      	ldr	r3, [r3, #4]
 8001768:	2b00      	cmp	r3, #0
 800176a:	dd0e      	ble.n	800178a <main+0x23a>
    		printf("\r\n%d%s%d\r\n",buckets[i].bucket_num," ",buckets[i].count);
 800176c:	4a25      	ldr	r2, [pc, #148]	; (8001804 <main+0x2b4>)
 800176e:	f8d7 3fb0 	ldr.w	r3, [r7, #4016]	; 0xfb0
 8001772:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8001776:	4a23      	ldr	r2, [pc, #140]	; (8001804 <main+0x2b4>)
 8001778:	f8d7 3fb0 	ldr.w	r3, [r7, #4016]	; 0xfb0
 800177c:	00db      	lsls	r3, r3, #3
 800177e:	4413      	add	r3, r2
 8001780:	685b      	ldr	r3, [r3, #4]
 8001782:	4a22      	ldr	r2, [pc, #136]	; (800180c <main+0x2bc>)
 8001784:	4822      	ldr	r0, [pc, #136]	; (8001810 <main+0x2c0>)
 8001786:	f000 f87d 	bl	8001884 <printf>
    	for(int i = 0;i<101;i++){
 800178a:	f8d7 3fb0 	ldr.w	r3, [r7, #4016]	; 0xfb0
 800178e:	3301      	adds	r3, #1
 8001790:	f8c7 3fb0 	str.w	r3, [r7, #4016]	; 0xfb0
 8001794:	f8d7 3fb0 	ldr.w	r3, [r7, #4016]	; 0xfb0
 8001798:	2b64      	cmp	r3, #100	; 0x64
 800179a:	ddd3      	ble.n	8001744 <main+0x1f4>
    {
 800179c:	e716      	b.n	80015cc <main+0x7c>
 800179e:	bf00      	nop
 80017a0:	080066ac 	.word	0x080066ac
 80017a4:	080066d4 	.word	0x080066d4
 80017a8:	080066e0 	.word	0x080066e0
 80017ac:	0800670c 	.word	0x0800670c
 80017b0:	08006714 	.word	0x08006714
 80017b4:	0800674c 	.word	0x0800674c
 80017b8:	08006780 	.word	0x08006780
 80017bc:	40004400 	.word	0x40004400
 80017c0:	200001ec 	.word	0x200001ec
 80017c4:	08006788 	.word	0x08006788
 80017c8:	20000000 	.word	0x20000000
 80017cc:	08006790 	.word	0x08006790
 80017d0:	080067ac 	.word	0x080067ac
 80017d4:	080067b8 	.word	0x080067b8
 80017d8:	080067e0 	.word	0x080067e0
 80017dc:	080067e8 	.word	0x080067e8
 80017e0:	20000004 	.word	0x20000004
 80017e4:	08006848 	.word	0x08006848
 80017e8:	0800680c 	.word	0x0800680c
 80017ec:	08006810 	.word	0x08006810
 80017f0:	08006838 	.word	0x08006838
 80017f4:	0800684c 	.word	0x0800684c
 80017f8:	0800667c 	.word	0x0800667c
 80017fc:	20000250 	.word	0x20000250
 8001800:	20000254 	.word	0x20000254
 8001804:	20000258 	.word	0x20000258
 8001808:	08006868 	.word	0x08006868
 800180c:	08006870 	.word	0x08006870
 8001810:	08006874 	.word	0x08006874

08001814 <print_string>:
#include <stdio.h>
#include <stdarg.h>

static char buffer[128];

static void print_string (const char* string, int len) {
 8001814:	b580      	push	{r7, lr}
 8001816:	b082      	sub	sp, #8
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
 800181c:	6039      	str	r1, [r7, #0]
    USART_Write (USART2, (unsigned char*) string, len);
 800181e:	683b      	ldr	r3, [r7, #0]
 8001820:	461a      	mov	r2, r3
 8001822:	6879      	ldr	r1, [r7, #4]
 8001824:	4803      	ldr	r0, [pc, #12]	; (8001834 <print_string+0x20>)
 8001826:	f7ff fc0e 	bl	8001046 <USART_Write>
}
 800182a:	bf00      	nop
 800182c:	3708      	adds	r7, #8
 800182e:	46bd      	mov	sp, r7
 8001830:	bd80      	pop	{r7, pc}
 8001832:	bf00      	nop
 8001834:	40004400 	.word	0x40004400

08001838 <puts>:

int puts (const char* string){
 8001838:	b580      	push	{r7, lr}
 800183a:	b084      	sub	sp, #16
 800183c:	af00      	add	r7, sp, #0
 800183e:	6078      	str	r0, [r7, #4]
    int len = strlen (string);
 8001840:	6878      	ldr	r0, [r7, #4]
 8001842:	f7fe fd15 	bl	8000270 <strlen>
 8001846:	4603      	mov	r3, r0
 8001848:	60fb      	str	r3, [r7, #12]
    print_string (string, len);
 800184a:	68f9      	ldr	r1, [r7, #12]
 800184c:	6878      	ldr	r0, [r7, #4]
 800184e:	f7ff ffe1 	bl	8001814 <print_string>
    print_string ("\n", 1);
 8001852:	2101      	movs	r1, #1
 8001854:	4803      	ldr	r0, [pc, #12]	; (8001864 <puts+0x2c>)
 8001856:	f7ff ffdd 	bl	8001814 <print_string>
    return len;
 800185a:	68fb      	ldr	r3, [r7, #12]
}
 800185c:	4618      	mov	r0, r3
 800185e:	3710      	adds	r7, #16
 8001860:	46bd      	mov	sp, r7
 8001862:	bd80      	pop	{r7, pc}
 8001864:	08006880 	.word	0x08006880

08001868 <putchar>:

int putchar (int chr){
 8001868:	b580      	push	{r7, lr}
 800186a:	b082      	sub	sp, #8
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
    print_string ((char*)&chr, 1);
 8001870:	1d3b      	adds	r3, r7, #4
 8001872:	2101      	movs	r1, #1
 8001874:	4618      	mov	r0, r3
 8001876:	f7ff ffcd 	bl	8001814 <print_string>
    return chr;
 800187a:	687b      	ldr	r3, [r7, #4]
}
 800187c:	4618      	mov	r0, r3
 800187e:	3708      	adds	r7, #8
 8001880:	46bd      	mov	sp, r7
 8001882:	bd80      	pop	{r7, pc}

08001884 <printf>:

int printf (const char* format, ...) {
 8001884:	b40f      	push	{r0, r1, r2, r3}
 8001886:	b580      	push	{r7, lr}
 8001888:	b082      	sub	sp, #8
 800188a:	af00      	add	r7, sp, #0
    va_list aptr;
    int ret;

    va_start(aptr, format);
 800188c:	f107 0314 	add.w	r3, r7, #20
 8001890:	603b      	str	r3, [r7, #0]
    ret = vsprintf(buffer, format, aptr);
 8001892:	683a      	ldr	r2, [r7, #0]
 8001894:	6939      	ldr	r1, [r7, #16]
 8001896:	4808      	ldr	r0, [pc, #32]	; (80018b8 <printf+0x34>)
 8001898:	f001 fa92 	bl	8002dc0 <vsiprintf>
 800189c:	6078      	str	r0, [r7, #4]
    va_end(aptr);
    print_string (buffer, ret);
 800189e:	6879      	ldr	r1, [r7, #4]
 80018a0:	4805      	ldr	r0, [pc, #20]	; (80018b8 <printf+0x34>)
 80018a2:	f7ff ffb7 	bl	8001814 <print_string>

    return(ret);
 80018a6:	687b      	ldr	r3, [r7, #4]
}
 80018a8:	4618      	mov	r0, r3
 80018aa:	3708      	adds	r7, #8
 80018ac:	46bd      	mov	sp, r7
 80018ae:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80018b2:	b004      	add	sp, #16
 80018b4:	4770      	bx	lr
 80018b6:	bf00      	nop
 80018b8:	20000580 	.word	0x20000580

080018bc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80018bc:	b480      	push	{r7}
 80018be:	af00      	add	r7, sp, #0
	return 1;
 80018c0:	2301      	movs	r3, #1
}
 80018c2:	4618      	mov	r0, r3
 80018c4:	46bd      	mov	sp, r7
 80018c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ca:	4770      	bx	lr

080018cc <_kill>:

int _kill(int pid, int sig)
{
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b082      	sub	sp, #8
 80018d0:	af00      	add	r7, sp, #0
 80018d2:	6078      	str	r0, [r7, #4]
 80018d4:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80018d6:	f001 facf 	bl	8002e78 <__errno>
 80018da:	4603      	mov	r3, r0
 80018dc:	2216      	movs	r2, #22
 80018de:	601a      	str	r2, [r3, #0]
	return -1;
 80018e0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80018e4:	4618      	mov	r0, r3
 80018e6:	3708      	adds	r7, #8
 80018e8:	46bd      	mov	sp, r7
 80018ea:	bd80      	pop	{r7, pc}

080018ec <_exit>:

void _exit (int status)
{
 80018ec:	b580      	push	{r7, lr}
 80018ee:	b082      	sub	sp, #8
 80018f0:	af00      	add	r7, sp, #0
 80018f2:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80018f4:	f04f 31ff 	mov.w	r1, #4294967295
 80018f8:	6878      	ldr	r0, [r7, #4]
 80018fa:	f7ff ffe7 	bl	80018cc <_kill>
	while (1) {}		/* Make sure we hang here */
 80018fe:	e7fe      	b.n	80018fe <_exit+0x12>

08001900 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001900:	b580      	push	{r7, lr}
 8001902:	b086      	sub	sp, #24
 8001904:	af00      	add	r7, sp, #0
 8001906:	60f8      	str	r0, [r7, #12]
 8001908:	60b9      	str	r1, [r7, #8]
 800190a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800190c:	2300      	movs	r3, #0
 800190e:	617b      	str	r3, [r7, #20]
 8001910:	e00a      	b.n	8001928 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8001912:	f3af 8000 	nop.w
 8001916:	4601      	mov	r1, r0
 8001918:	68bb      	ldr	r3, [r7, #8]
 800191a:	1c5a      	adds	r2, r3, #1
 800191c:	60ba      	str	r2, [r7, #8]
 800191e:	b2ca      	uxtb	r2, r1
 8001920:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001922:	697b      	ldr	r3, [r7, #20]
 8001924:	3301      	adds	r3, #1
 8001926:	617b      	str	r3, [r7, #20]
 8001928:	697a      	ldr	r2, [r7, #20]
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	429a      	cmp	r2, r3
 800192e:	dbf0      	blt.n	8001912 <_read+0x12>
	}

return len;
 8001930:	687b      	ldr	r3, [r7, #4]
}
 8001932:	4618      	mov	r0, r3
 8001934:	3718      	adds	r7, #24
 8001936:	46bd      	mov	sp, r7
 8001938:	bd80      	pop	{r7, pc}

0800193a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800193a:	b580      	push	{r7, lr}
 800193c:	b086      	sub	sp, #24
 800193e:	af00      	add	r7, sp, #0
 8001940:	60f8      	str	r0, [r7, #12]
 8001942:	60b9      	str	r1, [r7, #8]
 8001944:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001946:	2300      	movs	r3, #0
 8001948:	617b      	str	r3, [r7, #20]
 800194a:	e009      	b.n	8001960 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800194c:	68bb      	ldr	r3, [r7, #8]
 800194e:	1c5a      	adds	r2, r3, #1
 8001950:	60ba      	str	r2, [r7, #8]
 8001952:	781b      	ldrb	r3, [r3, #0]
 8001954:	4618      	mov	r0, r3
 8001956:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800195a:	697b      	ldr	r3, [r7, #20]
 800195c:	3301      	adds	r3, #1
 800195e:	617b      	str	r3, [r7, #20]
 8001960:	697a      	ldr	r2, [r7, #20]
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	429a      	cmp	r2, r3
 8001966:	dbf1      	blt.n	800194c <_write+0x12>
	}
	return len;
 8001968:	687b      	ldr	r3, [r7, #4]
}
 800196a:	4618      	mov	r0, r3
 800196c:	3718      	adds	r7, #24
 800196e:	46bd      	mov	sp, r7
 8001970:	bd80      	pop	{r7, pc}

08001972 <_close>:

int _close(int file)
{
 8001972:	b480      	push	{r7}
 8001974:	b083      	sub	sp, #12
 8001976:	af00      	add	r7, sp, #0
 8001978:	6078      	str	r0, [r7, #4]
	return -1;
 800197a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800197e:	4618      	mov	r0, r3
 8001980:	370c      	adds	r7, #12
 8001982:	46bd      	mov	sp, r7
 8001984:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001988:	4770      	bx	lr

0800198a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800198a:	b480      	push	{r7}
 800198c:	b083      	sub	sp, #12
 800198e:	af00      	add	r7, sp, #0
 8001990:	6078      	str	r0, [r7, #4]
 8001992:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001994:	683b      	ldr	r3, [r7, #0]
 8001996:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800199a:	605a      	str	r2, [r3, #4]
	return 0;
 800199c:	2300      	movs	r3, #0
}
 800199e:	4618      	mov	r0, r3
 80019a0:	370c      	adds	r7, #12
 80019a2:	46bd      	mov	sp, r7
 80019a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019a8:	4770      	bx	lr

080019aa <_isatty>:

int _isatty(int file)
{
 80019aa:	b480      	push	{r7}
 80019ac:	b083      	sub	sp, #12
 80019ae:	af00      	add	r7, sp, #0
 80019b0:	6078      	str	r0, [r7, #4]
	return 1;
 80019b2:	2301      	movs	r3, #1
}
 80019b4:	4618      	mov	r0, r3
 80019b6:	370c      	adds	r7, #12
 80019b8:	46bd      	mov	sp, r7
 80019ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019be:	4770      	bx	lr

080019c0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80019c0:	b480      	push	{r7}
 80019c2:	b085      	sub	sp, #20
 80019c4:	af00      	add	r7, sp, #0
 80019c6:	60f8      	str	r0, [r7, #12]
 80019c8:	60b9      	str	r1, [r7, #8]
 80019ca:	607a      	str	r2, [r7, #4]
	return 0;
 80019cc:	2300      	movs	r3, #0
}
 80019ce:	4618      	mov	r0, r3
 80019d0:	3714      	adds	r7, #20
 80019d2:	46bd      	mov	sp, r7
 80019d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019d8:	4770      	bx	lr
	...

080019dc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80019dc:	b580      	push	{r7, lr}
 80019de:	b086      	sub	sp, #24
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80019e4:	4a14      	ldr	r2, [pc, #80]	; (8001a38 <_sbrk+0x5c>)
 80019e6:	4b15      	ldr	r3, [pc, #84]	; (8001a3c <_sbrk+0x60>)
 80019e8:	1ad3      	subs	r3, r2, r3
 80019ea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80019ec:	697b      	ldr	r3, [r7, #20]
 80019ee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80019f0:	4b13      	ldr	r3, [pc, #76]	; (8001a40 <_sbrk+0x64>)
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	2b00      	cmp	r3, #0
 80019f6:	d102      	bne.n	80019fe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80019f8:	4b11      	ldr	r3, [pc, #68]	; (8001a40 <_sbrk+0x64>)
 80019fa:	4a12      	ldr	r2, [pc, #72]	; (8001a44 <_sbrk+0x68>)
 80019fc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80019fe:	4b10      	ldr	r3, [pc, #64]	; (8001a40 <_sbrk+0x64>)
 8001a00:	681a      	ldr	r2, [r3, #0]
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	4413      	add	r3, r2
 8001a06:	693a      	ldr	r2, [r7, #16]
 8001a08:	429a      	cmp	r2, r3
 8001a0a:	d207      	bcs.n	8001a1c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001a0c:	f001 fa34 	bl	8002e78 <__errno>
 8001a10:	4603      	mov	r3, r0
 8001a12:	220c      	movs	r2, #12
 8001a14:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001a16:	f04f 33ff 	mov.w	r3, #4294967295
 8001a1a:	e009      	b.n	8001a30 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001a1c:	4b08      	ldr	r3, [pc, #32]	; (8001a40 <_sbrk+0x64>)
 8001a1e:	681b      	ldr	r3, [r3, #0]
 8001a20:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001a22:	4b07      	ldr	r3, [pc, #28]	; (8001a40 <_sbrk+0x64>)
 8001a24:	681a      	ldr	r2, [r3, #0]
 8001a26:	687b      	ldr	r3, [r7, #4]
 8001a28:	4413      	add	r3, r2
 8001a2a:	4a05      	ldr	r2, [pc, #20]	; (8001a40 <_sbrk+0x64>)
 8001a2c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001a2e:	68fb      	ldr	r3, [r7, #12]
}
 8001a30:	4618      	mov	r0, r3
 8001a32:	3718      	adds	r7, #24
 8001a34:	46bd      	mov	sp, r7
 8001a36:	bd80      	pop	{r7, pc}
 8001a38:	20018000 	.word	0x20018000
 8001a3c:	00000400 	.word	0x00000400
 8001a40:	20000600 	.word	0x20000600
 8001a44:	20000750 	.word	0x20000750

08001a48 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 8001a48:	b480      	push	{r7}
 8001a4a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001a4c:	4b17      	ldr	r3, [pc, #92]	; (8001aac <SystemInit+0x64>)
 8001a4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001a52:	4a16      	ldr	r2, [pc, #88]	; (8001aac <SystemInit+0x64>)
 8001a54:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001a58:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8001a5c:	4b14      	ldr	r3, [pc, #80]	; (8001ab0 <SystemInit+0x68>)
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	4a13      	ldr	r2, [pc, #76]	; (8001ab0 <SystemInit+0x68>)
 8001a62:	f043 0301 	orr.w	r3, r3, #1
 8001a66:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000U;
 8001a68:	4b11      	ldr	r3, [pc, #68]	; (8001ab0 <SystemInit+0x68>)
 8001a6a:	2200      	movs	r2, #0
 8001a6c:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON , HSION, and PLLON bits */
  RCC->CR &= 0xEAF6FFFFU;
 8001a6e:	4b10      	ldr	r3, [pc, #64]	; (8001ab0 <SystemInit+0x68>)
 8001a70:	681b      	ldr	r3, [r3, #0]
 8001a72:	4a0f      	ldr	r2, [pc, #60]	; (8001ab0 <SystemInit+0x68>)
 8001a74:	f023 53a8 	bic.w	r3, r3, #352321536	; 0x15000000
 8001a78:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
 8001a7c:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00001000U;
 8001a7e:	4b0c      	ldr	r3, [pc, #48]	; (8001ab0 <SystemInit+0x68>)
 8001a80:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001a84:	60da      	str	r2, [r3, #12]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8001a86:	4b0a      	ldr	r3, [pc, #40]	; (8001ab0 <SystemInit+0x68>)
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	4a09      	ldr	r2, [pc, #36]	; (8001ab0 <SystemInit+0x68>)
 8001a8c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001a90:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000U;
 8001a92:	4b07      	ldr	r3, [pc, #28]	; (8001ab0 <SystemInit+0x68>)
 8001a94:	2200      	movs	r2, #0
 8001a96:	619a      	str	r2, [r3, #24]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001a98:	4b04      	ldr	r3, [pc, #16]	; (8001aac <SystemInit+0x64>)
 8001a9a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001a9e:	609a      	str	r2, [r3, #8]
#endif
}
 8001aa0:	bf00      	nop
 8001aa2:	46bd      	mov	sp, r7
 8001aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aa8:	4770      	bx	lr
 8001aaa:	bf00      	nop
 8001aac:	e000ed00 	.word	0xe000ed00
 8001ab0:	40021000 	.word	0x40021000

08001ab4 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 8001ab4:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001aec <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 8001ab8:	f7ff ffc6 	bl	8001a48 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001abc:	480c      	ldr	r0, [pc, #48]	; (8001af0 <LoopForever+0x6>)
  ldr r1, =_edata
 8001abe:	490d      	ldr	r1, [pc, #52]	; (8001af4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001ac0:	4a0d      	ldr	r2, [pc, #52]	; (8001af8 <LoopForever+0xe>)
  movs r3, #0
 8001ac2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001ac4:	e002      	b.n	8001acc <LoopCopyDataInit>

08001ac6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001ac6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001ac8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001aca:	3304      	adds	r3, #4

08001acc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001acc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001ace:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001ad0:	d3f9      	bcc.n	8001ac6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001ad2:	4a0a      	ldr	r2, [pc, #40]	; (8001afc <LoopForever+0x12>)
  ldr r4, =_ebss
 8001ad4:	4c0a      	ldr	r4, [pc, #40]	; (8001b00 <LoopForever+0x16>)
  movs r3, #0
 8001ad6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001ad8:	e001      	b.n	8001ade <LoopFillZerobss>

08001ada <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001ada:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001adc:	3204      	adds	r2, #4

08001ade <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001ade:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001ae0:	d3fb      	bcc.n	8001ada <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001ae2:	f001 f9cf 	bl	8002e84 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001ae6:	f7ff fd33 	bl	8001550 <main>

08001aea <LoopForever>:

LoopForever:
    b LoopForever
 8001aea:	e7fe      	b.n	8001aea <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 8001aec:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001af0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001af4:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001af8:	08006cb8 	.word	0x08006cb8
  ldr r2, =_sbss
 8001afc:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001b00:	20000750 	.word	0x20000750

08001b04 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001b04:	e7fe      	b.n	8001b04 <ADC1_2_IRQHandler>
	...

08001b08 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001b08:	b480      	push	{r7}
 8001b0a:	b087      	sub	sp, #28
 8001b0c:	af00      	add	r7, sp, #0
 8001b0e:	6078      	str	r0, [r7, #4]
 8001b10:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8001b12:	2300      	movs	r3, #0
 8001b14:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001b16:	e17f      	b.n	8001e18 <HAL_GPIO_Init+0x310>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8001b18:	683b      	ldr	r3, [r7, #0]
 8001b1a:	681a      	ldr	r2, [r3, #0]
 8001b1c:	2101      	movs	r1, #1
 8001b1e:	697b      	ldr	r3, [r7, #20]
 8001b20:	fa01 f303 	lsl.w	r3, r1, r3
 8001b24:	4013      	ands	r3, r2
 8001b26:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	2b00      	cmp	r3, #0
 8001b2c:	f000 8171 	beq.w	8001e12 <HAL_GPIO_Init+0x30a>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8001b30:	683b      	ldr	r3, [r7, #0]
 8001b32:	685b      	ldr	r3, [r3, #4]
 8001b34:	f003 0303 	and.w	r3, r3, #3
 8001b38:	2b01      	cmp	r3, #1
 8001b3a:	d005      	beq.n	8001b48 <HAL_GPIO_Init+0x40>
 8001b3c:	683b      	ldr	r3, [r7, #0]
 8001b3e:	685b      	ldr	r3, [r3, #4]
 8001b40:	f003 0303 	and.w	r3, r3, #3
 8001b44:	2b02      	cmp	r3, #2
 8001b46:	d130      	bne.n	8001baa <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	689b      	ldr	r3, [r3, #8]
 8001b4c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8001b4e:	697b      	ldr	r3, [r7, #20]
 8001b50:	005b      	lsls	r3, r3, #1
 8001b52:	2203      	movs	r2, #3
 8001b54:	fa02 f303 	lsl.w	r3, r2, r3
 8001b58:	43db      	mvns	r3, r3
 8001b5a:	693a      	ldr	r2, [r7, #16]
 8001b5c:	4013      	ands	r3, r2
 8001b5e:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8001b60:	683b      	ldr	r3, [r7, #0]
 8001b62:	68da      	ldr	r2, [r3, #12]
 8001b64:	697b      	ldr	r3, [r7, #20]
 8001b66:	005b      	lsls	r3, r3, #1
 8001b68:	fa02 f303 	lsl.w	r3, r2, r3
 8001b6c:	693a      	ldr	r2, [r7, #16]
 8001b6e:	4313      	orrs	r3, r2
 8001b70:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	693a      	ldr	r2, [r7, #16]
 8001b76:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	685b      	ldr	r3, [r3, #4]
 8001b7c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8001b7e:	2201      	movs	r2, #1
 8001b80:	697b      	ldr	r3, [r7, #20]
 8001b82:	fa02 f303 	lsl.w	r3, r2, r3
 8001b86:	43db      	mvns	r3, r3
 8001b88:	693a      	ldr	r2, [r7, #16]
 8001b8a:	4013      	ands	r3, r2
 8001b8c:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001b8e:	683b      	ldr	r3, [r7, #0]
 8001b90:	685b      	ldr	r3, [r3, #4]
 8001b92:	091b      	lsrs	r3, r3, #4
 8001b94:	f003 0201 	and.w	r2, r3, #1
 8001b98:	697b      	ldr	r3, [r7, #20]
 8001b9a:	fa02 f303 	lsl.w	r3, r2, r3
 8001b9e:	693a      	ldr	r2, [r7, #16]
 8001ba0:	4313      	orrs	r3, r2
 8001ba2:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	693a      	ldr	r2, [r7, #16]
 8001ba8:	605a      	str	r2, [r3, #4]
      }

#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx)

      /* In case of Analog mode, check if ADC control mode is selected */
      if((GPIO_Init->Mode & GPIO_MODE_ANALOG) == GPIO_MODE_ANALOG)
 8001baa:	683b      	ldr	r3, [r7, #0]
 8001bac:	685b      	ldr	r3, [r3, #4]
 8001bae:	f003 0303 	and.w	r3, r3, #3
 8001bb2:	2b03      	cmp	r3, #3
 8001bb4:	d118      	bne.n	8001be8 <HAL_GPIO_Init+0xe0>
      {
        /* Configure the IO Output Type */
        temp = GPIOx->ASCR;
 8001bb6:	687b      	ldr	r3, [r7, #4]
 8001bb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001bba:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_ASCR_ASC0 << position) ;
 8001bbc:	2201      	movs	r2, #1
 8001bbe:	697b      	ldr	r3, [r7, #20]
 8001bc0:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc4:	43db      	mvns	r3, r3
 8001bc6:	693a      	ldr	r2, [r7, #16]
 8001bc8:	4013      	ands	r3, r2
 8001bca:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_MODE_ANALOG_ADC_CONTROL) >> 3) << position);
 8001bcc:	683b      	ldr	r3, [r7, #0]
 8001bce:	685b      	ldr	r3, [r3, #4]
 8001bd0:	08db      	lsrs	r3, r3, #3
 8001bd2:	f003 0201 	and.w	r2, r3, #1
 8001bd6:	697b      	ldr	r3, [r7, #20]
 8001bd8:	fa02 f303 	lsl.w	r3, r2, r3
 8001bdc:	693a      	ldr	r2, [r7, #16]
 8001bde:	4313      	orrs	r3, r2
 8001be0:	613b      	str	r3, [r7, #16]
        GPIOx->ASCR = temp;
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	693a      	ldr	r2, [r7, #16]
 8001be6:	62da      	str	r2, [r3, #44]	; 0x2c
      }

#endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx */

      /* Activate the Pull-up or Pull down resistor for the current IO */
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001be8:	683b      	ldr	r3, [r7, #0]
 8001bea:	685b      	ldr	r3, [r3, #4]
 8001bec:	f003 0303 	and.w	r3, r3, #3
 8001bf0:	2b03      	cmp	r3, #3
 8001bf2:	d017      	beq.n	8001c24 <HAL_GPIO_Init+0x11c>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        temp = GPIOx->PUPDR;
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	68db      	ldr	r3, [r3, #12]
 8001bf8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8001bfa:	697b      	ldr	r3, [r7, #20]
 8001bfc:	005b      	lsls	r3, r3, #1
 8001bfe:	2203      	movs	r2, #3
 8001c00:	fa02 f303 	lsl.w	r3, r2, r3
 8001c04:	43db      	mvns	r3, r3
 8001c06:	693a      	ldr	r2, [r7, #16]
 8001c08:	4013      	ands	r3, r2
 8001c0a:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001c0c:	683b      	ldr	r3, [r7, #0]
 8001c0e:	689a      	ldr	r2, [r3, #8]
 8001c10:	697b      	ldr	r3, [r7, #20]
 8001c12:	005b      	lsls	r3, r3, #1
 8001c14:	fa02 f303 	lsl.w	r3, r2, r3
 8001c18:	693a      	ldr	r2, [r7, #16]
 8001c1a:	4313      	orrs	r3, r2
 8001c1c:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	693a      	ldr	r2, [r7, #16]
 8001c22:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001c24:	683b      	ldr	r3, [r7, #0]
 8001c26:	685b      	ldr	r3, [r3, #4]
 8001c28:	f003 0303 	and.w	r3, r3, #3
 8001c2c:	2b02      	cmp	r3, #2
 8001c2e:	d123      	bne.n	8001c78 <HAL_GPIO_Init+0x170>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8001c30:	697b      	ldr	r3, [r7, #20]
 8001c32:	08da      	lsrs	r2, r3, #3
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	3208      	adds	r2, #8
 8001c38:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c3c:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8001c3e:	697b      	ldr	r3, [r7, #20]
 8001c40:	f003 0307 	and.w	r3, r3, #7
 8001c44:	009b      	lsls	r3, r3, #2
 8001c46:	220f      	movs	r2, #15
 8001c48:	fa02 f303 	lsl.w	r3, r2, r3
 8001c4c:	43db      	mvns	r3, r3
 8001c4e:	693a      	ldr	r2, [r7, #16]
 8001c50:	4013      	ands	r3, r2
 8001c52:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8001c54:	683b      	ldr	r3, [r7, #0]
 8001c56:	691a      	ldr	r2, [r3, #16]
 8001c58:	697b      	ldr	r3, [r7, #20]
 8001c5a:	f003 0307 	and.w	r3, r3, #7
 8001c5e:	009b      	lsls	r3, r3, #2
 8001c60:	fa02 f303 	lsl.w	r3, r2, r3
 8001c64:	693a      	ldr	r2, [r7, #16]
 8001c66:	4313      	orrs	r3, r2
 8001c68:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8001c6a:	697b      	ldr	r3, [r7, #20]
 8001c6c:	08da      	lsrs	r2, r3, #3
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	3208      	adds	r2, #8
 8001c72:	6939      	ldr	r1, [r7, #16]
 8001c74:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8001c7e:	697b      	ldr	r3, [r7, #20]
 8001c80:	005b      	lsls	r3, r3, #1
 8001c82:	2203      	movs	r2, #3
 8001c84:	fa02 f303 	lsl.w	r3, r2, r3
 8001c88:	43db      	mvns	r3, r3
 8001c8a:	693a      	ldr	r2, [r7, #16]
 8001c8c:	4013      	ands	r3, r2
 8001c8e:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8001c90:	683b      	ldr	r3, [r7, #0]
 8001c92:	685b      	ldr	r3, [r3, #4]
 8001c94:	f003 0203 	and.w	r2, r3, #3
 8001c98:	697b      	ldr	r3, [r7, #20]
 8001c9a:	005b      	lsls	r3, r3, #1
 8001c9c:	fa02 f303 	lsl.w	r3, r2, r3
 8001ca0:	693a      	ldr	r2, [r7, #16]
 8001ca2:	4313      	orrs	r3, r2
 8001ca4:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	693a      	ldr	r2, [r7, #16]
 8001caa:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8001cac:	683b      	ldr	r3, [r7, #0]
 8001cae:	685b      	ldr	r3, [r3, #4]
 8001cb0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001cb4:	2b00      	cmp	r3, #0
 8001cb6:	f000 80ac 	beq.w	8001e12 <HAL_GPIO_Init+0x30a>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001cba:	4b5f      	ldr	r3, [pc, #380]	; (8001e38 <HAL_GPIO_Init+0x330>)
 8001cbc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001cbe:	4a5e      	ldr	r2, [pc, #376]	; (8001e38 <HAL_GPIO_Init+0x330>)
 8001cc0:	f043 0301 	orr.w	r3, r3, #1
 8001cc4:	6613      	str	r3, [r2, #96]	; 0x60
 8001cc6:	4b5c      	ldr	r3, [pc, #368]	; (8001e38 <HAL_GPIO_Init+0x330>)
 8001cc8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001cca:	f003 0301 	and.w	r3, r3, #1
 8001cce:	60bb      	str	r3, [r7, #8]
 8001cd0:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8001cd2:	4a5a      	ldr	r2, [pc, #360]	; (8001e3c <HAL_GPIO_Init+0x334>)
 8001cd4:	697b      	ldr	r3, [r7, #20]
 8001cd6:	089b      	lsrs	r3, r3, #2
 8001cd8:	3302      	adds	r3, #2
 8001cda:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001cde:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8001ce0:	697b      	ldr	r3, [r7, #20]
 8001ce2:	f003 0303 	and.w	r3, r3, #3
 8001ce6:	009b      	lsls	r3, r3, #2
 8001ce8:	220f      	movs	r2, #15
 8001cea:	fa02 f303 	lsl.w	r3, r2, r3
 8001cee:	43db      	mvns	r3, r3
 8001cf0:	693a      	ldr	r2, [r7, #16]
 8001cf2:	4013      	ands	r3, r2
 8001cf4:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8001cfc:	d025      	beq.n	8001d4a <HAL_GPIO_Init+0x242>
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	4a4f      	ldr	r2, [pc, #316]	; (8001e40 <HAL_GPIO_Init+0x338>)
 8001d02:	4293      	cmp	r3, r2
 8001d04:	d01f      	beq.n	8001d46 <HAL_GPIO_Init+0x23e>
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	4a4e      	ldr	r2, [pc, #312]	; (8001e44 <HAL_GPIO_Init+0x33c>)
 8001d0a:	4293      	cmp	r3, r2
 8001d0c:	d019      	beq.n	8001d42 <HAL_GPIO_Init+0x23a>
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	4a4d      	ldr	r2, [pc, #308]	; (8001e48 <HAL_GPIO_Init+0x340>)
 8001d12:	4293      	cmp	r3, r2
 8001d14:	d013      	beq.n	8001d3e <HAL_GPIO_Init+0x236>
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	4a4c      	ldr	r2, [pc, #304]	; (8001e4c <HAL_GPIO_Init+0x344>)
 8001d1a:	4293      	cmp	r3, r2
 8001d1c:	d00d      	beq.n	8001d3a <HAL_GPIO_Init+0x232>
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	4a4b      	ldr	r2, [pc, #300]	; (8001e50 <HAL_GPIO_Init+0x348>)
 8001d22:	4293      	cmp	r3, r2
 8001d24:	d007      	beq.n	8001d36 <HAL_GPIO_Init+0x22e>
 8001d26:	687b      	ldr	r3, [r7, #4]
 8001d28:	4a4a      	ldr	r2, [pc, #296]	; (8001e54 <HAL_GPIO_Init+0x34c>)
 8001d2a:	4293      	cmp	r3, r2
 8001d2c:	d101      	bne.n	8001d32 <HAL_GPIO_Init+0x22a>
 8001d2e:	2306      	movs	r3, #6
 8001d30:	e00c      	b.n	8001d4c <HAL_GPIO_Init+0x244>
 8001d32:	2307      	movs	r3, #7
 8001d34:	e00a      	b.n	8001d4c <HAL_GPIO_Init+0x244>
 8001d36:	2305      	movs	r3, #5
 8001d38:	e008      	b.n	8001d4c <HAL_GPIO_Init+0x244>
 8001d3a:	2304      	movs	r3, #4
 8001d3c:	e006      	b.n	8001d4c <HAL_GPIO_Init+0x244>
 8001d3e:	2303      	movs	r3, #3
 8001d40:	e004      	b.n	8001d4c <HAL_GPIO_Init+0x244>
 8001d42:	2302      	movs	r3, #2
 8001d44:	e002      	b.n	8001d4c <HAL_GPIO_Init+0x244>
 8001d46:	2301      	movs	r3, #1
 8001d48:	e000      	b.n	8001d4c <HAL_GPIO_Init+0x244>
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	697a      	ldr	r2, [r7, #20]
 8001d4e:	f002 0203 	and.w	r2, r2, #3
 8001d52:	0092      	lsls	r2, r2, #2
 8001d54:	4093      	lsls	r3, r2
 8001d56:	693a      	ldr	r2, [r7, #16]
 8001d58:	4313      	orrs	r3, r2
 8001d5a:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8001d5c:	4937      	ldr	r1, [pc, #220]	; (8001e3c <HAL_GPIO_Init+0x334>)
 8001d5e:	697b      	ldr	r3, [r7, #20]
 8001d60:	089b      	lsrs	r3, r3, #2
 8001d62:	3302      	adds	r3, #2
 8001d64:	693a      	ldr	r2, [r7, #16]
 8001d66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8001d6a:	4b3b      	ldr	r3, [pc, #236]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001d6c:	689b      	ldr	r3, [r3, #8]
 8001d6e:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	43db      	mvns	r3, r3
 8001d74:	693a      	ldr	r2, [r7, #16]
 8001d76:	4013      	ands	r3, r2
 8001d78:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8001d7a:	683b      	ldr	r3, [r7, #0]
 8001d7c:	685b      	ldr	r3, [r3, #4]
 8001d7e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001d82:	2b00      	cmp	r3, #0
 8001d84:	d003      	beq.n	8001d8e <HAL_GPIO_Init+0x286>
        {
          temp |= iocurrent;
 8001d86:	693a      	ldr	r2, [r7, #16]
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	4313      	orrs	r3, r2
 8001d8c:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 8001d8e:	4a32      	ldr	r2, [pc, #200]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001d90:	693b      	ldr	r3, [r7, #16]
 8001d92:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR1;
 8001d94:	4b30      	ldr	r3, [pc, #192]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001d96:	68db      	ldr	r3, [r3, #12]
 8001d98:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001d9a:	68fb      	ldr	r3, [r7, #12]
 8001d9c:	43db      	mvns	r3, r3
 8001d9e:	693a      	ldr	r2, [r7, #16]
 8001da0:	4013      	ands	r3, r2
 8001da2:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8001da4:	683b      	ldr	r3, [r7, #0]
 8001da6:	685b      	ldr	r3, [r3, #4]
 8001da8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dac:	2b00      	cmp	r3, #0
 8001dae:	d003      	beq.n	8001db8 <HAL_GPIO_Init+0x2b0>
        {
          temp |= iocurrent;
 8001db0:	693a      	ldr	r2, [r7, #16]
 8001db2:	68fb      	ldr	r3, [r7, #12]
 8001db4:	4313      	orrs	r3, r2
 8001db6:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 8001db8:	4a27      	ldr	r2, [pc, #156]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001dba:	693b      	ldr	r3, [r7, #16]
 8001dbc:	60d3      	str	r3, [r2, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR1;
 8001dbe:	4b26      	ldr	r3, [pc, #152]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001dc0:	685b      	ldr	r3, [r3, #4]
 8001dc2:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001dc4:	68fb      	ldr	r3, [r7, #12]
 8001dc6:	43db      	mvns	r3, r3
 8001dc8:	693a      	ldr	r2, [r7, #16]
 8001dca:	4013      	ands	r3, r2
 8001dcc:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8001dce:	683b      	ldr	r3, [r7, #0]
 8001dd0:	685b      	ldr	r3, [r3, #4]
 8001dd2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001dd6:	2b00      	cmp	r3, #0
 8001dd8:	d003      	beq.n	8001de2 <HAL_GPIO_Init+0x2da>
        {
          temp |= iocurrent;
 8001dda:	693a      	ldr	r2, [r7, #16]
 8001ddc:	68fb      	ldr	r3, [r7, #12]
 8001dde:	4313      	orrs	r3, r2
 8001de0:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR1 = temp;
 8001de2:	4a1d      	ldr	r2, [pc, #116]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001de4:	693b      	ldr	r3, [r7, #16]
 8001de6:	6053      	str	r3, [r2, #4]

        temp = EXTI->IMR1;
 8001de8:	4b1b      	ldr	r3, [pc, #108]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001dea:	681b      	ldr	r3, [r3, #0]
 8001dec:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001dee:	68fb      	ldr	r3, [r7, #12]
 8001df0:	43db      	mvns	r3, r3
 8001df2:	693a      	ldr	r2, [r7, #16]
 8001df4:	4013      	ands	r3, r2
 8001df6:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8001df8:	683b      	ldr	r3, [r7, #0]
 8001dfa:	685b      	ldr	r3, [r3, #4]
 8001dfc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001e00:	2b00      	cmp	r3, #0
 8001e02:	d003      	beq.n	8001e0c <HAL_GPIO_Init+0x304>
        {
          temp |= iocurrent;
 8001e04:	693a      	ldr	r2, [r7, #16]
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	4313      	orrs	r3, r2
 8001e0a:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR1 = temp;
 8001e0c:	4a12      	ldr	r2, [pc, #72]	; (8001e58 <HAL_GPIO_Init+0x350>)
 8001e0e:	693b      	ldr	r3, [r7, #16]
 8001e10:	6013      	str	r3, [r2, #0]
      }
    }

    position++;
 8001e12:	697b      	ldr	r3, [r7, #20]
 8001e14:	3301      	adds	r3, #1
 8001e16:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001e18:	683b      	ldr	r3, [r7, #0]
 8001e1a:	681a      	ldr	r2, [r3, #0]
 8001e1c:	697b      	ldr	r3, [r7, #20]
 8001e1e:	fa22 f303 	lsr.w	r3, r2, r3
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	f47f ae78 	bne.w	8001b18 <HAL_GPIO_Init+0x10>
  }
}
 8001e28:	bf00      	nop
 8001e2a:	bf00      	nop
 8001e2c:	371c      	adds	r7, #28
 8001e2e:	46bd      	mov	sp, r7
 8001e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e34:	4770      	bx	lr
 8001e36:	bf00      	nop
 8001e38:	40021000 	.word	0x40021000
 8001e3c:	40010000 	.word	0x40010000
 8001e40:	48000400 	.word	0x48000400
 8001e44:	48000800 	.word	0x48000800
 8001e48:	48000c00 	.word	0x48000c00
 8001e4c:	48001000 	.word	0x48001000
 8001e50:	48001400 	.word	0x48001400
 8001e54:	48001800 	.word	0x48001800
 8001e58:	40010400 	.word	0x40010400

08001e5c <__cvt>:
 8001e5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e60:	ec55 4b10 	vmov	r4, r5, d0
 8001e64:	2d00      	cmp	r5, #0
 8001e66:	460e      	mov	r6, r1
 8001e68:	4619      	mov	r1, r3
 8001e6a:	462b      	mov	r3, r5
 8001e6c:	bfbb      	ittet	lt
 8001e6e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001e72:	461d      	movlt	r5, r3
 8001e74:	2300      	movge	r3, #0
 8001e76:	232d      	movlt	r3, #45	; 0x2d
 8001e78:	700b      	strb	r3, [r1, #0]
 8001e7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001e7c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001e80:	4691      	mov	r9, r2
 8001e82:	f023 0820 	bic.w	r8, r3, #32
 8001e86:	bfbc      	itt	lt
 8001e88:	4622      	movlt	r2, r4
 8001e8a:	4614      	movlt	r4, r2
 8001e8c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001e90:	d005      	beq.n	8001e9e <__cvt+0x42>
 8001e92:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001e96:	d100      	bne.n	8001e9a <__cvt+0x3e>
 8001e98:	3601      	adds	r6, #1
 8001e9a:	2102      	movs	r1, #2
 8001e9c:	e000      	b.n	8001ea0 <__cvt+0x44>
 8001e9e:	2103      	movs	r1, #3
 8001ea0:	ab03      	add	r3, sp, #12
 8001ea2:	9301      	str	r3, [sp, #4]
 8001ea4:	ab02      	add	r3, sp, #8
 8001ea6:	9300      	str	r3, [sp, #0]
 8001ea8:	ec45 4b10 	vmov	d0, r4, r5
 8001eac:	4653      	mov	r3, sl
 8001eae:	4632      	mov	r2, r6
 8001eb0:	f001 f89e 	bl	8002ff0 <_dtoa_r>
 8001eb4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001eb8:	4607      	mov	r7, r0
 8001eba:	d102      	bne.n	8001ec2 <__cvt+0x66>
 8001ebc:	f019 0f01 	tst.w	r9, #1
 8001ec0:	d022      	beq.n	8001f08 <__cvt+0xac>
 8001ec2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001ec6:	eb07 0906 	add.w	r9, r7, r6
 8001eca:	d110      	bne.n	8001eee <__cvt+0x92>
 8001ecc:	783b      	ldrb	r3, [r7, #0]
 8001ece:	2b30      	cmp	r3, #48	; 0x30
 8001ed0:	d10a      	bne.n	8001ee8 <__cvt+0x8c>
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	4620      	mov	r0, r4
 8001ed8:	4629      	mov	r1, r5
 8001eda:	f7fe fdf5 	bl	8000ac8 <__aeabi_dcmpeq>
 8001ede:	b918      	cbnz	r0, 8001ee8 <__cvt+0x8c>
 8001ee0:	f1c6 0601 	rsb	r6, r6, #1
 8001ee4:	f8ca 6000 	str.w	r6, [sl]
 8001ee8:	f8da 3000 	ldr.w	r3, [sl]
 8001eec:	4499      	add	r9, r3
 8001eee:	2200      	movs	r2, #0
 8001ef0:	2300      	movs	r3, #0
 8001ef2:	4620      	mov	r0, r4
 8001ef4:	4629      	mov	r1, r5
 8001ef6:	f7fe fde7 	bl	8000ac8 <__aeabi_dcmpeq>
 8001efa:	b108      	cbz	r0, 8001f00 <__cvt+0xa4>
 8001efc:	f8cd 900c 	str.w	r9, [sp, #12]
 8001f00:	2230      	movs	r2, #48	; 0x30
 8001f02:	9b03      	ldr	r3, [sp, #12]
 8001f04:	454b      	cmp	r3, r9
 8001f06:	d307      	bcc.n	8001f18 <__cvt+0xbc>
 8001f08:	9b03      	ldr	r3, [sp, #12]
 8001f0a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001f0c:	1bdb      	subs	r3, r3, r7
 8001f0e:	4638      	mov	r0, r7
 8001f10:	6013      	str	r3, [r2, #0]
 8001f12:	b004      	add	sp, #16
 8001f14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f18:	1c59      	adds	r1, r3, #1
 8001f1a:	9103      	str	r1, [sp, #12]
 8001f1c:	701a      	strb	r2, [r3, #0]
 8001f1e:	e7f0      	b.n	8001f02 <__cvt+0xa6>

08001f20 <__exponent>:
 8001f20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001f22:	4603      	mov	r3, r0
 8001f24:	2900      	cmp	r1, #0
 8001f26:	bfb8      	it	lt
 8001f28:	4249      	neglt	r1, r1
 8001f2a:	f803 2b02 	strb.w	r2, [r3], #2
 8001f2e:	bfb4      	ite	lt
 8001f30:	222d      	movlt	r2, #45	; 0x2d
 8001f32:	222b      	movge	r2, #43	; 0x2b
 8001f34:	2909      	cmp	r1, #9
 8001f36:	7042      	strb	r2, [r0, #1]
 8001f38:	dd2a      	ble.n	8001f90 <__exponent+0x70>
 8001f3a:	f10d 0207 	add.w	r2, sp, #7
 8001f3e:	4617      	mov	r7, r2
 8001f40:	260a      	movs	r6, #10
 8001f42:	4694      	mov	ip, r2
 8001f44:	fb91 f5f6 	sdiv	r5, r1, r6
 8001f48:	fb06 1415 	mls	r4, r6, r5, r1
 8001f4c:	3430      	adds	r4, #48	; 0x30
 8001f4e:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8001f52:	460c      	mov	r4, r1
 8001f54:	2c63      	cmp	r4, #99	; 0x63
 8001f56:	f102 32ff 	add.w	r2, r2, #4294967295
 8001f5a:	4629      	mov	r1, r5
 8001f5c:	dcf1      	bgt.n	8001f42 <__exponent+0x22>
 8001f5e:	3130      	adds	r1, #48	; 0x30
 8001f60:	f1ac 0402 	sub.w	r4, ip, #2
 8001f64:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001f68:	1c41      	adds	r1, r0, #1
 8001f6a:	4622      	mov	r2, r4
 8001f6c:	42ba      	cmp	r2, r7
 8001f6e:	d30a      	bcc.n	8001f86 <__exponent+0x66>
 8001f70:	f10d 0209 	add.w	r2, sp, #9
 8001f74:	eba2 020c 	sub.w	r2, r2, ip
 8001f78:	42bc      	cmp	r4, r7
 8001f7a:	bf88      	it	hi
 8001f7c:	2200      	movhi	r2, #0
 8001f7e:	4413      	add	r3, r2
 8001f80:	1a18      	subs	r0, r3, r0
 8001f82:	b003      	add	sp, #12
 8001f84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f86:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001f8a:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001f8e:	e7ed      	b.n	8001f6c <__exponent+0x4c>
 8001f90:	2330      	movs	r3, #48	; 0x30
 8001f92:	3130      	adds	r1, #48	; 0x30
 8001f94:	7083      	strb	r3, [r0, #2]
 8001f96:	70c1      	strb	r1, [r0, #3]
 8001f98:	1d03      	adds	r3, r0, #4
 8001f9a:	e7f1      	b.n	8001f80 <__exponent+0x60>

08001f9c <_printf_float>:
 8001f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001fa0:	ed2d 8b02 	vpush	{d8}
 8001fa4:	b08d      	sub	sp, #52	; 0x34
 8001fa6:	460c      	mov	r4, r1
 8001fa8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001fac:	4616      	mov	r6, r2
 8001fae:	461f      	mov	r7, r3
 8001fb0:	4605      	mov	r5, r0
 8001fb2:	f000 ff17 	bl	8002de4 <_localeconv_r>
 8001fb6:	f8d0 a000 	ldr.w	sl, [r0]
 8001fba:	4650      	mov	r0, sl
 8001fbc:	f7fe f958 	bl	8000270 <strlen>
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	930a      	str	r3, [sp, #40]	; 0x28
 8001fc4:	6823      	ldr	r3, [r4, #0]
 8001fc6:	9305      	str	r3, [sp, #20]
 8001fc8:	f8d8 3000 	ldr.w	r3, [r8]
 8001fcc:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001fd0:	3307      	adds	r3, #7
 8001fd2:	f023 0307 	bic.w	r3, r3, #7
 8001fd6:	f103 0208 	add.w	r2, r3, #8
 8001fda:	f8c8 2000 	str.w	r2, [r8]
 8001fde:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001fe2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001fe6:	9307      	str	r3, [sp, #28]
 8001fe8:	f8cd 8018 	str.w	r8, [sp, #24]
 8001fec:	ee08 0a10 	vmov	s16, r0
 8001ff0:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001ff4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001ff8:	4b9e      	ldr	r3, [pc, #632]	; (8002274 <_printf_float+0x2d8>)
 8001ffa:	f04f 32ff 	mov.w	r2, #4294967295
 8001ffe:	f7fe fd95 	bl	8000b2c <__aeabi_dcmpun>
 8002002:	bb88      	cbnz	r0, 8002068 <_printf_float+0xcc>
 8002004:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002008:	4b9a      	ldr	r3, [pc, #616]	; (8002274 <_printf_float+0x2d8>)
 800200a:	f04f 32ff 	mov.w	r2, #4294967295
 800200e:	f7fe fd6f 	bl	8000af0 <__aeabi_dcmple>
 8002012:	bb48      	cbnz	r0, 8002068 <_printf_float+0xcc>
 8002014:	2200      	movs	r2, #0
 8002016:	2300      	movs	r3, #0
 8002018:	4640      	mov	r0, r8
 800201a:	4649      	mov	r1, r9
 800201c:	f7fe fd5e 	bl	8000adc <__aeabi_dcmplt>
 8002020:	b110      	cbz	r0, 8002028 <_printf_float+0x8c>
 8002022:	232d      	movs	r3, #45	; 0x2d
 8002024:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002028:	4a93      	ldr	r2, [pc, #588]	; (8002278 <_printf_float+0x2dc>)
 800202a:	4b94      	ldr	r3, [pc, #592]	; (800227c <_printf_float+0x2e0>)
 800202c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8002030:	bf94      	ite	ls
 8002032:	4690      	movls	r8, r2
 8002034:	4698      	movhi	r8, r3
 8002036:	2303      	movs	r3, #3
 8002038:	6123      	str	r3, [r4, #16]
 800203a:	9b05      	ldr	r3, [sp, #20]
 800203c:	f023 0304 	bic.w	r3, r3, #4
 8002040:	6023      	str	r3, [r4, #0]
 8002042:	f04f 0900 	mov.w	r9, #0
 8002046:	9700      	str	r7, [sp, #0]
 8002048:	4633      	mov	r3, r6
 800204a:	aa0b      	add	r2, sp, #44	; 0x2c
 800204c:	4621      	mov	r1, r4
 800204e:	4628      	mov	r0, r5
 8002050:	f000 f9da 	bl	8002408 <_printf_common>
 8002054:	3001      	adds	r0, #1
 8002056:	f040 8090 	bne.w	800217a <_printf_float+0x1de>
 800205a:	f04f 30ff 	mov.w	r0, #4294967295
 800205e:	b00d      	add	sp, #52	; 0x34
 8002060:	ecbd 8b02 	vpop	{d8}
 8002064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002068:	4642      	mov	r2, r8
 800206a:	464b      	mov	r3, r9
 800206c:	4640      	mov	r0, r8
 800206e:	4649      	mov	r1, r9
 8002070:	f7fe fd5c 	bl	8000b2c <__aeabi_dcmpun>
 8002074:	b140      	cbz	r0, 8002088 <_printf_float+0xec>
 8002076:	464b      	mov	r3, r9
 8002078:	2b00      	cmp	r3, #0
 800207a:	bfbc      	itt	lt
 800207c:	232d      	movlt	r3, #45	; 0x2d
 800207e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8002082:	4a7f      	ldr	r2, [pc, #508]	; (8002280 <_printf_float+0x2e4>)
 8002084:	4b7f      	ldr	r3, [pc, #508]	; (8002284 <_printf_float+0x2e8>)
 8002086:	e7d1      	b.n	800202c <_printf_float+0x90>
 8002088:	6863      	ldr	r3, [r4, #4]
 800208a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800208e:	9206      	str	r2, [sp, #24]
 8002090:	1c5a      	adds	r2, r3, #1
 8002092:	d13f      	bne.n	8002114 <_printf_float+0x178>
 8002094:	2306      	movs	r3, #6
 8002096:	6063      	str	r3, [r4, #4]
 8002098:	9b05      	ldr	r3, [sp, #20]
 800209a:	6861      	ldr	r1, [r4, #4]
 800209c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80020a0:	2300      	movs	r3, #0
 80020a2:	9303      	str	r3, [sp, #12]
 80020a4:	ab0a      	add	r3, sp, #40	; 0x28
 80020a6:	e9cd b301 	strd	fp, r3, [sp, #4]
 80020aa:	ab09      	add	r3, sp, #36	; 0x24
 80020ac:	ec49 8b10 	vmov	d0, r8, r9
 80020b0:	9300      	str	r3, [sp, #0]
 80020b2:	6022      	str	r2, [r4, #0]
 80020b4:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80020b8:	4628      	mov	r0, r5
 80020ba:	f7ff fecf 	bl	8001e5c <__cvt>
 80020be:	9b06      	ldr	r3, [sp, #24]
 80020c0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80020c2:	2b47      	cmp	r3, #71	; 0x47
 80020c4:	4680      	mov	r8, r0
 80020c6:	d108      	bne.n	80020da <_printf_float+0x13e>
 80020c8:	1cc8      	adds	r0, r1, #3
 80020ca:	db02      	blt.n	80020d2 <_printf_float+0x136>
 80020cc:	6863      	ldr	r3, [r4, #4]
 80020ce:	4299      	cmp	r1, r3
 80020d0:	dd41      	ble.n	8002156 <_printf_float+0x1ba>
 80020d2:	f1ab 0302 	sub.w	r3, fp, #2
 80020d6:	fa5f fb83 	uxtb.w	fp, r3
 80020da:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80020de:	d820      	bhi.n	8002122 <_printf_float+0x186>
 80020e0:	3901      	subs	r1, #1
 80020e2:	465a      	mov	r2, fp
 80020e4:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80020e8:	9109      	str	r1, [sp, #36]	; 0x24
 80020ea:	f7ff ff19 	bl	8001f20 <__exponent>
 80020ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80020f0:	1813      	adds	r3, r2, r0
 80020f2:	2a01      	cmp	r2, #1
 80020f4:	4681      	mov	r9, r0
 80020f6:	6123      	str	r3, [r4, #16]
 80020f8:	dc02      	bgt.n	8002100 <_printf_float+0x164>
 80020fa:	6822      	ldr	r2, [r4, #0]
 80020fc:	07d2      	lsls	r2, r2, #31
 80020fe:	d501      	bpl.n	8002104 <_printf_float+0x168>
 8002100:	3301      	adds	r3, #1
 8002102:	6123      	str	r3, [r4, #16]
 8002104:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8002108:	2b00      	cmp	r3, #0
 800210a:	d09c      	beq.n	8002046 <_printf_float+0xaa>
 800210c:	232d      	movs	r3, #45	; 0x2d
 800210e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002112:	e798      	b.n	8002046 <_printf_float+0xaa>
 8002114:	9a06      	ldr	r2, [sp, #24]
 8002116:	2a47      	cmp	r2, #71	; 0x47
 8002118:	d1be      	bne.n	8002098 <_printf_float+0xfc>
 800211a:	2b00      	cmp	r3, #0
 800211c:	d1bc      	bne.n	8002098 <_printf_float+0xfc>
 800211e:	2301      	movs	r3, #1
 8002120:	e7b9      	b.n	8002096 <_printf_float+0xfa>
 8002122:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8002126:	d118      	bne.n	800215a <_printf_float+0x1be>
 8002128:	2900      	cmp	r1, #0
 800212a:	6863      	ldr	r3, [r4, #4]
 800212c:	dd0b      	ble.n	8002146 <_printf_float+0x1aa>
 800212e:	6121      	str	r1, [r4, #16]
 8002130:	b913      	cbnz	r3, 8002138 <_printf_float+0x19c>
 8002132:	6822      	ldr	r2, [r4, #0]
 8002134:	07d0      	lsls	r0, r2, #31
 8002136:	d502      	bpl.n	800213e <_printf_float+0x1a2>
 8002138:	3301      	adds	r3, #1
 800213a:	440b      	add	r3, r1
 800213c:	6123      	str	r3, [r4, #16]
 800213e:	65a1      	str	r1, [r4, #88]	; 0x58
 8002140:	f04f 0900 	mov.w	r9, #0
 8002144:	e7de      	b.n	8002104 <_printf_float+0x168>
 8002146:	b913      	cbnz	r3, 800214e <_printf_float+0x1b2>
 8002148:	6822      	ldr	r2, [r4, #0]
 800214a:	07d2      	lsls	r2, r2, #31
 800214c:	d501      	bpl.n	8002152 <_printf_float+0x1b6>
 800214e:	3302      	adds	r3, #2
 8002150:	e7f4      	b.n	800213c <_printf_float+0x1a0>
 8002152:	2301      	movs	r3, #1
 8002154:	e7f2      	b.n	800213c <_printf_float+0x1a0>
 8002156:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800215a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800215c:	4299      	cmp	r1, r3
 800215e:	db05      	blt.n	800216c <_printf_float+0x1d0>
 8002160:	6823      	ldr	r3, [r4, #0]
 8002162:	6121      	str	r1, [r4, #16]
 8002164:	07d8      	lsls	r0, r3, #31
 8002166:	d5ea      	bpl.n	800213e <_printf_float+0x1a2>
 8002168:	1c4b      	adds	r3, r1, #1
 800216a:	e7e7      	b.n	800213c <_printf_float+0x1a0>
 800216c:	2900      	cmp	r1, #0
 800216e:	bfd4      	ite	le
 8002170:	f1c1 0202 	rsble	r2, r1, #2
 8002174:	2201      	movgt	r2, #1
 8002176:	4413      	add	r3, r2
 8002178:	e7e0      	b.n	800213c <_printf_float+0x1a0>
 800217a:	6823      	ldr	r3, [r4, #0]
 800217c:	055a      	lsls	r2, r3, #21
 800217e:	d407      	bmi.n	8002190 <_printf_float+0x1f4>
 8002180:	6923      	ldr	r3, [r4, #16]
 8002182:	4642      	mov	r2, r8
 8002184:	4631      	mov	r1, r6
 8002186:	4628      	mov	r0, r5
 8002188:	47b8      	blx	r7
 800218a:	3001      	adds	r0, #1
 800218c:	d12c      	bne.n	80021e8 <_printf_float+0x24c>
 800218e:	e764      	b.n	800205a <_printf_float+0xbe>
 8002190:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8002194:	f240 80e0 	bls.w	8002358 <_printf_float+0x3bc>
 8002198:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800219c:	2200      	movs	r2, #0
 800219e:	2300      	movs	r3, #0
 80021a0:	f7fe fc92 	bl	8000ac8 <__aeabi_dcmpeq>
 80021a4:	2800      	cmp	r0, #0
 80021a6:	d034      	beq.n	8002212 <_printf_float+0x276>
 80021a8:	4a37      	ldr	r2, [pc, #220]	; (8002288 <_printf_float+0x2ec>)
 80021aa:	2301      	movs	r3, #1
 80021ac:	4631      	mov	r1, r6
 80021ae:	4628      	mov	r0, r5
 80021b0:	47b8      	blx	r7
 80021b2:	3001      	adds	r0, #1
 80021b4:	f43f af51 	beq.w	800205a <_printf_float+0xbe>
 80021b8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80021bc:	429a      	cmp	r2, r3
 80021be:	db02      	blt.n	80021c6 <_printf_float+0x22a>
 80021c0:	6823      	ldr	r3, [r4, #0]
 80021c2:	07d8      	lsls	r0, r3, #31
 80021c4:	d510      	bpl.n	80021e8 <_printf_float+0x24c>
 80021c6:	ee18 3a10 	vmov	r3, s16
 80021ca:	4652      	mov	r2, sl
 80021cc:	4631      	mov	r1, r6
 80021ce:	4628      	mov	r0, r5
 80021d0:	47b8      	blx	r7
 80021d2:	3001      	adds	r0, #1
 80021d4:	f43f af41 	beq.w	800205a <_printf_float+0xbe>
 80021d8:	f04f 0800 	mov.w	r8, #0
 80021dc:	f104 091a 	add.w	r9, r4, #26
 80021e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80021e2:	3b01      	subs	r3, #1
 80021e4:	4543      	cmp	r3, r8
 80021e6:	dc09      	bgt.n	80021fc <_printf_float+0x260>
 80021e8:	6823      	ldr	r3, [r4, #0]
 80021ea:	079b      	lsls	r3, r3, #30
 80021ec:	f100 8107 	bmi.w	80023fe <_printf_float+0x462>
 80021f0:	68e0      	ldr	r0, [r4, #12]
 80021f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80021f4:	4298      	cmp	r0, r3
 80021f6:	bfb8      	it	lt
 80021f8:	4618      	movlt	r0, r3
 80021fa:	e730      	b.n	800205e <_printf_float+0xc2>
 80021fc:	2301      	movs	r3, #1
 80021fe:	464a      	mov	r2, r9
 8002200:	4631      	mov	r1, r6
 8002202:	4628      	mov	r0, r5
 8002204:	47b8      	blx	r7
 8002206:	3001      	adds	r0, #1
 8002208:	f43f af27 	beq.w	800205a <_printf_float+0xbe>
 800220c:	f108 0801 	add.w	r8, r8, #1
 8002210:	e7e6      	b.n	80021e0 <_printf_float+0x244>
 8002212:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002214:	2b00      	cmp	r3, #0
 8002216:	dc39      	bgt.n	800228c <_printf_float+0x2f0>
 8002218:	4a1b      	ldr	r2, [pc, #108]	; (8002288 <_printf_float+0x2ec>)
 800221a:	2301      	movs	r3, #1
 800221c:	4631      	mov	r1, r6
 800221e:	4628      	mov	r0, r5
 8002220:	47b8      	blx	r7
 8002222:	3001      	adds	r0, #1
 8002224:	f43f af19 	beq.w	800205a <_printf_float+0xbe>
 8002228:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800222c:	4313      	orrs	r3, r2
 800222e:	d102      	bne.n	8002236 <_printf_float+0x29a>
 8002230:	6823      	ldr	r3, [r4, #0]
 8002232:	07d9      	lsls	r1, r3, #31
 8002234:	d5d8      	bpl.n	80021e8 <_printf_float+0x24c>
 8002236:	ee18 3a10 	vmov	r3, s16
 800223a:	4652      	mov	r2, sl
 800223c:	4631      	mov	r1, r6
 800223e:	4628      	mov	r0, r5
 8002240:	47b8      	blx	r7
 8002242:	3001      	adds	r0, #1
 8002244:	f43f af09 	beq.w	800205a <_printf_float+0xbe>
 8002248:	f04f 0900 	mov.w	r9, #0
 800224c:	f104 0a1a 	add.w	sl, r4, #26
 8002250:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002252:	425b      	negs	r3, r3
 8002254:	454b      	cmp	r3, r9
 8002256:	dc01      	bgt.n	800225c <_printf_float+0x2c0>
 8002258:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800225a:	e792      	b.n	8002182 <_printf_float+0x1e6>
 800225c:	2301      	movs	r3, #1
 800225e:	4652      	mov	r2, sl
 8002260:	4631      	mov	r1, r6
 8002262:	4628      	mov	r0, r5
 8002264:	47b8      	blx	r7
 8002266:	3001      	adds	r0, #1
 8002268:	f43f aef7 	beq.w	800205a <_printf_float+0xbe>
 800226c:	f109 0901 	add.w	r9, r9, #1
 8002270:	e7ee      	b.n	8002250 <_printf_float+0x2b4>
 8002272:	bf00      	nop
 8002274:	7fefffff 	.word	0x7fefffff
 8002278:	08006983 	.word	0x08006983
 800227c:	08006987 	.word	0x08006987
 8002280:	0800698b 	.word	0x0800698b
 8002284:	0800698f 	.word	0x0800698f
 8002288:	08006993 	.word	0x08006993
 800228c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800228e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002290:	429a      	cmp	r2, r3
 8002292:	bfa8      	it	ge
 8002294:	461a      	movge	r2, r3
 8002296:	2a00      	cmp	r2, #0
 8002298:	4691      	mov	r9, r2
 800229a:	dc37      	bgt.n	800230c <_printf_float+0x370>
 800229c:	f04f 0b00 	mov.w	fp, #0
 80022a0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022a4:	f104 021a 	add.w	r2, r4, #26
 80022a8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80022aa:	9305      	str	r3, [sp, #20]
 80022ac:	eba3 0309 	sub.w	r3, r3, r9
 80022b0:	455b      	cmp	r3, fp
 80022b2:	dc33      	bgt.n	800231c <_printf_float+0x380>
 80022b4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80022b8:	429a      	cmp	r2, r3
 80022ba:	db3b      	blt.n	8002334 <_printf_float+0x398>
 80022bc:	6823      	ldr	r3, [r4, #0]
 80022be:	07da      	lsls	r2, r3, #31
 80022c0:	d438      	bmi.n	8002334 <_printf_float+0x398>
 80022c2:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80022c6:	eba2 0903 	sub.w	r9, r2, r3
 80022ca:	9b05      	ldr	r3, [sp, #20]
 80022cc:	1ad2      	subs	r2, r2, r3
 80022ce:	4591      	cmp	r9, r2
 80022d0:	bfa8      	it	ge
 80022d2:	4691      	movge	r9, r2
 80022d4:	f1b9 0f00 	cmp.w	r9, #0
 80022d8:	dc35      	bgt.n	8002346 <_printf_float+0x3aa>
 80022da:	f04f 0800 	mov.w	r8, #0
 80022de:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022e2:	f104 0a1a 	add.w	sl, r4, #26
 80022e6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80022ea:	1a9b      	subs	r3, r3, r2
 80022ec:	eba3 0309 	sub.w	r3, r3, r9
 80022f0:	4543      	cmp	r3, r8
 80022f2:	f77f af79 	ble.w	80021e8 <_printf_float+0x24c>
 80022f6:	2301      	movs	r3, #1
 80022f8:	4652      	mov	r2, sl
 80022fa:	4631      	mov	r1, r6
 80022fc:	4628      	mov	r0, r5
 80022fe:	47b8      	blx	r7
 8002300:	3001      	adds	r0, #1
 8002302:	f43f aeaa 	beq.w	800205a <_printf_float+0xbe>
 8002306:	f108 0801 	add.w	r8, r8, #1
 800230a:	e7ec      	b.n	80022e6 <_printf_float+0x34a>
 800230c:	4613      	mov	r3, r2
 800230e:	4631      	mov	r1, r6
 8002310:	4642      	mov	r2, r8
 8002312:	4628      	mov	r0, r5
 8002314:	47b8      	blx	r7
 8002316:	3001      	adds	r0, #1
 8002318:	d1c0      	bne.n	800229c <_printf_float+0x300>
 800231a:	e69e      	b.n	800205a <_printf_float+0xbe>
 800231c:	2301      	movs	r3, #1
 800231e:	4631      	mov	r1, r6
 8002320:	4628      	mov	r0, r5
 8002322:	9205      	str	r2, [sp, #20]
 8002324:	47b8      	blx	r7
 8002326:	3001      	adds	r0, #1
 8002328:	f43f ae97 	beq.w	800205a <_printf_float+0xbe>
 800232c:	9a05      	ldr	r2, [sp, #20]
 800232e:	f10b 0b01 	add.w	fp, fp, #1
 8002332:	e7b9      	b.n	80022a8 <_printf_float+0x30c>
 8002334:	ee18 3a10 	vmov	r3, s16
 8002338:	4652      	mov	r2, sl
 800233a:	4631      	mov	r1, r6
 800233c:	4628      	mov	r0, r5
 800233e:	47b8      	blx	r7
 8002340:	3001      	adds	r0, #1
 8002342:	d1be      	bne.n	80022c2 <_printf_float+0x326>
 8002344:	e689      	b.n	800205a <_printf_float+0xbe>
 8002346:	9a05      	ldr	r2, [sp, #20]
 8002348:	464b      	mov	r3, r9
 800234a:	4442      	add	r2, r8
 800234c:	4631      	mov	r1, r6
 800234e:	4628      	mov	r0, r5
 8002350:	47b8      	blx	r7
 8002352:	3001      	adds	r0, #1
 8002354:	d1c1      	bne.n	80022da <_printf_float+0x33e>
 8002356:	e680      	b.n	800205a <_printf_float+0xbe>
 8002358:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800235a:	2a01      	cmp	r2, #1
 800235c:	dc01      	bgt.n	8002362 <_printf_float+0x3c6>
 800235e:	07db      	lsls	r3, r3, #31
 8002360:	d53a      	bpl.n	80023d8 <_printf_float+0x43c>
 8002362:	2301      	movs	r3, #1
 8002364:	4642      	mov	r2, r8
 8002366:	4631      	mov	r1, r6
 8002368:	4628      	mov	r0, r5
 800236a:	47b8      	blx	r7
 800236c:	3001      	adds	r0, #1
 800236e:	f43f ae74 	beq.w	800205a <_printf_float+0xbe>
 8002372:	ee18 3a10 	vmov	r3, s16
 8002376:	4652      	mov	r2, sl
 8002378:	4631      	mov	r1, r6
 800237a:	4628      	mov	r0, r5
 800237c:	47b8      	blx	r7
 800237e:	3001      	adds	r0, #1
 8002380:	f43f ae6b 	beq.w	800205a <_printf_float+0xbe>
 8002384:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002388:	2200      	movs	r2, #0
 800238a:	2300      	movs	r3, #0
 800238c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002390:	f7fe fb9a 	bl	8000ac8 <__aeabi_dcmpeq>
 8002394:	b9d8      	cbnz	r0, 80023ce <_printf_float+0x432>
 8002396:	f10a 33ff 	add.w	r3, sl, #4294967295
 800239a:	f108 0201 	add.w	r2, r8, #1
 800239e:	4631      	mov	r1, r6
 80023a0:	4628      	mov	r0, r5
 80023a2:	47b8      	blx	r7
 80023a4:	3001      	adds	r0, #1
 80023a6:	d10e      	bne.n	80023c6 <_printf_float+0x42a>
 80023a8:	e657      	b.n	800205a <_printf_float+0xbe>
 80023aa:	2301      	movs	r3, #1
 80023ac:	4652      	mov	r2, sl
 80023ae:	4631      	mov	r1, r6
 80023b0:	4628      	mov	r0, r5
 80023b2:	47b8      	blx	r7
 80023b4:	3001      	adds	r0, #1
 80023b6:	f43f ae50 	beq.w	800205a <_printf_float+0xbe>
 80023ba:	f108 0801 	add.w	r8, r8, #1
 80023be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80023c0:	3b01      	subs	r3, #1
 80023c2:	4543      	cmp	r3, r8
 80023c4:	dcf1      	bgt.n	80023aa <_printf_float+0x40e>
 80023c6:	464b      	mov	r3, r9
 80023c8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80023cc:	e6da      	b.n	8002184 <_printf_float+0x1e8>
 80023ce:	f04f 0800 	mov.w	r8, #0
 80023d2:	f104 0a1a 	add.w	sl, r4, #26
 80023d6:	e7f2      	b.n	80023be <_printf_float+0x422>
 80023d8:	2301      	movs	r3, #1
 80023da:	4642      	mov	r2, r8
 80023dc:	e7df      	b.n	800239e <_printf_float+0x402>
 80023de:	2301      	movs	r3, #1
 80023e0:	464a      	mov	r2, r9
 80023e2:	4631      	mov	r1, r6
 80023e4:	4628      	mov	r0, r5
 80023e6:	47b8      	blx	r7
 80023e8:	3001      	adds	r0, #1
 80023ea:	f43f ae36 	beq.w	800205a <_printf_float+0xbe>
 80023ee:	f108 0801 	add.w	r8, r8, #1
 80023f2:	68e3      	ldr	r3, [r4, #12]
 80023f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80023f6:	1a5b      	subs	r3, r3, r1
 80023f8:	4543      	cmp	r3, r8
 80023fa:	dcf0      	bgt.n	80023de <_printf_float+0x442>
 80023fc:	e6f8      	b.n	80021f0 <_printf_float+0x254>
 80023fe:	f04f 0800 	mov.w	r8, #0
 8002402:	f104 0919 	add.w	r9, r4, #25
 8002406:	e7f4      	b.n	80023f2 <_printf_float+0x456>

08002408 <_printf_common>:
 8002408:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800240c:	4616      	mov	r6, r2
 800240e:	4699      	mov	r9, r3
 8002410:	688a      	ldr	r2, [r1, #8]
 8002412:	690b      	ldr	r3, [r1, #16]
 8002414:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002418:	4293      	cmp	r3, r2
 800241a:	bfb8      	it	lt
 800241c:	4613      	movlt	r3, r2
 800241e:	6033      	str	r3, [r6, #0]
 8002420:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002424:	4607      	mov	r7, r0
 8002426:	460c      	mov	r4, r1
 8002428:	b10a      	cbz	r2, 800242e <_printf_common+0x26>
 800242a:	3301      	adds	r3, #1
 800242c:	6033      	str	r3, [r6, #0]
 800242e:	6823      	ldr	r3, [r4, #0]
 8002430:	0699      	lsls	r1, r3, #26
 8002432:	bf42      	ittt	mi
 8002434:	6833      	ldrmi	r3, [r6, #0]
 8002436:	3302      	addmi	r3, #2
 8002438:	6033      	strmi	r3, [r6, #0]
 800243a:	6825      	ldr	r5, [r4, #0]
 800243c:	f015 0506 	ands.w	r5, r5, #6
 8002440:	d106      	bne.n	8002450 <_printf_common+0x48>
 8002442:	f104 0a19 	add.w	sl, r4, #25
 8002446:	68e3      	ldr	r3, [r4, #12]
 8002448:	6832      	ldr	r2, [r6, #0]
 800244a:	1a9b      	subs	r3, r3, r2
 800244c:	42ab      	cmp	r3, r5
 800244e:	dc26      	bgt.n	800249e <_printf_common+0x96>
 8002450:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002454:	1e13      	subs	r3, r2, #0
 8002456:	6822      	ldr	r2, [r4, #0]
 8002458:	bf18      	it	ne
 800245a:	2301      	movne	r3, #1
 800245c:	0692      	lsls	r2, r2, #26
 800245e:	d42b      	bmi.n	80024b8 <_printf_common+0xb0>
 8002460:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002464:	4649      	mov	r1, r9
 8002466:	4638      	mov	r0, r7
 8002468:	47c0      	blx	r8
 800246a:	3001      	adds	r0, #1
 800246c:	d01e      	beq.n	80024ac <_printf_common+0xa4>
 800246e:	6823      	ldr	r3, [r4, #0]
 8002470:	6922      	ldr	r2, [r4, #16]
 8002472:	f003 0306 	and.w	r3, r3, #6
 8002476:	2b04      	cmp	r3, #4
 8002478:	bf02      	ittt	eq
 800247a:	68e5      	ldreq	r5, [r4, #12]
 800247c:	6833      	ldreq	r3, [r6, #0]
 800247e:	1aed      	subeq	r5, r5, r3
 8002480:	68a3      	ldr	r3, [r4, #8]
 8002482:	bf0c      	ite	eq
 8002484:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002488:	2500      	movne	r5, #0
 800248a:	4293      	cmp	r3, r2
 800248c:	bfc4      	itt	gt
 800248e:	1a9b      	subgt	r3, r3, r2
 8002490:	18ed      	addgt	r5, r5, r3
 8002492:	2600      	movs	r6, #0
 8002494:	341a      	adds	r4, #26
 8002496:	42b5      	cmp	r5, r6
 8002498:	d11a      	bne.n	80024d0 <_printf_common+0xc8>
 800249a:	2000      	movs	r0, #0
 800249c:	e008      	b.n	80024b0 <_printf_common+0xa8>
 800249e:	2301      	movs	r3, #1
 80024a0:	4652      	mov	r2, sl
 80024a2:	4649      	mov	r1, r9
 80024a4:	4638      	mov	r0, r7
 80024a6:	47c0      	blx	r8
 80024a8:	3001      	adds	r0, #1
 80024aa:	d103      	bne.n	80024b4 <_printf_common+0xac>
 80024ac:	f04f 30ff 	mov.w	r0, #4294967295
 80024b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80024b4:	3501      	adds	r5, #1
 80024b6:	e7c6      	b.n	8002446 <_printf_common+0x3e>
 80024b8:	18e1      	adds	r1, r4, r3
 80024ba:	1c5a      	adds	r2, r3, #1
 80024bc:	2030      	movs	r0, #48	; 0x30
 80024be:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80024c2:	4422      	add	r2, r4
 80024c4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80024c8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80024cc:	3302      	adds	r3, #2
 80024ce:	e7c7      	b.n	8002460 <_printf_common+0x58>
 80024d0:	2301      	movs	r3, #1
 80024d2:	4622      	mov	r2, r4
 80024d4:	4649      	mov	r1, r9
 80024d6:	4638      	mov	r0, r7
 80024d8:	47c0      	blx	r8
 80024da:	3001      	adds	r0, #1
 80024dc:	d0e6      	beq.n	80024ac <_printf_common+0xa4>
 80024de:	3601      	adds	r6, #1
 80024e0:	e7d9      	b.n	8002496 <_printf_common+0x8e>
	...

080024e4 <_printf_i>:
 80024e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80024e8:	7e0f      	ldrb	r7, [r1, #24]
 80024ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80024ec:	2f78      	cmp	r7, #120	; 0x78
 80024ee:	4691      	mov	r9, r2
 80024f0:	4680      	mov	r8, r0
 80024f2:	460c      	mov	r4, r1
 80024f4:	469a      	mov	sl, r3
 80024f6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80024fa:	d807      	bhi.n	800250c <_printf_i+0x28>
 80024fc:	2f62      	cmp	r7, #98	; 0x62
 80024fe:	d80a      	bhi.n	8002516 <_printf_i+0x32>
 8002500:	2f00      	cmp	r7, #0
 8002502:	f000 80d4 	beq.w	80026ae <_printf_i+0x1ca>
 8002506:	2f58      	cmp	r7, #88	; 0x58
 8002508:	f000 80c0 	beq.w	800268c <_printf_i+0x1a8>
 800250c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002510:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002514:	e03a      	b.n	800258c <_printf_i+0xa8>
 8002516:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800251a:	2b15      	cmp	r3, #21
 800251c:	d8f6      	bhi.n	800250c <_printf_i+0x28>
 800251e:	a101      	add	r1, pc, #4	; (adr r1, 8002524 <_printf_i+0x40>)
 8002520:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002524:	0800257d 	.word	0x0800257d
 8002528:	08002591 	.word	0x08002591
 800252c:	0800250d 	.word	0x0800250d
 8002530:	0800250d 	.word	0x0800250d
 8002534:	0800250d 	.word	0x0800250d
 8002538:	0800250d 	.word	0x0800250d
 800253c:	08002591 	.word	0x08002591
 8002540:	0800250d 	.word	0x0800250d
 8002544:	0800250d 	.word	0x0800250d
 8002548:	0800250d 	.word	0x0800250d
 800254c:	0800250d 	.word	0x0800250d
 8002550:	08002695 	.word	0x08002695
 8002554:	080025bd 	.word	0x080025bd
 8002558:	0800264f 	.word	0x0800264f
 800255c:	0800250d 	.word	0x0800250d
 8002560:	0800250d 	.word	0x0800250d
 8002564:	080026b7 	.word	0x080026b7
 8002568:	0800250d 	.word	0x0800250d
 800256c:	080025bd 	.word	0x080025bd
 8002570:	0800250d 	.word	0x0800250d
 8002574:	0800250d 	.word	0x0800250d
 8002578:	08002657 	.word	0x08002657
 800257c:	682b      	ldr	r3, [r5, #0]
 800257e:	1d1a      	adds	r2, r3, #4
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	602a      	str	r2, [r5, #0]
 8002584:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002588:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800258c:	2301      	movs	r3, #1
 800258e:	e09f      	b.n	80026d0 <_printf_i+0x1ec>
 8002590:	6820      	ldr	r0, [r4, #0]
 8002592:	682b      	ldr	r3, [r5, #0]
 8002594:	0607      	lsls	r7, r0, #24
 8002596:	f103 0104 	add.w	r1, r3, #4
 800259a:	6029      	str	r1, [r5, #0]
 800259c:	d501      	bpl.n	80025a2 <_printf_i+0xbe>
 800259e:	681e      	ldr	r6, [r3, #0]
 80025a0:	e003      	b.n	80025aa <_printf_i+0xc6>
 80025a2:	0646      	lsls	r6, r0, #25
 80025a4:	d5fb      	bpl.n	800259e <_printf_i+0xba>
 80025a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80025aa:	2e00      	cmp	r6, #0
 80025ac:	da03      	bge.n	80025b6 <_printf_i+0xd2>
 80025ae:	232d      	movs	r3, #45	; 0x2d
 80025b0:	4276      	negs	r6, r6
 80025b2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80025b6:	485a      	ldr	r0, [pc, #360]	; (8002720 <_printf_i+0x23c>)
 80025b8:	230a      	movs	r3, #10
 80025ba:	e012      	b.n	80025e2 <_printf_i+0xfe>
 80025bc:	682b      	ldr	r3, [r5, #0]
 80025be:	6820      	ldr	r0, [r4, #0]
 80025c0:	1d19      	adds	r1, r3, #4
 80025c2:	6029      	str	r1, [r5, #0]
 80025c4:	0605      	lsls	r5, r0, #24
 80025c6:	d501      	bpl.n	80025cc <_printf_i+0xe8>
 80025c8:	681e      	ldr	r6, [r3, #0]
 80025ca:	e002      	b.n	80025d2 <_printf_i+0xee>
 80025cc:	0641      	lsls	r1, r0, #25
 80025ce:	d5fb      	bpl.n	80025c8 <_printf_i+0xe4>
 80025d0:	881e      	ldrh	r6, [r3, #0]
 80025d2:	4853      	ldr	r0, [pc, #332]	; (8002720 <_printf_i+0x23c>)
 80025d4:	2f6f      	cmp	r7, #111	; 0x6f
 80025d6:	bf0c      	ite	eq
 80025d8:	2308      	moveq	r3, #8
 80025da:	230a      	movne	r3, #10
 80025dc:	2100      	movs	r1, #0
 80025de:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80025e2:	6865      	ldr	r5, [r4, #4]
 80025e4:	60a5      	str	r5, [r4, #8]
 80025e6:	2d00      	cmp	r5, #0
 80025e8:	bfa2      	ittt	ge
 80025ea:	6821      	ldrge	r1, [r4, #0]
 80025ec:	f021 0104 	bicge.w	r1, r1, #4
 80025f0:	6021      	strge	r1, [r4, #0]
 80025f2:	b90e      	cbnz	r6, 80025f8 <_printf_i+0x114>
 80025f4:	2d00      	cmp	r5, #0
 80025f6:	d04b      	beq.n	8002690 <_printf_i+0x1ac>
 80025f8:	4615      	mov	r5, r2
 80025fa:	fbb6 f1f3 	udiv	r1, r6, r3
 80025fe:	fb03 6711 	mls	r7, r3, r1, r6
 8002602:	5dc7      	ldrb	r7, [r0, r7]
 8002604:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002608:	4637      	mov	r7, r6
 800260a:	42bb      	cmp	r3, r7
 800260c:	460e      	mov	r6, r1
 800260e:	d9f4      	bls.n	80025fa <_printf_i+0x116>
 8002610:	2b08      	cmp	r3, #8
 8002612:	d10b      	bne.n	800262c <_printf_i+0x148>
 8002614:	6823      	ldr	r3, [r4, #0]
 8002616:	07de      	lsls	r6, r3, #31
 8002618:	d508      	bpl.n	800262c <_printf_i+0x148>
 800261a:	6923      	ldr	r3, [r4, #16]
 800261c:	6861      	ldr	r1, [r4, #4]
 800261e:	4299      	cmp	r1, r3
 8002620:	bfde      	ittt	le
 8002622:	2330      	movle	r3, #48	; 0x30
 8002624:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002628:	f105 35ff 	addle.w	r5, r5, #4294967295
 800262c:	1b52      	subs	r2, r2, r5
 800262e:	6122      	str	r2, [r4, #16]
 8002630:	f8cd a000 	str.w	sl, [sp]
 8002634:	464b      	mov	r3, r9
 8002636:	aa03      	add	r2, sp, #12
 8002638:	4621      	mov	r1, r4
 800263a:	4640      	mov	r0, r8
 800263c:	f7ff fee4 	bl	8002408 <_printf_common>
 8002640:	3001      	adds	r0, #1
 8002642:	d14a      	bne.n	80026da <_printf_i+0x1f6>
 8002644:	f04f 30ff 	mov.w	r0, #4294967295
 8002648:	b004      	add	sp, #16
 800264a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800264e:	6823      	ldr	r3, [r4, #0]
 8002650:	f043 0320 	orr.w	r3, r3, #32
 8002654:	6023      	str	r3, [r4, #0]
 8002656:	4833      	ldr	r0, [pc, #204]	; (8002724 <_printf_i+0x240>)
 8002658:	2778      	movs	r7, #120	; 0x78
 800265a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800265e:	6823      	ldr	r3, [r4, #0]
 8002660:	6829      	ldr	r1, [r5, #0]
 8002662:	061f      	lsls	r7, r3, #24
 8002664:	f851 6b04 	ldr.w	r6, [r1], #4
 8002668:	d402      	bmi.n	8002670 <_printf_i+0x18c>
 800266a:	065f      	lsls	r7, r3, #25
 800266c:	bf48      	it	mi
 800266e:	b2b6      	uxthmi	r6, r6
 8002670:	07df      	lsls	r7, r3, #31
 8002672:	bf48      	it	mi
 8002674:	f043 0320 	orrmi.w	r3, r3, #32
 8002678:	6029      	str	r1, [r5, #0]
 800267a:	bf48      	it	mi
 800267c:	6023      	strmi	r3, [r4, #0]
 800267e:	b91e      	cbnz	r6, 8002688 <_printf_i+0x1a4>
 8002680:	6823      	ldr	r3, [r4, #0]
 8002682:	f023 0320 	bic.w	r3, r3, #32
 8002686:	6023      	str	r3, [r4, #0]
 8002688:	2310      	movs	r3, #16
 800268a:	e7a7      	b.n	80025dc <_printf_i+0xf8>
 800268c:	4824      	ldr	r0, [pc, #144]	; (8002720 <_printf_i+0x23c>)
 800268e:	e7e4      	b.n	800265a <_printf_i+0x176>
 8002690:	4615      	mov	r5, r2
 8002692:	e7bd      	b.n	8002610 <_printf_i+0x12c>
 8002694:	682b      	ldr	r3, [r5, #0]
 8002696:	6826      	ldr	r6, [r4, #0]
 8002698:	6961      	ldr	r1, [r4, #20]
 800269a:	1d18      	adds	r0, r3, #4
 800269c:	6028      	str	r0, [r5, #0]
 800269e:	0635      	lsls	r5, r6, #24
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	d501      	bpl.n	80026a8 <_printf_i+0x1c4>
 80026a4:	6019      	str	r1, [r3, #0]
 80026a6:	e002      	b.n	80026ae <_printf_i+0x1ca>
 80026a8:	0670      	lsls	r0, r6, #25
 80026aa:	d5fb      	bpl.n	80026a4 <_printf_i+0x1c0>
 80026ac:	8019      	strh	r1, [r3, #0]
 80026ae:	2300      	movs	r3, #0
 80026b0:	6123      	str	r3, [r4, #16]
 80026b2:	4615      	mov	r5, r2
 80026b4:	e7bc      	b.n	8002630 <_printf_i+0x14c>
 80026b6:	682b      	ldr	r3, [r5, #0]
 80026b8:	1d1a      	adds	r2, r3, #4
 80026ba:	602a      	str	r2, [r5, #0]
 80026bc:	681d      	ldr	r5, [r3, #0]
 80026be:	6862      	ldr	r2, [r4, #4]
 80026c0:	2100      	movs	r1, #0
 80026c2:	4628      	mov	r0, r5
 80026c4:	f7fd fd84 	bl	80001d0 <memchr>
 80026c8:	b108      	cbz	r0, 80026ce <_printf_i+0x1ea>
 80026ca:	1b40      	subs	r0, r0, r5
 80026cc:	6060      	str	r0, [r4, #4]
 80026ce:	6863      	ldr	r3, [r4, #4]
 80026d0:	6123      	str	r3, [r4, #16]
 80026d2:	2300      	movs	r3, #0
 80026d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80026d8:	e7aa      	b.n	8002630 <_printf_i+0x14c>
 80026da:	6923      	ldr	r3, [r4, #16]
 80026dc:	462a      	mov	r2, r5
 80026de:	4649      	mov	r1, r9
 80026e0:	4640      	mov	r0, r8
 80026e2:	47d0      	blx	sl
 80026e4:	3001      	adds	r0, #1
 80026e6:	d0ad      	beq.n	8002644 <_printf_i+0x160>
 80026e8:	6823      	ldr	r3, [r4, #0]
 80026ea:	079b      	lsls	r3, r3, #30
 80026ec:	d413      	bmi.n	8002716 <_printf_i+0x232>
 80026ee:	68e0      	ldr	r0, [r4, #12]
 80026f0:	9b03      	ldr	r3, [sp, #12]
 80026f2:	4298      	cmp	r0, r3
 80026f4:	bfb8      	it	lt
 80026f6:	4618      	movlt	r0, r3
 80026f8:	e7a6      	b.n	8002648 <_printf_i+0x164>
 80026fa:	2301      	movs	r3, #1
 80026fc:	4632      	mov	r2, r6
 80026fe:	4649      	mov	r1, r9
 8002700:	4640      	mov	r0, r8
 8002702:	47d0      	blx	sl
 8002704:	3001      	adds	r0, #1
 8002706:	d09d      	beq.n	8002644 <_printf_i+0x160>
 8002708:	3501      	adds	r5, #1
 800270a:	68e3      	ldr	r3, [r4, #12]
 800270c:	9903      	ldr	r1, [sp, #12]
 800270e:	1a5b      	subs	r3, r3, r1
 8002710:	42ab      	cmp	r3, r5
 8002712:	dcf2      	bgt.n	80026fa <_printf_i+0x216>
 8002714:	e7eb      	b.n	80026ee <_printf_i+0x20a>
 8002716:	2500      	movs	r5, #0
 8002718:	f104 0619 	add.w	r6, r4, #25
 800271c:	e7f5      	b.n	800270a <_printf_i+0x226>
 800271e:	bf00      	nop
 8002720:	08006995 	.word	0x08006995
 8002724:	080069a6 	.word	0x080069a6

08002728 <_scanf_float>:
 8002728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800272c:	b087      	sub	sp, #28
 800272e:	4617      	mov	r7, r2
 8002730:	9303      	str	r3, [sp, #12]
 8002732:	688b      	ldr	r3, [r1, #8]
 8002734:	1e5a      	subs	r2, r3, #1
 8002736:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800273a:	bf83      	ittte	hi
 800273c:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002740:	195b      	addhi	r3, r3, r5
 8002742:	9302      	strhi	r3, [sp, #8]
 8002744:	2300      	movls	r3, #0
 8002746:	bf86      	itte	hi
 8002748:	f240 135d 	movwhi	r3, #349	; 0x15d
 800274c:	608b      	strhi	r3, [r1, #8]
 800274e:	9302      	strls	r3, [sp, #8]
 8002750:	680b      	ldr	r3, [r1, #0]
 8002752:	468b      	mov	fp, r1
 8002754:	2500      	movs	r5, #0
 8002756:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800275a:	f84b 3b1c 	str.w	r3, [fp], #28
 800275e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002762:	4680      	mov	r8, r0
 8002764:	460c      	mov	r4, r1
 8002766:	465e      	mov	r6, fp
 8002768:	46aa      	mov	sl, r5
 800276a:	46a9      	mov	r9, r5
 800276c:	9501      	str	r5, [sp, #4]
 800276e:	68a2      	ldr	r2, [r4, #8]
 8002770:	b152      	cbz	r2, 8002788 <_scanf_float+0x60>
 8002772:	683b      	ldr	r3, [r7, #0]
 8002774:	781b      	ldrb	r3, [r3, #0]
 8002776:	2b4e      	cmp	r3, #78	; 0x4e
 8002778:	d864      	bhi.n	8002844 <_scanf_float+0x11c>
 800277a:	2b40      	cmp	r3, #64	; 0x40
 800277c:	d83c      	bhi.n	80027f8 <_scanf_float+0xd0>
 800277e:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002782:	b2c8      	uxtb	r0, r1
 8002784:	280e      	cmp	r0, #14
 8002786:	d93a      	bls.n	80027fe <_scanf_float+0xd6>
 8002788:	f1b9 0f00 	cmp.w	r9, #0
 800278c:	d003      	beq.n	8002796 <_scanf_float+0x6e>
 800278e:	6823      	ldr	r3, [r4, #0]
 8002790:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002794:	6023      	str	r3, [r4, #0]
 8002796:	f10a 3aff 	add.w	sl, sl, #4294967295
 800279a:	f1ba 0f01 	cmp.w	sl, #1
 800279e:	f200 8113 	bhi.w	80029c8 <_scanf_float+0x2a0>
 80027a2:	455e      	cmp	r6, fp
 80027a4:	f200 8105 	bhi.w	80029b2 <_scanf_float+0x28a>
 80027a8:	2501      	movs	r5, #1
 80027aa:	4628      	mov	r0, r5
 80027ac:	b007      	add	sp, #28
 80027ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027b2:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80027b6:	2a0d      	cmp	r2, #13
 80027b8:	d8e6      	bhi.n	8002788 <_scanf_float+0x60>
 80027ba:	a101      	add	r1, pc, #4	; (adr r1, 80027c0 <_scanf_float+0x98>)
 80027bc:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80027c0:	080028ff 	.word	0x080028ff
 80027c4:	08002789 	.word	0x08002789
 80027c8:	08002789 	.word	0x08002789
 80027cc:	08002789 	.word	0x08002789
 80027d0:	0800295f 	.word	0x0800295f
 80027d4:	08002937 	.word	0x08002937
 80027d8:	08002789 	.word	0x08002789
 80027dc:	08002789 	.word	0x08002789
 80027e0:	0800290d 	.word	0x0800290d
 80027e4:	08002789 	.word	0x08002789
 80027e8:	08002789 	.word	0x08002789
 80027ec:	08002789 	.word	0x08002789
 80027f0:	08002789 	.word	0x08002789
 80027f4:	080028c5 	.word	0x080028c5
 80027f8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80027fc:	e7db      	b.n	80027b6 <_scanf_float+0x8e>
 80027fe:	290e      	cmp	r1, #14
 8002800:	d8c2      	bhi.n	8002788 <_scanf_float+0x60>
 8002802:	a001      	add	r0, pc, #4	; (adr r0, 8002808 <_scanf_float+0xe0>)
 8002804:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002808:	080028b7 	.word	0x080028b7
 800280c:	08002789 	.word	0x08002789
 8002810:	080028b7 	.word	0x080028b7
 8002814:	0800294b 	.word	0x0800294b
 8002818:	08002789 	.word	0x08002789
 800281c:	08002865 	.word	0x08002865
 8002820:	080028a1 	.word	0x080028a1
 8002824:	080028a1 	.word	0x080028a1
 8002828:	080028a1 	.word	0x080028a1
 800282c:	080028a1 	.word	0x080028a1
 8002830:	080028a1 	.word	0x080028a1
 8002834:	080028a1 	.word	0x080028a1
 8002838:	080028a1 	.word	0x080028a1
 800283c:	080028a1 	.word	0x080028a1
 8002840:	080028a1 	.word	0x080028a1
 8002844:	2b6e      	cmp	r3, #110	; 0x6e
 8002846:	d809      	bhi.n	800285c <_scanf_float+0x134>
 8002848:	2b60      	cmp	r3, #96	; 0x60
 800284a:	d8b2      	bhi.n	80027b2 <_scanf_float+0x8a>
 800284c:	2b54      	cmp	r3, #84	; 0x54
 800284e:	d077      	beq.n	8002940 <_scanf_float+0x218>
 8002850:	2b59      	cmp	r3, #89	; 0x59
 8002852:	d199      	bne.n	8002788 <_scanf_float+0x60>
 8002854:	2d07      	cmp	r5, #7
 8002856:	d197      	bne.n	8002788 <_scanf_float+0x60>
 8002858:	2508      	movs	r5, #8
 800285a:	e029      	b.n	80028b0 <_scanf_float+0x188>
 800285c:	2b74      	cmp	r3, #116	; 0x74
 800285e:	d06f      	beq.n	8002940 <_scanf_float+0x218>
 8002860:	2b79      	cmp	r3, #121	; 0x79
 8002862:	e7f6      	b.n	8002852 <_scanf_float+0x12a>
 8002864:	6821      	ldr	r1, [r4, #0]
 8002866:	05c8      	lsls	r0, r1, #23
 8002868:	d51a      	bpl.n	80028a0 <_scanf_float+0x178>
 800286a:	9b02      	ldr	r3, [sp, #8]
 800286c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002870:	6021      	str	r1, [r4, #0]
 8002872:	f109 0901 	add.w	r9, r9, #1
 8002876:	b11b      	cbz	r3, 8002880 <_scanf_float+0x158>
 8002878:	3b01      	subs	r3, #1
 800287a:	3201      	adds	r2, #1
 800287c:	9302      	str	r3, [sp, #8]
 800287e:	60a2      	str	r2, [r4, #8]
 8002880:	68a3      	ldr	r3, [r4, #8]
 8002882:	3b01      	subs	r3, #1
 8002884:	60a3      	str	r3, [r4, #8]
 8002886:	6923      	ldr	r3, [r4, #16]
 8002888:	3301      	adds	r3, #1
 800288a:	6123      	str	r3, [r4, #16]
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	3b01      	subs	r3, #1
 8002890:	2b00      	cmp	r3, #0
 8002892:	607b      	str	r3, [r7, #4]
 8002894:	f340 8084 	ble.w	80029a0 <_scanf_float+0x278>
 8002898:	683b      	ldr	r3, [r7, #0]
 800289a:	3301      	adds	r3, #1
 800289c:	603b      	str	r3, [r7, #0]
 800289e:	e766      	b.n	800276e <_scanf_float+0x46>
 80028a0:	eb1a 0f05 	cmn.w	sl, r5
 80028a4:	f47f af70 	bne.w	8002788 <_scanf_float+0x60>
 80028a8:	6822      	ldr	r2, [r4, #0]
 80028aa:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 80028ae:	6022      	str	r2, [r4, #0]
 80028b0:	f806 3b01 	strb.w	r3, [r6], #1
 80028b4:	e7e4      	b.n	8002880 <_scanf_float+0x158>
 80028b6:	6822      	ldr	r2, [r4, #0]
 80028b8:	0610      	lsls	r0, r2, #24
 80028ba:	f57f af65 	bpl.w	8002788 <_scanf_float+0x60>
 80028be:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80028c2:	e7f4      	b.n	80028ae <_scanf_float+0x186>
 80028c4:	f1ba 0f00 	cmp.w	sl, #0
 80028c8:	d10e      	bne.n	80028e8 <_scanf_float+0x1c0>
 80028ca:	f1b9 0f00 	cmp.w	r9, #0
 80028ce:	d10e      	bne.n	80028ee <_scanf_float+0x1c6>
 80028d0:	6822      	ldr	r2, [r4, #0]
 80028d2:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80028d6:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80028da:	d108      	bne.n	80028ee <_scanf_float+0x1c6>
 80028dc:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80028e0:	6022      	str	r2, [r4, #0]
 80028e2:	f04f 0a01 	mov.w	sl, #1
 80028e6:	e7e3      	b.n	80028b0 <_scanf_float+0x188>
 80028e8:	f1ba 0f02 	cmp.w	sl, #2
 80028ec:	d055      	beq.n	800299a <_scanf_float+0x272>
 80028ee:	2d01      	cmp	r5, #1
 80028f0:	d002      	beq.n	80028f8 <_scanf_float+0x1d0>
 80028f2:	2d04      	cmp	r5, #4
 80028f4:	f47f af48 	bne.w	8002788 <_scanf_float+0x60>
 80028f8:	3501      	adds	r5, #1
 80028fa:	b2ed      	uxtb	r5, r5
 80028fc:	e7d8      	b.n	80028b0 <_scanf_float+0x188>
 80028fe:	f1ba 0f01 	cmp.w	sl, #1
 8002902:	f47f af41 	bne.w	8002788 <_scanf_float+0x60>
 8002906:	f04f 0a02 	mov.w	sl, #2
 800290a:	e7d1      	b.n	80028b0 <_scanf_float+0x188>
 800290c:	b97d      	cbnz	r5, 800292e <_scanf_float+0x206>
 800290e:	f1b9 0f00 	cmp.w	r9, #0
 8002912:	f47f af3c 	bne.w	800278e <_scanf_float+0x66>
 8002916:	6822      	ldr	r2, [r4, #0]
 8002918:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800291c:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002920:	f47f af39 	bne.w	8002796 <_scanf_float+0x6e>
 8002924:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002928:	6022      	str	r2, [r4, #0]
 800292a:	2501      	movs	r5, #1
 800292c:	e7c0      	b.n	80028b0 <_scanf_float+0x188>
 800292e:	2d03      	cmp	r5, #3
 8002930:	d0e2      	beq.n	80028f8 <_scanf_float+0x1d0>
 8002932:	2d05      	cmp	r5, #5
 8002934:	e7de      	b.n	80028f4 <_scanf_float+0x1cc>
 8002936:	2d02      	cmp	r5, #2
 8002938:	f47f af26 	bne.w	8002788 <_scanf_float+0x60>
 800293c:	2503      	movs	r5, #3
 800293e:	e7b7      	b.n	80028b0 <_scanf_float+0x188>
 8002940:	2d06      	cmp	r5, #6
 8002942:	f47f af21 	bne.w	8002788 <_scanf_float+0x60>
 8002946:	2507      	movs	r5, #7
 8002948:	e7b2      	b.n	80028b0 <_scanf_float+0x188>
 800294a:	6822      	ldr	r2, [r4, #0]
 800294c:	0591      	lsls	r1, r2, #22
 800294e:	f57f af1b 	bpl.w	8002788 <_scanf_float+0x60>
 8002952:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002956:	6022      	str	r2, [r4, #0]
 8002958:	f8cd 9004 	str.w	r9, [sp, #4]
 800295c:	e7a8      	b.n	80028b0 <_scanf_float+0x188>
 800295e:	6822      	ldr	r2, [r4, #0]
 8002960:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002964:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002968:	d006      	beq.n	8002978 <_scanf_float+0x250>
 800296a:	0550      	lsls	r0, r2, #21
 800296c:	f57f af0c 	bpl.w	8002788 <_scanf_float+0x60>
 8002970:	f1b9 0f00 	cmp.w	r9, #0
 8002974:	f43f af0f 	beq.w	8002796 <_scanf_float+0x6e>
 8002978:	0591      	lsls	r1, r2, #22
 800297a:	bf58      	it	pl
 800297c:	9901      	ldrpl	r1, [sp, #4]
 800297e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002982:	bf58      	it	pl
 8002984:	eba9 0101 	subpl.w	r1, r9, r1
 8002988:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800298c:	bf58      	it	pl
 800298e:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002992:	6022      	str	r2, [r4, #0]
 8002994:	f04f 0900 	mov.w	r9, #0
 8002998:	e78a      	b.n	80028b0 <_scanf_float+0x188>
 800299a:	f04f 0a03 	mov.w	sl, #3
 800299e:	e787      	b.n	80028b0 <_scanf_float+0x188>
 80029a0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80029a4:	4639      	mov	r1, r7
 80029a6:	4640      	mov	r0, r8
 80029a8:	4798      	blx	r3
 80029aa:	2800      	cmp	r0, #0
 80029ac:	f43f aedf 	beq.w	800276e <_scanf_float+0x46>
 80029b0:	e6ea      	b.n	8002788 <_scanf_float+0x60>
 80029b2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029b6:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029ba:	463a      	mov	r2, r7
 80029bc:	4640      	mov	r0, r8
 80029be:	4798      	blx	r3
 80029c0:	6923      	ldr	r3, [r4, #16]
 80029c2:	3b01      	subs	r3, #1
 80029c4:	6123      	str	r3, [r4, #16]
 80029c6:	e6ec      	b.n	80027a2 <_scanf_float+0x7a>
 80029c8:	1e6b      	subs	r3, r5, #1
 80029ca:	2b06      	cmp	r3, #6
 80029cc:	d825      	bhi.n	8002a1a <_scanf_float+0x2f2>
 80029ce:	2d02      	cmp	r5, #2
 80029d0:	d836      	bhi.n	8002a40 <_scanf_float+0x318>
 80029d2:	455e      	cmp	r6, fp
 80029d4:	f67f aee8 	bls.w	80027a8 <_scanf_float+0x80>
 80029d8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029dc:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029e0:	463a      	mov	r2, r7
 80029e2:	4640      	mov	r0, r8
 80029e4:	4798      	blx	r3
 80029e6:	6923      	ldr	r3, [r4, #16]
 80029e8:	3b01      	subs	r3, #1
 80029ea:	6123      	str	r3, [r4, #16]
 80029ec:	e7f1      	b.n	80029d2 <_scanf_float+0x2aa>
 80029ee:	9802      	ldr	r0, [sp, #8]
 80029f0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029f4:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 80029f8:	9002      	str	r0, [sp, #8]
 80029fa:	463a      	mov	r2, r7
 80029fc:	4640      	mov	r0, r8
 80029fe:	4798      	blx	r3
 8002a00:	6923      	ldr	r3, [r4, #16]
 8002a02:	3b01      	subs	r3, #1
 8002a04:	6123      	str	r3, [r4, #16]
 8002a06:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002a0a:	fa5f fa8a 	uxtb.w	sl, sl
 8002a0e:	f1ba 0f02 	cmp.w	sl, #2
 8002a12:	d1ec      	bne.n	80029ee <_scanf_float+0x2c6>
 8002a14:	3d03      	subs	r5, #3
 8002a16:	b2ed      	uxtb	r5, r5
 8002a18:	1b76      	subs	r6, r6, r5
 8002a1a:	6823      	ldr	r3, [r4, #0]
 8002a1c:	05da      	lsls	r2, r3, #23
 8002a1e:	d52f      	bpl.n	8002a80 <_scanf_float+0x358>
 8002a20:	055b      	lsls	r3, r3, #21
 8002a22:	d510      	bpl.n	8002a46 <_scanf_float+0x31e>
 8002a24:	455e      	cmp	r6, fp
 8002a26:	f67f aebf 	bls.w	80027a8 <_scanf_float+0x80>
 8002a2a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a2e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a32:	463a      	mov	r2, r7
 8002a34:	4640      	mov	r0, r8
 8002a36:	4798      	blx	r3
 8002a38:	6923      	ldr	r3, [r4, #16]
 8002a3a:	3b01      	subs	r3, #1
 8002a3c:	6123      	str	r3, [r4, #16]
 8002a3e:	e7f1      	b.n	8002a24 <_scanf_float+0x2fc>
 8002a40:	46aa      	mov	sl, r5
 8002a42:	9602      	str	r6, [sp, #8]
 8002a44:	e7df      	b.n	8002a06 <_scanf_float+0x2de>
 8002a46:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002a4a:	6923      	ldr	r3, [r4, #16]
 8002a4c:	2965      	cmp	r1, #101	; 0x65
 8002a4e:	f103 33ff 	add.w	r3, r3, #4294967295
 8002a52:	f106 35ff 	add.w	r5, r6, #4294967295
 8002a56:	6123      	str	r3, [r4, #16]
 8002a58:	d00c      	beq.n	8002a74 <_scanf_float+0x34c>
 8002a5a:	2945      	cmp	r1, #69	; 0x45
 8002a5c:	d00a      	beq.n	8002a74 <_scanf_float+0x34c>
 8002a5e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a62:	463a      	mov	r2, r7
 8002a64:	4640      	mov	r0, r8
 8002a66:	4798      	blx	r3
 8002a68:	6923      	ldr	r3, [r4, #16]
 8002a6a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002a6e:	3b01      	subs	r3, #1
 8002a70:	1eb5      	subs	r5, r6, #2
 8002a72:	6123      	str	r3, [r4, #16]
 8002a74:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a78:	463a      	mov	r2, r7
 8002a7a:	4640      	mov	r0, r8
 8002a7c:	4798      	blx	r3
 8002a7e:	462e      	mov	r6, r5
 8002a80:	6825      	ldr	r5, [r4, #0]
 8002a82:	f015 0510 	ands.w	r5, r5, #16
 8002a86:	d158      	bne.n	8002b3a <_scanf_float+0x412>
 8002a88:	7035      	strb	r5, [r6, #0]
 8002a8a:	6823      	ldr	r3, [r4, #0]
 8002a8c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002a90:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002a94:	d11c      	bne.n	8002ad0 <_scanf_float+0x3a8>
 8002a96:	9b01      	ldr	r3, [sp, #4]
 8002a98:	454b      	cmp	r3, r9
 8002a9a:	eba3 0209 	sub.w	r2, r3, r9
 8002a9e:	d124      	bne.n	8002aea <_scanf_float+0x3c2>
 8002aa0:	2200      	movs	r2, #0
 8002aa2:	4659      	mov	r1, fp
 8002aa4:	4640      	mov	r0, r8
 8002aa6:	f002 fc4f 	bl	8005348 <_strtod_r>
 8002aaa:	9b03      	ldr	r3, [sp, #12]
 8002aac:	6821      	ldr	r1, [r4, #0]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	f011 0f02 	tst.w	r1, #2
 8002ab4:	ec57 6b10 	vmov	r6, r7, d0
 8002ab8:	f103 0204 	add.w	r2, r3, #4
 8002abc:	d020      	beq.n	8002b00 <_scanf_float+0x3d8>
 8002abe:	9903      	ldr	r1, [sp, #12]
 8002ac0:	600a      	str	r2, [r1, #0]
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	e9c3 6700 	strd	r6, r7, [r3]
 8002ac8:	68e3      	ldr	r3, [r4, #12]
 8002aca:	3301      	adds	r3, #1
 8002acc:	60e3      	str	r3, [r4, #12]
 8002ace:	e66c      	b.n	80027aa <_scanf_float+0x82>
 8002ad0:	9b04      	ldr	r3, [sp, #16]
 8002ad2:	2b00      	cmp	r3, #0
 8002ad4:	d0e4      	beq.n	8002aa0 <_scanf_float+0x378>
 8002ad6:	9905      	ldr	r1, [sp, #20]
 8002ad8:	230a      	movs	r3, #10
 8002ada:	462a      	mov	r2, r5
 8002adc:	3101      	adds	r1, #1
 8002ade:	4640      	mov	r0, r8
 8002ae0:	f002 fcba 	bl	8005458 <_strtol_r>
 8002ae4:	9b04      	ldr	r3, [sp, #16]
 8002ae6:	9e05      	ldr	r6, [sp, #20]
 8002ae8:	1ac2      	subs	r2, r0, r3
 8002aea:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002aee:	429e      	cmp	r6, r3
 8002af0:	bf28      	it	cs
 8002af2:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002af6:	4912      	ldr	r1, [pc, #72]	; (8002b40 <_scanf_float+0x418>)
 8002af8:	4630      	mov	r0, r6
 8002afa:	f000 f8e7 	bl	8002ccc <siprintf>
 8002afe:	e7cf      	b.n	8002aa0 <_scanf_float+0x378>
 8002b00:	f011 0f04 	tst.w	r1, #4
 8002b04:	9903      	ldr	r1, [sp, #12]
 8002b06:	600a      	str	r2, [r1, #0]
 8002b08:	d1db      	bne.n	8002ac2 <_scanf_float+0x39a>
 8002b0a:	f8d3 8000 	ldr.w	r8, [r3]
 8002b0e:	ee10 2a10 	vmov	r2, s0
 8002b12:	ee10 0a10 	vmov	r0, s0
 8002b16:	463b      	mov	r3, r7
 8002b18:	4639      	mov	r1, r7
 8002b1a:	f7fe f807 	bl	8000b2c <__aeabi_dcmpun>
 8002b1e:	b128      	cbz	r0, 8002b2c <_scanf_float+0x404>
 8002b20:	4808      	ldr	r0, [pc, #32]	; (8002b44 <_scanf_float+0x41c>)
 8002b22:	f000 f9d7 	bl	8002ed4 <nanf>
 8002b26:	ed88 0a00 	vstr	s0, [r8]
 8002b2a:	e7cd      	b.n	8002ac8 <_scanf_float+0x3a0>
 8002b2c:	4630      	mov	r0, r6
 8002b2e:	4639      	mov	r1, r7
 8002b30:	f7fe f85a 	bl	8000be8 <__aeabi_d2f>
 8002b34:	f8c8 0000 	str.w	r0, [r8]
 8002b38:	e7c6      	b.n	8002ac8 <_scanf_float+0x3a0>
 8002b3a:	2500      	movs	r5, #0
 8002b3c:	e635      	b.n	80027aa <_scanf_float+0x82>
 8002b3e:	bf00      	nop
 8002b40:	080069b7 	.word	0x080069b7
 8002b44:	08006c4c 	.word	0x08006c4c

08002b48 <std>:
 8002b48:	2300      	movs	r3, #0
 8002b4a:	b510      	push	{r4, lr}
 8002b4c:	4604      	mov	r4, r0
 8002b4e:	e9c0 3300 	strd	r3, r3, [r0]
 8002b52:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002b56:	6083      	str	r3, [r0, #8]
 8002b58:	8181      	strh	r1, [r0, #12]
 8002b5a:	6643      	str	r3, [r0, #100]	; 0x64
 8002b5c:	81c2      	strh	r2, [r0, #14]
 8002b5e:	6183      	str	r3, [r0, #24]
 8002b60:	4619      	mov	r1, r3
 8002b62:	2208      	movs	r2, #8
 8002b64:	305c      	adds	r0, #92	; 0x5c
 8002b66:	f000 f935 	bl	8002dd4 <memset>
 8002b6a:	4b0d      	ldr	r3, [pc, #52]	; (8002ba0 <std+0x58>)
 8002b6c:	6263      	str	r3, [r4, #36]	; 0x24
 8002b6e:	4b0d      	ldr	r3, [pc, #52]	; (8002ba4 <std+0x5c>)
 8002b70:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b72:	4b0d      	ldr	r3, [pc, #52]	; (8002ba8 <std+0x60>)
 8002b74:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002b76:	4b0d      	ldr	r3, [pc, #52]	; (8002bac <std+0x64>)
 8002b78:	6323      	str	r3, [r4, #48]	; 0x30
 8002b7a:	4b0d      	ldr	r3, [pc, #52]	; (8002bb0 <std+0x68>)
 8002b7c:	6224      	str	r4, [r4, #32]
 8002b7e:	429c      	cmp	r4, r3
 8002b80:	d006      	beq.n	8002b90 <std+0x48>
 8002b82:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8002b86:	4294      	cmp	r4, r2
 8002b88:	d002      	beq.n	8002b90 <std+0x48>
 8002b8a:	33d0      	adds	r3, #208	; 0xd0
 8002b8c:	429c      	cmp	r4, r3
 8002b8e:	d105      	bne.n	8002b9c <std+0x54>
 8002b90:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002b94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b98:	f000 b998 	b.w	8002ecc <__retarget_lock_init_recursive>
 8002b9c:	bd10      	pop	{r4, pc}
 8002b9e:	bf00      	nop
 8002ba0:	08002d0d 	.word	0x08002d0d
 8002ba4:	08002d2f 	.word	0x08002d2f
 8002ba8:	08002d67 	.word	0x08002d67
 8002bac:	08002d8b 	.word	0x08002d8b
 8002bb0:	20000604 	.word	0x20000604

08002bb4 <stdio_exit_handler>:
 8002bb4:	4a02      	ldr	r2, [pc, #8]	; (8002bc0 <stdio_exit_handler+0xc>)
 8002bb6:	4903      	ldr	r1, [pc, #12]	; (8002bc4 <stdio_exit_handler+0x10>)
 8002bb8:	4803      	ldr	r0, [pc, #12]	; (8002bc8 <stdio_exit_handler+0x14>)
 8002bba:	f000 b869 	b.w	8002c90 <_fwalk_sglue>
 8002bbe:	bf00      	nop
 8002bc0:	20000008 	.word	0x20000008
 8002bc4:	08005819 	.word	0x08005819
 8002bc8:	20000014 	.word	0x20000014

08002bcc <cleanup_stdio>:
 8002bcc:	6841      	ldr	r1, [r0, #4]
 8002bce:	4b0c      	ldr	r3, [pc, #48]	; (8002c00 <cleanup_stdio+0x34>)
 8002bd0:	4299      	cmp	r1, r3
 8002bd2:	b510      	push	{r4, lr}
 8002bd4:	4604      	mov	r4, r0
 8002bd6:	d001      	beq.n	8002bdc <cleanup_stdio+0x10>
 8002bd8:	f002 fe1e 	bl	8005818 <_fflush_r>
 8002bdc:	68a1      	ldr	r1, [r4, #8]
 8002bde:	4b09      	ldr	r3, [pc, #36]	; (8002c04 <cleanup_stdio+0x38>)
 8002be0:	4299      	cmp	r1, r3
 8002be2:	d002      	beq.n	8002bea <cleanup_stdio+0x1e>
 8002be4:	4620      	mov	r0, r4
 8002be6:	f002 fe17 	bl	8005818 <_fflush_r>
 8002bea:	68e1      	ldr	r1, [r4, #12]
 8002bec:	4b06      	ldr	r3, [pc, #24]	; (8002c08 <cleanup_stdio+0x3c>)
 8002bee:	4299      	cmp	r1, r3
 8002bf0:	d004      	beq.n	8002bfc <cleanup_stdio+0x30>
 8002bf2:	4620      	mov	r0, r4
 8002bf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002bf8:	f002 be0e 	b.w	8005818 <_fflush_r>
 8002bfc:	bd10      	pop	{r4, pc}
 8002bfe:	bf00      	nop
 8002c00:	20000604 	.word	0x20000604
 8002c04:	2000066c 	.word	0x2000066c
 8002c08:	200006d4 	.word	0x200006d4

08002c0c <global_stdio_init.part.0>:
 8002c0c:	b510      	push	{r4, lr}
 8002c0e:	4b0b      	ldr	r3, [pc, #44]	; (8002c3c <global_stdio_init.part.0+0x30>)
 8002c10:	4c0b      	ldr	r4, [pc, #44]	; (8002c40 <global_stdio_init.part.0+0x34>)
 8002c12:	4a0c      	ldr	r2, [pc, #48]	; (8002c44 <global_stdio_init.part.0+0x38>)
 8002c14:	601a      	str	r2, [r3, #0]
 8002c16:	4620      	mov	r0, r4
 8002c18:	2200      	movs	r2, #0
 8002c1a:	2104      	movs	r1, #4
 8002c1c:	f7ff ff94 	bl	8002b48 <std>
 8002c20:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002c24:	2201      	movs	r2, #1
 8002c26:	2109      	movs	r1, #9
 8002c28:	f7ff ff8e 	bl	8002b48 <std>
 8002c2c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8002c30:	2202      	movs	r2, #2
 8002c32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c36:	2112      	movs	r1, #18
 8002c38:	f7ff bf86 	b.w	8002b48 <std>
 8002c3c:	2000073c 	.word	0x2000073c
 8002c40:	20000604 	.word	0x20000604
 8002c44:	08002bb5 	.word	0x08002bb5

08002c48 <__sfp_lock_acquire>:
 8002c48:	4801      	ldr	r0, [pc, #4]	; (8002c50 <__sfp_lock_acquire+0x8>)
 8002c4a:	f000 b940 	b.w	8002ece <__retarget_lock_acquire_recursive>
 8002c4e:	bf00      	nop
 8002c50:	20000745 	.word	0x20000745

08002c54 <__sfp_lock_release>:
 8002c54:	4801      	ldr	r0, [pc, #4]	; (8002c5c <__sfp_lock_release+0x8>)
 8002c56:	f000 b93b 	b.w	8002ed0 <__retarget_lock_release_recursive>
 8002c5a:	bf00      	nop
 8002c5c:	20000745 	.word	0x20000745

08002c60 <__sinit>:
 8002c60:	b510      	push	{r4, lr}
 8002c62:	4604      	mov	r4, r0
 8002c64:	f7ff fff0 	bl	8002c48 <__sfp_lock_acquire>
 8002c68:	6a23      	ldr	r3, [r4, #32]
 8002c6a:	b11b      	cbz	r3, 8002c74 <__sinit+0x14>
 8002c6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c70:	f7ff bff0 	b.w	8002c54 <__sfp_lock_release>
 8002c74:	4b04      	ldr	r3, [pc, #16]	; (8002c88 <__sinit+0x28>)
 8002c76:	6223      	str	r3, [r4, #32]
 8002c78:	4b04      	ldr	r3, [pc, #16]	; (8002c8c <__sinit+0x2c>)
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	d1f5      	bne.n	8002c6c <__sinit+0xc>
 8002c80:	f7ff ffc4 	bl	8002c0c <global_stdio_init.part.0>
 8002c84:	e7f2      	b.n	8002c6c <__sinit+0xc>
 8002c86:	bf00      	nop
 8002c88:	08002bcd 	.word	0x08002bcd
 8002c8c:	2000073c 	.word	0x2000073c

08002c90 <_fwalk_sglue>:
 8002c90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002c94:	4607      	mov	r7, r0
 8002c96:	4688      	mov	r8, r1
 8002c98:	4614      	mov	r4, r2
 8002c9a:	2600      	movs	r6, #0
 8002c9c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002ca0:	f1b9 0901 	subs.w	r9, r9, #1
 8002ca4:	d505      	bpl.n	8002cb2 <_fwalk_sglue+0x22>
 8002ca6:	6824      	ldr	r4, [r4, #0]
 8002ca8:	2c00      	cmp	r4, #0
 8002caa:	d1f7      	bne.n	8002c9c <_fwalk_sglue+0xc>
 8002cac:	4630      	mov	r0, r6
 8002cae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002cb2:	89ab      	ldrh	r3, [r5, #12]
 8002cb4:	2b01      	cmp	r3, #1
 8002cb6:	d907      	bls.n	8002cc8 <_fwalk_sglue+0x38>
 8002cb8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002cbc:	3301      	adds	r3, #1
 8002cbe:	d003      	beq.n	8002cc8 <_fwalk_sglue+0x38>
 8002cc0:	4629      	mov	r1, r5
 8002cc2:	4638      	mov	r0, r7
 8002cc4:	47c0      	blx	r8
 8002cc6:	4306      	orrs	r6, r0
 8002cc8:	3568      	adds	r5, #104	; 0x68
 8002cca:	e7e9      	b.n	8002ca0 <_fwalk_sglue+0x10>

08002ccc <siprintf>:
 8002ccc:	b40e      	push	{r1, r2, r3}
 8002cce:	b500      	push	{lr}
 8002cd0:	b09c      	sub	sp, #112	; 0x70
 8002cd2:	ab1d      	add	r3, sp, #116	; 0x74
 8002cd4:	9002      	str	r0, [sp, #8]
 8002cd6:	9006      	str	r0, [sp, #24]
 8002cd8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002cdc:	4809      	ldr	r0, [pc, #36]	; (8002d04 <siprintf+0x38>)
 8002cde:	9107      	str	r1, [sp, #28]
 8002ce0:	9104      	str	r1, [sp, #16]
 8002ce2:	4909      	ldr	r1, [pc, #36]	; (8002d08 <siprintf+0x3c>)
 8002ce4:	f853 2b04 	ldr.w	r2, [r3], #4
 8002ce8:	9105      	str	r1, [sp, #20]
 8002cea:	6800      	ldr	r0, [r0, #0]
 8002cec:	9301      	str	r3, [sp, #4]
 8002cee:	a902      	add	r1, sp, #8
 8002cf0:	f002 fc0e 	bl	8005510 <_svfiprintf_r>
 8002cf4:	9b02      	ldr	r3, [sp, #8]
 8002cf6:	2200      	movs	r2, #0
 8002cf8:	701a      	strb	r2, [r3, #0]
 8002cfa:	b01c      	add	sp, #112	; 0x70
 8002cfc:	f85d eb04 	ldr.w	lr, [sp], #4
 8002d00:	b003      	add	sp, #12
 8002d02:	4770      	bx	lr
 8002d04:	20000060 	.word	0x20000060
 8002d08:	ffff0208 	.word	0xffff0208

08002d0c <__sread>:
 8002d0c:	b510      	push	{r4, lr}
 8002d0e:	460c      	mov	r4, r1
 8002d10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d14:	f000 f88c 	bl	8002e30 <_read_r>
 8002d18:	2800      	cmp	r0, #0
 8002d1a:	bfab      	itete	ge
 8002d1c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002d1e:	89a3      	ldrhlt	r3, [r4, #12]
 8002d20:	181b      	addge	r3, r3, r0
 8002d22:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002d26:	bfac      	ite	ge
 8002d28:	6563      	strge	r3, [r4, #84]	; 0x54
 8002d2a:	81a3      	strhlt	r3, [r4, #12]
 8002d2c:	bd10      	pop	{r4, pc}

08002d2e <__swrite>:
 8002d2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d32:	461f      	mov	r7, r3
 8002d34:	898b      	ldrh	r3, [r1, #12]
 8002d36:	05db      	lsls	r3, r3, #23
 8002d38:	4605      	mov	r5, r0
 8002d3a:	460c      	mov	r4, r1
 8002d3c:	4616      	mov	r6, r2
 8002d3e:	d505      	bpl.n	8002d4c <__swrite+0x1e>
 8002d40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d44:	2302      	movs	r3, #2
 8002d46:	2200      	movs	r2, #0
 8002d48:	f000 f860 	bl	8002e0c <_lseek_r>
 8002d4c:	89a3      	ldrh	r3, [r4, #12]
 8002d4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002d52:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002d56:	81a3      	strh	r3, [r4, #12]
 8002d58:	4632      	mov	r2, r6
 8002d5a:	463b      	mov	r3, r7
 8002d5c:	4628      	mov	r0, r5
 8002d5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002d62:	f000 b877 	b.w	8002e54 <_write_r>

08002d66 <__sseek>:
 8002d66:	b510      	push	{r4, lr}
 8002d68:	460c      	mov	r4, r1
 8002d6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d6e:	f000 f84d 	bl	8002e0c <_lseek_r>
 8002d72:	1c43      	adds	r3, r0, #1
 8002d74:	89a3      	ldrh	r3, [r4, #12]
 8002d76:	bf15      	itete	ne
 8002d78:	6560      	strne	r0, [r4, #84]	; 0x54
 8002d7a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002d7e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002d82:	81a3      	strheq	r3, [r4, #12]
 8002d84:	bf18      	it	ne
 8002d86:	81a3      	strhne	r3, [r4, #12]
 8002d88:	bd10      	pop	{r4, pc}

08002d8a <__sclose>:
 8002d8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d8e:	f000 b82d 	b.w	8002dec <_close_r>
	...

08002d94 <_vsiprintf_r>:
 8002d94:	b500      	push	{lr}
 8002d96:	b09b      	sub	sp, #108	; 0x6c
 8002d98:	9100      	str	r1, [sp, #0]
 8002d9a:	9104      	str	r1, [sp, #16]
 8002d9c:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002da0:	9105      	str	r1, [sp, #20]
 8002da2:	9102      	str	r1, [sp, #8]
 8002da4:	4905      	ldr	r1, [pc, #20]	; (8002dbc <_vsiprintf_r+0x28>)
 8002da6:	9103      	str	r1, [sp, #12]
 8002da8:	4669      	mov	r1, sp
 8002daa:	f002 fbb1 	bl	8005510 <_svfiprintf_r>
 8002dae:	9b00      	ldr	r3, [sp, #0]
 8002db0:	2200      	movs	r2, #0
 8002db2:	701a      	strb	r2, [r3, #0]
 8002db4:	b01b      	add	sp, #108	; 0x6c
 8002db6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002dba:	bf00      	nop
 8002dbc:	ffff0208 	.word	0xffff0208

08002dc0 <vsiprintf>:
 8002dc0:	4613      	mov	r3, r2
 8002dc2:	460a      	mov	r2, r1
 8002dc4:	4601      	mov	r1, r0
 8002dc6:	4802      	ldr	r0, [pc, #8]	; (8002dd0 <vsiprintf+0x10>)
 8002dc8:	6800      	ldr	r0, [r0, #0]
 8002dca:	f7ff bfe3 	b.w	8002d94 <_vsiprintf_r>
 8002dce:	bf00      	nop
 8002dd0:	20000060 	.word	0x20000060

08002dd4 <memset>:
 8002dd4:	4402      	add	r2, r0
 8002dd6:	4603      	mov	r3, r0
 8002dd8:	4293      	cmp	r3, r2
 8002dda:	d100      	bne.n	8002dde <memset+0xa>
 8002ddc:	4770      	bx	lr
 8002dde:	f803 1b01 	strb.w	r1, [r3], #1
 8002de2:	e7f9      	b.n	8002dd8 <memset+0x4>

08002de4 <_localeconv_r>:
 8002de4:	4800      	ldr	r0, [pc, #0]	; (8002de8 <_localeconv_r+0x4>)
 8002de6:	4770      	bx	lr
 8002de8:	20000154 	.word	0x20000154

08002dec <_close_r>:
 8002dec:	b538      	push	{r3, r4, r5, lr}
 8002dee:	4d06      	ldr	r5, [pc, #24]	; (8002e08 <_close_r+0x1c>)
 8002df0:	2300      	movs	r3, #0
 8002df2:	4604      	mov	r4, r0
 8002df4:	4608      	mov	r0, r1
 8002df6:	602b      	str	r3, [r5, #0]
 8002df8:	f7fe fdbb 	bl	8001972 <_close>
 8002dfc:	1c43      	adds	r3, r0, #1
 8002dfe:	d102      	bne.n	8002e06 <_close_r+0x1a>
 8002e00:	682b      	ldr	r3, [r5, #0]
 8002e02:	b103      	cbz	r3, 8002e06 <_close_r+0x1a>
 8002e04:	6023      	str	r3, [r4, #0]
 8002e06:	bd38      	pop	{r3, r4, r5, pc}
 8002e08:	20000740 	.word	0x20000740

08002e0c <_lseek_r>:
 8002e0c:	b538      	push	{r3, r4, r5, lr}
 8002e0e:	4d07      	ldr	r5, [pc, #28]	; (8002e2c <_lseek_r+0x20>)
 8002e10:	4604      	mov	r4, r0
 8002e12:	4608      	mov	r0, r1
 8002e14:	4611      	mov	r1, r2
 8002e16:	2200      	movs	r2, #0
 8002e18:	602a      	str	r2, [r5, #0]
 8002e1a:	461a      	mov	r2, r3
 8002e1c:	f7fe fdd0 	bl	80019c0 <_lseek>
 8002e20:	1c43      	adds	r3, r0, #1
 8002e22:	d102      	bne.n	8002e2a <_lseek_r+0x1e>
 8002e24:	682b      	ldr	r3, [r5, #0]
 8002e26:	b103      	cbz	r3, 8002e2a <_lseek_r+0x1e>
 8002e28:	6023      	str	r3, [r4, #0]
 8002e2a:	bd38      	pop	{r3, r4, r5, pc}
 8002e2c:	20000740 	.word	0x20000740

08002e30 <_read_r>:
 8002e30:	b538      	push	{r3, r4, r5, lr}
 8002e32:	4d07      	ldr	r5, [pc, #28]	; (8002e50 <_read_r+0x20>)
 8002e34:	4604      	mov	r4, r0
 8002e36:	4608      	mov	r0, r1
 8002e38:	4611      	mov	r1, r2
 8002e3a:	2200      	movs	r2, #0
 8002e3c:	602a      	str	r2, [r5, #0]
 8002e3e:	461a      	mov	r2, r3
 8002e40:	f7fe fd5e 	bl	8001900 <_read>
 8002e44:	1c43      	adds	r3, r0, #1
 8002e46:	d102      	bne.n	8002e4e <_read_r+0x1e>
 8002e48:	682b      	ldr	r3, [r5, #0]
 8002e4a:	b103      	cbz	r3, 8002e4e <_read_r+0x1e>
 8002e4c:	6023      	str	r3, [r4, #0]
 8002e4e:	bd38      	pop	{r3, r4, r5, pc}
 8002e50:	20000740 	.word	0x20000740

08002e54 <_write_r>:
 8002e54:	b538      	push	{r3, r4, r5, lr}
 8002e56:	4d07      	ldr	r5, [pc, #28]	; (8002e74 <_write_r+0x20>)
 8002e58:	4604      	mov	r4, r0
 8002e5a:	4608      	mov	r0, r1
 8002e5c:	4611      	mov	r1, r2
 8002e5e:	2200      	movs	r2, #0
 8002e60:	602a      	str	r2, [r5, #0]
 8002e62:	461a      	mov	r2, r3
 8002e64:	f7fe fd69 	bl	800193a <_write>
 8002e68:	1c43      	adds	r3, r0, #1
 8002e6a:	d102      	bne.n	8002e72 <_write_r+0x1e>
 8002e6c:	682b      	ldr	r3, [r5, #0]
 8002e6e:	b103      	cbz	r3, 8002e72 <_write_r+0x1e>
 8002e70:	6023      	str	r3, [r4, #0]
 8002e72:	bd38      	pop	{r3, r4, r5, pc}
 8002e74:	20000740 	.word	0x20000740

08002e78 <__errno>:
 8002e78:	4b01      	ldr	r3, [pc, #4]	; (8002e80 <__errno+0x8>)
 8002e7a:	6818      	ldr	r0, [r3, #0]
 8002e7c:	4770      	bx	lr
 8002e7e:	bf00      	nop
 8002e80:	20000060 	.word	0x20000060

08002e84 <__libc_init_array>:
 8002e84:	b570      	push	{r4, r5, r6, lr}
 8002e86:	4d0d      	ldr	r5, [pc, #52]	; (8002ebc <__libc_init_array+0x38>)
 8002e88:	4c0d      	ldr	r4, [pc, #52]	; (8002ec0 <__libc_init_array+0x3c>)
 8002e8a:	1b64      	subs	r4, r4, r5
 8002e8c:	10a4      	asrs	r4, r4, #2
 8002e8e:	2600      	movs	r6, #0
 8002e90:	42a6      	cmp	r6, r4
 8002e92:	d109      	bne.n	8002ea8 <__libc_init_array+0x24>
 8002e94:	4d0b      	ldr	r5, [pc, #44]	; (8002ec4 <__libc_init_array+0x40>)
 8002e96:	4c0c      	ldr	r4, [pc, #48]	; (8002ec8 <__libc_init_array+0x44>)
 8002e98:	f003 fbd6 	bl	8006648 <_init>
 8002e9c:	1b64      	subs	r4, r4, r5
 8002e9e:	10a4      	asrs	r4, r4, #2
 8002ea0:	2600      	movs	r6, #0
 8002ea2:	42a6      	cmp	r6, r4
 8002ea4:	d105      	bne.n	8002eb2 <__libc_init_array+0x2e>
 8002ea6:	bd70      	pop	{r4, r5, r6, pc}
 8002ea8:	f855 3b04 	ldr.w	r3, [r5], #4
 8002eac:	4798      	blx	r3
 8002eae:	3601      	adds	r6, #1
 8002eb0:	e7ee      	b.n	8002e90 <__libc_init_array+0xc>
 8002eb2:	f855 3b04 	ldr.w	r3, [r5], #4
 8002eb6:	4798      	blx	r3
 8002eb8:	3601      	adds	r6, #1
 8002eba:	e7f2      	b.n	8002ea2 <__libc_init_array+0x1e>
 8002ebc:	08006cb0 	.word	0x08006cb0
 8002ec0:	08006cb0 	.word	0x08006cb0
 8002ec4:	08006cb0 	.word	0x08006cb0
 8002ec8:	08006cb4 	.word	0x08006cb4

08002ecc <__retarget_lock_init_recursive>:
 8002ecc:	4770      	bx	lr

08002ece <__retarget_lock_acquire_recursive>:
 8002ece:	4770      	bx	lr

08002ed0 <__retarget_lock_release_recursive>:
 8002ed0:	4770      	bx	lr
	...

08002ed4 <nanf>:
 8002ed4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8002edc <nanf+0x8>
 8002ed8:	4770      	bx	lr
 8002eda:	bf00      	nop
 8002edc:	7fc00000 	.word	0x7fc00000

08002ee0 <quorem>:
 8002ee0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ee4:	6903      	ldr	r3, [r0, #16]
 8002ee6:	690c      	ldr	r4, [r1, #16]
 8002ee8:	42a3      	cmp	r3, r4
 8002eea:	4607      	mov	r7, r0
 8002eec:	db7e      	blt.n	8002fec <quorem+0x10c>
 8002eee:	3c01      	subs	r4, #1
 8002ef0:	f101 0814 	add.w	r8, r1, #20
 8002ef4:	f100 0514 	add.w	r5, r0, #20
 8002ef8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002efc:	9301      	str	r3, [sp, #4]
 8002efe:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002f02:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002f06:	3301      	adds	r3, #1
 8002f08:	429a      	cmp	r2, r3
 8002f0a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002f0e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002f12:	fbb2 f6f3 	udiv	r6, r2, r3
 8002f16:	d331      	bcc.n	8002f7c <quorem+0x9c>
 8002f18:	f04f 0e00 	mov.w	lr, #0
 8002f1c:	4640      	mov	r0, r8
 8002f1e:	46ac      	mov	ip, r5
 8002f20:	46f2      	mov	sl, lr
 8002f22:	f850 2b04 	ldr.w	r2, [r0], #4
 8002f26:	b293      	uxth	r3, r2
 8002f28:	fb06 e303 	mla	r3, r6, r3, lr
 8002f2c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002f30:	0c1a      	lsrs	r2, r3, #16
 8002f32:	b29b      	uxth	r3, r3
 8002f34:	ebaa 0303 	sub.w	r3, sl, r3
 8002f38:	f8dc a000 	ldr.w	sl, [ip]
 8002f3c:	fa13 f38a 	uxtah	r3, r3, sl
 8002f40:	fb06 220e 	mla	r2, r6, lr, r2
 8002f44:	9300      	str	r3, [sp, #0]
 8002f46:	9b00      	ldr	r3, [sp, #0]
 8002f48:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002f4c:	b292      	uxth	r2, r2
 8002f4e:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002f52:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002f56:	f8bd 3000 	ldrh.w	r3, [sp]
 8002f5a:	4581      	cmp	r9, r0
 8002f5c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002f60:	f84c 3b04 	str.w	r3, [ip], #4
 8002f64:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002f68:	d2db      	bcs.n	8002f22 <quorem+0x42>
 8002f6a:	f855 300b 	ldr.w	r3, [r5, fp]
 8002f6e:	b92b      	cbnz	r3, 8002f7c <quorem+0x9c>
 8002f70:	9b01      	ldr	r3, [sp, #4]
 8002f72:	3b04      	subs	r3, #4
 8002f74:	429d      	cmp	r5, r3
 8002f76:	461a      	mov	r2, r3
 8002f78:	d32c      	bcc.n	8002fd4 <quorem+0xf4>
 8002f7a:	613c      	str	r4, [r7, #16]
 8002f7c:	4638      	mov	r0, r7
 8002f7e:	f001 f9ef 	bl	8004360 <__mcmp>
 8002f82:	2800      	cmp	r0, #0
 8002f84:	db22      	blt.n	8002fcc <quorem+0xec>
 8002f86:	3601      	adds	r6, #1
 8002f88:	4629      	mov	r1, r5
 8002f8a:	2000      	movs	r0, #0
 8002f8c:	f858 2b04 	ldr.w	r2, [r8], #4
 8002f90:	f8d1 c000 	ldr.w	ip, [r1]
 8002f94:	b293      	uxth	r3, r2
 8002f96:	1ac3      	subs	r3, r0, r3
 8002f98:	0c12      	lsrs	r2, r2, #16
 8002f9a:	fa13 f38c 	uxtah	r3, r3, ip
 8002f9e:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002fa2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002fa6:	b29b      	uxth	r3, r3
 8002fa8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002fac:	45c1      	cmp	r9, r8
 8002fae:	f841 3b04 	str.w	r3, [r1], #4
 8002fb2:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002fb6:	d2e9      	bcs.n	8002f8c <quorem+0xac>
 8002fb8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002fbc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002fc0:	b922      	cbnz	r2, 8002fcc <quorem+0xec>
 8002fc2:	3b04      	subs	r3, #4
 8002fc4:	429d      	cmp	r5, r3
 8002fc6:	461a      	mov	r2, r3
 8002fc8:	d30a      	bcc.n	8002fe0 <quorem+0x100>
 8002fca:	613c      	str	r4, [r7, #16]
 8002fcc:	4630      	mov	r0, r6
 8002fce:	b003      	add	sp, #12
 8002fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fd4:	6812      	ldr	r2, [r2, #0]
 8002fd6:	3b04      	subs	r3, #4
 8002fd8:	2a00      	cmp	r2, #0
 8002fda:	d1ce      	bne.n	8002f7a <quorem+0x9a>
 8002fdc:	3c01      	subs	r4, #1
 8002fde:	e7c9      	b.n	8002f74 <quorem+0x94>
 8002fe0:	6812      	ldr	r2, [r2, #0]
 8002fe2:	3b04      	subs	r3, #4
 8002fe4:	2a00      	cmp	r2, #0
 8002fe6:	d1f0      	bne.n	8002fca <quorem+0xea>
 8002fe8:	3c01      	subs	r4, #1
 8002fea:	e7eb      	b.n	8002fc4 <quorem+0xe4>
 8002fec:	2000      	movs	r0, #0
 8002fee:	e7ee      	b.n	8002fce <quorem+0xee>

08002ff0 <_dtoa_r>:
 8002ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ff4:	ed2d 8b04 	vpush	{d8-d9}
 8002ff8:	69c5      	ldr	r5, [r0, #28]
 8002ffa:	b093      	sub	sp, #76	; 0x4c
 8002ffc:	ed8d 0b02 	vstr	d0, [sp, #8]
 8003000:	ec57 6b10 	vmov	r6, r7, d0
 8003004:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8003008:	9107      	str	r1, [sp, #28]
 800300a:	4604      	mov	r4, r0
 800300c:	920a      	str	r2, [sp, #40]	; 0x28
 800300e:	930d      	str	r3, [sp, #52]	; 0x34
 8003010:	b975      	cbnz	r5, 8003030 <_dtoa_r+0x40>
 8003012:	2010      	movs	r0, #16
 8003014:	f000 fe2a 	bl	8003c6c <malloc>
 8003018:	4602      	mov	r2, r0
 800301a:	61e0      	str	r0, [r4, #28]
 800301c:	b920      	cbnz	r0, 8003028 <_dtoa_r+0x38>
 800301e:	4bae      	ldr	r3, [pc, #696]	; (80032d8 <_dtoa_r+0x2e8>)
 8003020:	21ef      	movs	r1, #239	; 0xef
 8003022:	48ae      	ldr	r0, [pc, #696]	; (80032dc <_dtoa_r+0x2ec>)
 8003024:	f002 fc74 	bl	8005910 <__assert_func>
 8003028:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800302c:	6005      	str	r5, [r0, #0]
 800302e:	60c5      	str	r5, [r0, #12]
 8003030:	69e3      	ldr	r3, [r4, #28]
 8003032:	6819      	ldr	r1, [r3, #0]
 8003034:	b151      	cbz	r1, 800304c <_dtoa_r+0x5c>
 8003036:	685a      	ldr	r2, [r3, #4]
 8003038:	604a      	str	r2, [r1, #4]
 800303a:	2301      	movs	r3, #1
 800303c:	4093      	lsls	r3, r2
 800303e:	608b      	str	r3, [r1, #8]
 8003040:	4620      	mov	r0, r4
 8003042:	f000 ff07 	bl	8003e54 <_Bfree>
 8003046:	69e3      	ldr	r3, [r4, #28]
 8003048:	2200      	movs	r2, #0
 800304a:	601a      	str	r2, [r3, #0]
 800304c:	1e3b      	subs	r3, r7, #0
 800304e:	bfbb      	ittet	lt
 8003050:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003054:	9303      	strlt	r3, [sp, #12]
 8003056:	2300      	movge	r3, #0
 8003058:	2201      	movlt	r2, #1
 800305a:	bfac      	ite	ge
 800305c:	f8c8 3000 	strge.w	r3, [r8]
 8003060:	f8c8 2000 	strlt.w	r2, [r8]
 8003064:	4b9e      	ldr	r3, [pc, #632]	; (80032e0 <_dtoa_r+0x2f0>)
 8003066:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800306a:	ea33 0308 	bics.w	r3, r3, r8
 800306e:	d11b      	bne.n	80030a8 <_dtoa_r+0xb8>
 8003070:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003072:	f242 730f 	movw	r3, #9999	; 0x270f
 8003076:	6013      	str	r3, [r2, #0]
 8003078:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800307c:	4333      	orrs	r3, r6
 800307e:	f000 8593 	beq.w	8003ba8 <_dtoa_r+0xbb8>
 8003082:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003084:	b963      	cbnz	r3, 80030a0 <_dtoa_r+0xb0>
 8003086:	4b97      	ldr	r3, [pc, #604]	; (80032e4 <_dtoa_r+0x2f4>)
 8003088:	e027      	b.n	80030da <_dtoa_r+0xea>
 800308a:	4b97      	ldr	r3, [pc, #604]	; (80032e8 <_dtoa_r+0x2f8>)
 800308c:	9300      	str	r3, [sp, #0]
 800308e:	3308      	adds	r3, #8
 8003090:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003092:	6013      	str	r3, [r2, #0]
 8003094:	9800      	ldr	r0, [sp, #0]
 8003096:	b013      	add	sp, #76	; 0x4c
 8003098:	ecbd 8b04 	vpop	{d8-d9}
 800309c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030a0:	4b90      	ldr	r3, [pc, #576]	; (80032e4 <_dtoa_r+0x2f4>)
 80030a2:	9300      	str	r3, [sp, #0]
 80030a4:	3303      	adds	r3, #3
 80030a6:	e7f3      	b.n	8003090 <_dtoa_r+0xa0>
 80030a8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80030ac:	2200      	movs	r2, #0
 80030ae:	ec51 0b17 	vmov	r0, r1, d7
 80030b2:	eeb0 8a47 	vmov.f32	s16, s14
 80030b6:	eef0 8a67 	vmov.f32	s17, s15
 80030ba:	2300      	movs	r3, #0
 80030bc:	f7fd fd04 	bl	8000ac8 <__aeabi_dcmpeq>
 80030c0:	4681      	mov	r9, r0
 80030c2:	b160      	cbz	r0, 80030de <_dtoa_r+0xee>
 80030c4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80030c6:	2301      	movs	r3, #1
 80030c8:	6013      	str	r3, [r2, #0]
 80030ca:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	f000 8568 	beq.w	8003ba2 <_dtoa_r+0xbb2>
 80030d2:	4b86      	ldr	r3, [pc, #536]	; (80032ec <_dtoa_r+0x2fc>)
 80030d4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80030d6:	6013      	str	r3, [r2, #0]
 80030d8:	3b01      	subs	r3, #1
 80030da:	9300      	str	r3, [sp, #0]
 80030dc:	e7da      	b.n	8003094 <_dtoa_r+0xa4>
 80030de:	aa10      	add	r2, sp, #64	; 0x40
 80030e0:	a911      	add	r1, sp, #68	; 0x44
 80030e2:	4620      	mov	r0, r4
 80030e4:	eeb0 0a48 	vmov.f32	s0, s16
 80030e8:	eef0 0a68 	vmov.f32	s1, s17
 80030ec:	f001 fa4e 	bl	800458c <__d2b>
 80030f0:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80030f4:	4682      	mov	sl, r0
 80030f6:	2d00      	cmp	r5, #0
 80030f8:	d07f      	beq.n	80031fa <_dtoa_r+0x20a>
 80030fa:	ee18 3a90 	vmov	r3, s17
 80030fe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003102:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8003106:	ec51 0b18 	vmov	r0, r1, d8
 800310a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800310e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003112:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8003116:	4619      	mov	r1, r3
 8003118:	2200      	movs	r2, #0
 800311a:	4b75      	ldr	r3, [pc, #468]	; (80032f0 <_dtoa_r+0x300>)
 800311c:	f7fd f8b4 	bl	8000288 <__aeabi_dsub>
 8003120:	a367      	add	r3, pc, #412	; (adr r3, 80032c0 <_dtoa_r+0x2d0>)
 8003122:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003126:	f7fd fa67 	bl	80005f8 <__aeabi_dmul>
 800312a:	a367      	add	r3, pc, #412	; (adr r3, 80032c8 <_dtoa_r+0x2d8>)
 800312c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003130:	f7fd f8ac 	bl	800028c <__adddf3>
 8003134:	4606      	mov	r6, r0
 8003136:	4628      	mov	r0, r5
 8003138:	460f      	mov	r7, r1
 800313a:	f7fd f9f3 	bl	8000524 <__aeabi_i2d>
 800313e:	a364      	add	r3, pc, #400	; (adr r3, 80032d0 <_dtoa_r+0x2e0>)
 8003140:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003144:	f7fd fa58 	bl	80005f8 <__aeabi_dmul>
 8003148:	4602      	mov	r2, r0
 800314a:	460b      	mov	r3, r1
 800314c:	4630      	mov	r0, r6
 800314e:	4639      	mov	r1, r7
 8003150:	f7fd f89c 	bl	800028c <__adddf3>
 8003154:	4606      	mov	r6, r0
 8003156:	460f      	mov	r7, r1
 8003158:	f7fd fcfe 	bl	8000b58 <__aeabi_d2iz>
 800315c:	2200      	movs	r2, #0
 800315e:	4683      	mov	fp, r0
 8003160:	2300      	movs	r3, #0
 8003162:	4630      	mov	r0, r6
 8003164:	4639      	mov	r1, r7
 8003166:	f7fd fcb9 	bl	8000adc <__aeabi_dcmplt>
 800316a:	b148      	cbz	r0, 8003180 <_dtoa_r+0x190>
 800316c:	4658      	mov	r0, fp
 800316e:	f7fd f9d9 	bl	8000524 <__aeabi_i2d>
 8003172:	4632      	mov	r2, r6
 8003174:	463b      	mov	r3, r7
 8003176:	f7fd fca7 	bl	8000ac8 <__aeabi_dcmpeq>
 800317a:	b908      	cbnz	r0, 8003180 <_dtoa_r+0x190>
 800317c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003180:	f1bb 0f16 	cmp.w	fp, #22
 8003184:	d857      	bhi.n	8003236 <_dtoa_r+0x246>
 8003186:	4b5b      	ldr	r3, [pc, #364]	; (80032f4 <_dtoa_r+0x304>)
 8003188:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800318c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003190:	ec51 0b18 	vmov	r0, r1, d8
 8003194:	f7fd fca2 	bl	8000adc <__aeabi_dcmplt>
 8003198:	2800      	cmp	r0, #0
 800319a:	d04e      	beq.n	800323a <_dtoa_r+0x24a>
 800319c:	f10b 3bff 	add.w	fp, fp, #4294967295
 80031a0:	2300      	movs	r3, #0
 80031a2:	930c      	str	r3, [sp, #48]	; 0x30
 80031a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80031a6:	1b5b      	subs	r3, r3, r5
 80031a8:	1e5a      	subs	r2, r3, #1
 80031aa:	bf45      	ittet	mi
 80031ac:	f1c3 0301 	rsbmi	r3, r3, #1
 80031b0:	9305      	strmi	r3, [sp, #20]
 80031b2:	2300      	movpl	r3, #0
 80031b4:	2300      	movmi	r3, #0
 80031b6:	9206      	str	r2, [sp, #24]
 80031b8:	bf54      	ite	pl
 80031ba:	9305      	strpl	r3, [sp, #20]
 80031bc:	9306      	strmi	r3, [sp, #24]
 80031be:	f1bb 0f00 	cmp.w	fp, #0
 80031c2:	db3c      	blt.n	800323e <_dtoa_r+0x24e>
 80031c4:	9b06      	ldr	r3, [sp, #24]
 80031c6:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80031ca:	445b      	add	r3, fp
 80031cc:	9306      	str	r3, [sp, #24]
 80031ce:	2300      	movs	r3, #0
 80031d0:	9308      	str	r3, [sp, #32]
 80031d2:	9b07      	ldr	r3, [sp, #28]
 80031d4:	2b09      	cmp	r3, #9
 80031d6:	d868      	bhi.n	80032aa <_dtoa_r+0x2ba>
 80031d8:	2b05      	cmp	r3, #5
 80031da:	bfc4      	itt	gt
 80031dc:	3b04      	subgt	r3, #4
 80031de:	9307      	strgt	r3, [sp, #28]
 80031e0:	9b07      	ldr	r3, [sp, #28]
 80031e2:	f1a3 0302 	sub.w	r3, r3, #2
 80031e6:	bfcc      	ite	gt
 80031e8:	2500      	movgt	r5, #0
 80031ea:	2501      	movle	r5, #1
 80031ec:	2b03      	cmp	r3, #3
 80031ee:	f200 8085 	bhi.w	80032fc <_dtoa_r+0x30c>
 80031f2:	e8df f003 	tbb	[pc, r3]
 80031f6:	3b2e      	.short	0x3b2e
 80031f8:	5839      	.short	0x5839
 80031fa:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80031fe:	441d      	add	r5, r3
 8003200:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8003204:	2b20      	cmp	r3, #32
 8003206:	bfc1      	itttt	gt
 8003208:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800320c:	fa08 f803 	lslgt.w	r8, r8, r3
 8003210:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8003214:	fa26 f303 	lsrgt.w	r3, r6, r3
 8003218:	bfd6      	itet	le
 800321a:	f1c3 0320 	rsble	r3, r3, #32
 800321e:	ea48 0003 	orrgt.w	r0, r8, r3
 8003222:	fa06 f003 	lslle.w	r0, r6, r3
 8003226:	f7fd f96d 	bl	8000504 <__aeabi_ui2d>
 800322a:	2201      	movs	r2, #1
 800322c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8003230:	3d01      	subs	r5, #1
 8003232:	920e      	str	r2, [sp, #56]	; 0x38
 8003234:	e76f      	b.n	8003116 <_dtoa_r+0x126>
 8003236:	2301      	movs	r3, #1
 8003238:	e7b3      	b.n	80031a2 <_dtoa_r+0x1b2>
 800323a:	900c      	str	r0, [sp, #48]	; 0x30
 800323c:	e7b2      	b.n	80031a4 <_dtoa_r+0x1b4>
 800323e:	9b05      	ldr	r3, [sp, #20]
 8003240:	eba3 030b 	sub.w	r3, r3, fp
 8003244:	9305      	str	r3, [sp, #20]
 8003246:	f1cb 0300 	rsb	r3, fp, #0
 800324a:	9308      	str	r3, [sp, #32]
 800324c:	2300      	movs	r3, #0
 800324e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003250:	e7bf      	b.n	80031d2 <_dtoa_r+0x1e2>
 8003252:	2300      	movs	r3, #0
 8003254:	9309      	str	r3, [sp, #36]	; 0x24
 8003256:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003258:	2b00      	cmp	r3, #0
 800325a:	dc52      	bgt.n	8003302 <_dtoa_r+0x312>
 800325c:	2301      	movs	r3, #1
 800325e:	9301      	str	r3, [sp, #4]
 8003260:	9304      	str	r3, [sp, #16]
 8003262:	461a      	mov	r2, r3
 8003264:	920a      	str	r2, [sp, #40]	; 0x28
 8003266:	e00b      	b.n	8003280 <_dtoa_r+0x290>
 8003268:	2301      	movs	r3, #1
 800326a:	e7f3      	b.n	8003254 <_dtoa_r+0x264>
 800326c:	2300      	movs	r3, #0
 800326e:	9309      	str	r3, [sp, #36]	; 0x24
 8003270:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003272:	445b      	add	r3, fp
 8003274:	9301      	str	r3, [sp, #4]
 8003276:	3301      	adds	r3, #1
 8003278:	2b01      	cmp	r3, #1
 800327a:	9304      	str	r3, [sp, #16]
 800327c:	bfb8      	it	lt
 800327e:	2301      	movlt	r3, #1
 8003280:	69e0      	ldr	r0, [r4, #28]
 8003282:	2100      	movs	r1, #0
 8003284:	2204      	movs	r2, #4
 8003286:	f102 0614 	add.w	r6, r2, #20
 800328a:	429e      	cmp	r6, r3
 800328c:	d93d      	bls.n	800330a <_dtoa_r+0x31a>
 800328e:	6041      	str	r1, [r0, #4]
 8003290:	4620      	mov	r0, r4
 8003292:	f000 fd9f 	bl	8003dd4 <_Balloc>
 8003296:	9000      	str	r0, [sp, #0]
 8003298:	2800      	cmp	r0, #0
 800329a:	d139      	bne.n	8003310 <_dtoa_r+0x320>
 800329c:	4b16      	ldr	r3, [pc, #88]	; (80032f8 <_dtoa_r+0x308>)
 800329e:	4602      	mov	r2, r0
 80032a0:	f240 11af 	movw	r1, #431	; 0x1af
 80032a4:	e6bd      	b.n	8003022 <_dtoa_r+0x32>
 80032a6:	2301      	movs	r3, #1
 80032a8:	e7e1      	b.n	800326e <_dtoa_r+0x27e>
 80032aa:	2501      	movs	r5, #1
 80032ac:	2300      	movs	r3, #0
 80032ae:	9307      	str	r3, [sp, #28]
 80032b0:	9509      	str	r5, [sp, #36]	; 0x24
 80032b2:	f04f 33ff 	mov.w	r3, #4294967295
 80032b6:	9301      	str	r3, [sp, #4]
 80032b8:	9304      	str	r3, [sp, #16]
 80032ba:	2200      	movs	r2, #0
 80032bc:	2312      	movs	r3, #18
 80032be:	e7d1      	b.n	8003264 <_dtoa_r+0x274>
 80032c0:	636f4361 	.word	0x636f4361
 80032c4:	3fd287a7 	.word	0x3fd287a7
 80032c8:	8b60c8b3 	.word	0x8b60c8b3
 80032cc:	3fc68a28 	.word	0x3fc68a28
 80032d0:	509f79fb 	.word	0x509f79fb
 80032d4:	3fd34413 	.word	0x3fd34413
 80032d8:	080069c9 	.word	0x080069c9
 80032dc:	080069e0 	.word	0x080069e0
 80032e0:	7ff00000 	.word	0x7ff00000
 80032e4:	080069c5 	.word	0x080069c5
 80032e8:	080069bc 	.word	0x080069bc
 80032ec:	08006994 	.word	0x08006994
 80032f0:	3ff80000 	.word	0x3ff80000
 80032f4:	08006ad0 	.word	0x08006ad0
 80032f8:	08006a38 	.word	0x08006a38
 80032fc:	2301      	movs	r3, #1
 80032fe:	9309      	str	r3, [sp, #36]	; 0x24
 8003300:	e7d7      	b.n	80032b2 <_dtoa_r+0x2c2>
 8003302:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003304:	9301      	str	r3, [sp, #4]
 8003306:	9304      	str	r3, [sp, #16]
 8003308:	e7ba      	b.n	8003280 <_dtoa_r+0x290>
 800330a:	3101      	adds	r1, #1
 800330c:	0052      	lsls	r2, r2, #1
 800330e:	e7ba      	b.n	8003286 <_dtoa_r+0x296>
 8003310:	69e3      	ldr	r3, [r4, #28]
 8003312:	9a00      	ldr	r2, [sp, #0]
 8003314:	601a      	str	r2, [r3, #0]
 8003316:	9b04      	ldr	r3, [sp, #16]
 8003318:	2b0e      	cmp	r3, #14
 800331a:	f200 80a8 	bhi.w	800346e <_dtoa_r+0x47e>
 800331e:	2d00      	cmp	r5, #0
 8003320:	f000 80a5 	beq.w	800346e <_dtoa_r+0x47e>
 8003324:	f1bb 0f00 	cmp.w	fp, #0
 8003328:	dd38      	ble.n	800339c <_dtoa_r+0x3ac>
 800332a:	4bc0      	ldr	r3, [pc, #768]	; (800362c <_dtoa_r+0x63c>)
 800332c:	f00b 020f 	and.w	r2, fp, #15
 8003330:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003334:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8003338:	e9d3 6700 	ldrd	r6, r7, [r3]
 800333c:	ea4f 182b 	mov.w	r8, fp, asr #4
 8003340:	d019      	beq.n	8003376 <_dtoa_r+0x386>
 8003342:	4bbb      	ldr	r3, [pc, #748]	; (8003630 <_dtoa_r+0x640>)
 8003344:	ec51 0b18 	vmov	r0, r1, d8
 8003348:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800334c:	f7fd fa7e 	bl	800084c <__aeabi_ddiv>
 8003350:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003354:	f008 080f 	and.w	r8, r8, #15
 8003358:	2503      	movs	r5, #3
 800335a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8003630 <_dtoa_r+0x640>
 800335e:	f1b8 0f00 	cmp.w	r8, #0
 8003362:	d10a      	bne.n	800337a <_dtoa_r+0x38a>
 8003364:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003368:	4632      	mov	r2, r6
 800336a:	463b      	mov	r3, r7
 800336c:	f7fd fa6e 	bl	800084c <__aeabi_ddiv>
 8003370:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003374:	e02b      	b.n	80033ce <_dtoa_r+0x3de>
 8003376:	2502      	movs	r5, #2
 8003378:	e7ef      	b.n	800335a <_dtoa_r+0x36a>
 800337a:	f018 0f01 	tst.w	r8, #1
 800337e:	d008      	beq.n	8003392 <_dtoa_r+0x3a2>
 8003380:	4630      	mov	r0, r6
 8003382:	4639      	mov	r1, r7
 8003384:	e9d9 2300 	ldrd	r2, r3, [r9]
 8003388:	f7fd f936 	bl	80005f8 <__aeabi_dmul>
 800338c:	3501      	adds	r5, #1
 800338e:	4606      	mov	r6, r0
 8003390:	460f      	mov	r7, r1
 8003392:	ea4f 0868 	mov.w	r8, r8, asr #1
 8003396:	f109 0908 	add.w	r9, r9, #8
 800339a:	e7e0      	b.n	800335e <_dtoa_r+0x36e>
 800339c:	f000 809f 	beq.w	80034de <_dtoa_r+0x4ee>
 80033a0:	f1cb 0600 	rsb	r6, fp, #0
 80033a4:	4ba1      	ldr	r3, [pc, #644]	; (800362c <_dtoa_r+0x63c>)
 80033a6:	4fa2      	ldr	r7, [pc, #648]	; (8003630 <_dtoa_r+0x640>)
 80033a8:	f006 020f 	and.w	r2, r6, #15
 80033ac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80033b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033b4:	ec51 0b18 	vmov	r0, r1, d8
 80033b8:	f7fd f91e 	bl	80005f8 <__aeabi_dmul>
 80033bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80033c0:	1136      	asrs	r6, r6, #4
 80033c2:	2300      	movs	r3, #0
 80033c4:	2502      	movs	r5, #2
 80033c6:	2e00      	cmp	r6, #0
 80033c8:	d17e      	bne.n	80034c8 <_dtoa_r+0x4d8>
 80033ca:	2b00      	cmp	r3, #0
 80033cc:	d1d0      	bne.n	8003370 <_dtoa_r+0x380>
 80033ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80033d0:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80033d4:	2b00      	cmp	r3, #0
 80033d6:	f000 8084 	beq.w	80034e2 <_dtoa_r+0x4f2>
 80033da:	4b96      	ldr	r3, [pc, #600]	; (8003634 <_dtoa_r+0x644>)
 80033dc:	2200      	movs	r2, #0
 80033de:	4640      	mov	r0, r8
 80033e0:	4649      	mov	r1, r9
 80033e2:	f7fd fb7b 	bl	8000adc <__aeabi_dcmplt>
 80033e6:	2800      	cmp	r0, #0
 80033e8:	d07b      	beq.n	80034e2 <_dtoa_r+0x4f2>
 80033ea:	9b04      	ldr	r3, [sp, #16]
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d078      	beq.n	80034e2 <_dtoa_r+0x4f2>
 80033f0:	9b01      	ldr	r3, [sp, #4]
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	dd39      	ble.n	800346a <_dtoa_r+0x47a>
 80033f6:	4b90      	ldr	r3, [pc, #576]	; (8003638 <_dtoa_r+0x648>)
 80033f8:	2200      	movs	r2, #0
 80033fa:	4640      	mov	r0, r8
 80033fc:	4649      	mov	r1, r9
 80033fe:	f7fd f8fb 	bl	80005f8 <__aeabi_dmul>
 8003402:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003406:	9e01      	ldr	r6, [sp, #4]
 8003408:	f10b 37ff 	add.w	r7, fp, #4294967295
 800340c:	3501      	adds	r5, #1
 800340e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8003412:	4628      	mov	r0, r5
 8003414:	f7fd f886 	bl	8000524 <__aeabi_i2d>
 8003418:	4642      	mov	r2, r8
 800341a:	464b      	mov	r3, r9
 800341c:	f7fd f8ec 	bl	80005f8 <__aeabi_dmul>
 8003420:	4b86      	ldr	r3, [pc, #536]	; (800363c <_dtoa_r+0x64c>)
 8003422:	2200      	movs	r2, #0
 8003424:	f7fc ff32 	bl	800028c <__adddf3>
 8003428:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800342c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003430:	9303      	str	r3, [sp, #12]
 8003432:	2e00      	cmp	r6, #0
 8003434:	d158      	bne.n	80034e8 <_dtoa_r+0x4f8>
 8003436:	4b82      	ldr	r3, [pc, #520]	; (8003640 <_dtoa_r+0x650>)
 8003438:	2200      	movs	r2, #0
 800343a:	4640      	mov	r0, r8
 800343c:	4649      	mov	r1, r9
 800343e:	f7fc ff23 	bl	8000288 <__aeabi_dsub>
 8003442:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003446:	4680      	mov	r8, r0
 8003448:	4689      	mov	r9, r1
 800344a:	f7fd fb65 	bl	8000b18 <__aeabi_dcmpgt>
 800344e:	2800      	cmp	r0, #0
 8003450:	f040 8296 	bne.w	8003980 <_dtoa_r+0x990>
 8003454:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8003458:	4640      	mov	r0, r8
 800345a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800345e:	4649      	mov	r1, r9
 8003460:	f7fd fb3c 	bl	8000adc <__aeabi_dcmplt>
 8003464:	2800      	cmp	r0, #0
 8003466:	f040 8289 	bne.w	800397c <_dtoa_r+0x98c>
 800346a:	ed8d 8b02 	vstr	d8, [sp, #8]
 800346e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003470:	2b00      	cmp	r3, #0
 8003472:	f2c0 814e 	blt.w	8003712 <_dtoa_r+0x722>
 8003476:	f1bb 0f0e 	cmp.w	fp, #14
 800347a:	f300 814a 	bgt.w	8003712 <_dtoa_r+0x722>
 800347e:	4b6b      	ldr	r3, [pc, #428]	; (800362c <_dtoa_r+0x63c>)
 8003480:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8003484:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003488:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800348a:	2b00      	cmp	r3, #0
 800348c:	f280 80dc 	bge.w	8003648 <_dtoa_r+0x658>
 8003490:	9b04      	ldr	r3, [sp, #16]
 8003492:	2b00      	cmp	r3, #0
 8003494:	f300 80d8 	bgt.w	8003648 <_dtoa_r+0x658>
 8003498:	f040 826f 	bne.w	800397a <_dtoa_r+0x98a>
 800349c:	4b68      	ldr	r3, [pc, #416]	; (8003640 <_dtoa_r+0x650>)
 800349e:	2200      	movs	r2, #0
 80034a0:	4640      	mov	r0, r8
 80034a2:	4649      	mov	r1, r9
 80034a4:	f7fd f8a8 	bl	80005f8 <__aeabi_dmul>
 80034a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80034ac:	f7fd fb2a 	bl	8000b04 <__aeabi_dcmpge>
 80034b0:	9e04      	ldr	r6, [sp, #16]
 80034b2:	4637      	mov	r7, r6
 80034b4:	2800      	cmp	r0, #0
 80034b6:	f040 8245 	bne.w	8003944 <_dtoa_r+0x954>
 80034ba:	9d00      	ldr	r5, [sp, #0]
 80034bc:	2331      	movs	r3, #49	; 0x31
 80034be:	f805 3b01 	strb.w	r3, [r5], #1
 80034c2:	f10b 0b01 	add.w	fp, fp, #1
 80034c6:	e241      	b.n	800394c <_dtoa_r+0x95c>
 80034c8:	07f2      	lsls	r2, r6, #31
 80034ca:	d505      	bpl.n	80034d8 <_dtoa_r+0x4e8>
 80034cc:	e9d7 2300 	ldrd	r2, r3, [r7]
 80034d0:	f7fd f892 	bl	80005f8 <__aeabi_dmul>
 80034d4:	3501      	adds	r5, #1
 80034d6:	2301      	movs	r3, #1
 80034d8:	1076      	asrs	r6, r6, #1
 80034da:	3708      	adds	r7, #8
 80034dc:	e773      	b.n	80033c6 <_dtoa_r+0x3d6>
 80034de:	2502      	movs	r5, #2
 80034e0:	e775      	b.n	80033ce <_dtoa_r+0x3de>
 80034e2:	9e04      	ldr	r6, [sp, #16]
 80034e4:	465f      	mov	r7, fp
 80034e6:	e792      	b.n	800340e <_dtoa_r+0x41e>
 80034e8:	9900      	ldr	r1, [sp, #0]
 80034ea:	4b50      	ldr	r3, [pc, #320]	; (800362c <_dtoa_r+0x63c>)
 80034ec:	ed9d 7b02 	vldr	d7, [sp, #8]
 80034f0:	4431      	add	r1, r6
 80034f2:	9102      	str	r1, [sp, #8]
 80034f4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80034f6:	eeb0 9a47 	vmov.f32	s18, s14
 80034fa:	eef0 9a67 	vmov.f32	s19, s15
 80034fe:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003502:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003506:	2900      	cmp	r1, #0
 8003508:	d044      	beq.n	8003594 <_dtoa_r+0x5a4>
 800350a:	494e      	ldr	r1, [pc, #312]	; (8003644 <_dtoa_r+0x654>)
 800350c:	2000      	movs	r0, #0
 800350e:	f7fd f99d 	bl	800084c <__aeabi_ddiv>
 8003512:	ec53 2b19 	vmov	r2, r3, d9
 8003516:	f7fc feb7 	bl	8000288 <__aeabi_dsub>
 800351a:	9d00      	ldr	r5, [sp, #0]
 800351c:	ec41 0b19 	vmov	d9, r0, r1
 8003520:	4649      	mov	r1, r9
 8003522:	4640      	mov	r0, r8
 8003524:	f7fd fb18 	bl	8000b58 <__aeabi_d2iz>
 8003528:	4606      	mov	r6, r0
 800352a:	f7fc fffb 	bl	8000524 <__aeabi_i2d>
 800352e:	4602      	mov	r2, r0
 8003530:	460b      	mov	r3, r1
 8003532:	4640      	mov	r0, r8
 8003534:	4649      	mov	r1, r9
 8003536:	f7fc fea7 	bl	8000288 <__aeabi_dsub>
 800353a:	3630      	adds	r6, #48	; 0x30
 800353c:	f805 6b01 	strb.w	r6, [r5], #1
 8003540:	ec53 2b19 	vmov	r2, r3, d9
 8003544:	4680      	mov	r8, r0
 8003546:	4689      	mov	r9, r1
 8003548:	f7fd fac8 	bl	8000adc <__aeabi_dcmplt>
 800354c:	2800      	cmp	r0, #0
 800354e:	d164      	bne.n	800361a <_dtoa_r+0x62a>
 8003550:	4642      	mov	r2, r8
 8003552:	464b      	mov	r3, r9
 8003554:	4937      	ldr	r1, [pc, #220]	; (8003634 <_dtoa_r+0x644>)
 8003556:	2000      	movs	r0, #0
 8003558:	f7fc fe96 	bl	8000288 <__aeabi_dsub>
 800355c:	ec53 2b19 	vmov	r2, r3, d9
 8003560:	f7fd fabc 	bl	8000adc <__aeabi_dcmplt>
 8003564:	2800      	cmp	r0, #0
 8003566:	f040 80b6 	bne.w	80036d6 <_dtoa_r+0x6e6>
 800356a:	9b02      	ldr	r3, [sp, #8]
 800356c:	429d      	cmp	r5, r3
 800356e:	f43f af7c 	beq.w	800346a <_dtoa_r+0x47a>
 8003572:	4b31      	ldr	r3, [pc, #196]	; (8003638 <_dtoa_r+0x648>)
 8003574:	ec51 0b19 	vmov	r0, r1, d9
 8003578:	2200      	movs	r2, #0
 800357a:	f7fd f83d 	bl	80005f8 <__aeabi_dmul>
 800357e:	4b2e      	ldr	r3, [pc, #184]	; (8003638 <_dtoa_r+0x648>)
 8003580:	ec41 0b19 	vmov	d9, r0, r1
 8003584:	2200      	movs	r2, #0
 8003586:	4640      	mov	r0, r8
 8003588:	4649      	mov	r1, r9
 800358a:	f7fd f835 	bl	80005f8 <__aeabi_dmul>
 800358e:	4680      	mov	r8, r0
 8003590:	4689      	mov	r9, r1
 8003592:	e7c5      	b.n	8003520 <_dtoa_r+0x530>
 8003594:	ec51 0b17 	vmov	r0, r1, d7
 8003598:	f7fd f82e 	bl	80005f8 <__aeabi_dmul>
 800359c:	9b02      	ldr	r3, [sp, #8]
 800359e:	9d00      	ldr	r5, [sp, #0]
 80035a0:	930f      	str	r3, [sp, #60]	; 0x3c
 80035a2:	ec41 0b19 	vmov	d9, r0, r1
 80035a6:	4649      	mov	r1, r9
 80035a8:	4640      	mov	r0, r8
 80035aa:	f7fd fad5 	bl	8000b58 <__aeabi_d2iz>
 80035ae:	4606      	mov	r6, r0
 80035b0:	f7fc ffb8 	bl	8000524 <__aeabi_i2d>
 80035b4:	3630      	adds	r6, #48	; 0x30
 80035b6:	4602      	mov	r2, r0
 80035b8:	460b      	mov	r3, r1
 80035ba:	4640      	mov	r0, r8
 80035bc:	4649      	mov	r1, r9
 80035be:	f7fc fe63 	bl	8000288 <__aeabi_dsub>
 80035c2:	f805 6b01 	strb.w	r6, [r5], #1
 80035c6:	9b02      	ldr	r3, [sp, #8]
 80035c8:	429d      	cmp	r5, r3
 80035ca:	4680      	mov	r8, r0
 80035cc:	4689      	mov	r9, r1
 80035ce:	f04f 0200 	mov.w	r2, #0
 80035d2:	d124      	bne.n	800361e <_dtoa_r+0x62e>
 80035d4:	4b1b      	ldr	r3, [pc, #108]	; (8003644 <_dtoa_r+0x654>)
 80035d6:	ec51 0b19 	vmov	r0, r1, d9
 80035da:	f7fc fe57 	bl	800028c <__adddf3>
 80035de:	4602      	mov	r2, r0
 80035e0:	460b      	mov	r3, r1
 80035e2:	4640      	mov	r0, r8
 80035e4:	4649      	mov	r1, r9
 80035e6:	f7fd fa97 	bl	8000b18 <__aeabi_dcmpgt>
 80035ea:	2800      	cmp	r0, #0
 80035ec:	d173      	bne.n	80036d6 <_dtoa_r+0x6e6>
 80035ee:	ec53 2b19 	vmov	r2, r3, d9
 80035f2:	4914      	ldr	r1, [pc, #80]	; (8003644 <_dtoa_r+0x654>)
 80035f4:	2000      	movs	r0, #0
 80035f6:	f7fc fe47 	bl	8000288 <__aeabi_dsub>
 80035fa:	4602      	mov	r2, r0
 80035fc:	460b      	mov	r3, r1
 80035fe:	4640      	mov	r0, r8
 8003600:	4649      	mov	r1, r9
 8003602:	f7fd fa6b 	bl	8000adc <__aeabi_dcmplt>
 8003606:	2800      	cmp	r0, #0
 8003608:	f43f af2f 	beq.w	800346a <_dtoa_r+0x47a>
 800360c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800360e:	1e6b      	subs	r3, r5, #1
 8003610:	930f      	str	r3, [sp, #60]	; 0x3c
 8003612:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003616:	2b30      	cmp	r3, #48	; 0x30
 8003618:	d0f8      	beq.n	800360c <_dtoa_r+0x61c>
 800361a:	46bb      	mov	fp, r7
 800361c:	e04a      	b.n	80036b4 <_dtoa_r+0x6c4>
 800361e:	4b06      	ldr	r3, [pc, #24]	; (8003638 <_dtoa_r+0x648>)
 8003620:	f7fc ffea 	bl	80005f8 <__aeabi_dmul>
 8003624:	4680      	mov	r8, r0
 8003626:	4689      	mov	r9, r1
 8003628:	e7bd      	b.n	80035a6 <_dtoa_r+0x5b6>
 800362a:	bf00      	nop
 800362c:	08006ad0 	.word	0x08006ad0
 8003630:	08006aa8 	.word	0x08006aa8
 8003634:	3ff00000 	.word	0x3ff00000
 8003638:	40240000 	.word	0x40240000
 800363c:	401c0000 	.word	0x401c0000
 8003640:	40140000 	.word	0x40140000
 8003644:	3fe00000 	.word	0x3fe00000
 8003648:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800364c:	9d00      	ldr	r5, [sp, #0]
 800364e:	4642      	mov	r2, r8
 8003650:	464b      	mov	r3, r9
 8003652:	4630      	mov	r0, r6
 8003654:	4639      	mov	r1, r7
 8003656:	f7fd f8f9 	bl	800084c <__aeabi_ddiv>
 800365a:	f7fd fa7d 	bl	8000b58 <__aeabi_d2iz>
 800365e:	9001      	str	r0, [sp, #4]
 8003660:	f7fc ff60 	bl	8000524 <__aeabi_i2d>
 8003664:	4642      	mov	r2, r8
 8003666:	464b      	mov	r3, r9
 8003668:	f7fc ffc6 	bl	80005f8 <__aeabi_dmul>
 800366c:	4602      	mov	r2, r0
 800366e:	460b      	mov	r3, r1
 8003670:	4630      	mov	r0, r6
 8003672:	4639      	mov	r1, r7
 8003674:	f7fc fe08 	bl	8000288 <__aeabi_dsub>
 8003678:	9e01      	ldr	r6, [sp, #4]
 800367a:	9f04      	ldr	r7, [sp, #16]
 800367c:	3630      	adds	r6, #48	; 0x30
 800367e:	f805 6b01 	strb.w	r6, [r5], #1
 8003682:	9e00      	ldr	r6, [sp, #0]
 8003684:	1bae      	subs	r6, r5, r6
 8003686:	42b7      	cmp	r7, r6
 8003688:	4602      	mov	r2, r0
 800368a:	460b      	mov	r3, r1
 800368c:	d134      	bne.n	80036f8 <_dtoa_r+0x708>
 800368e:	f7fc fdfd 	bl	800028c <__adddf3>
 8003692:	4642      	mov	r2, r8
 8003694:	464b      	mov	r3, r9
 8003696:	4606      	mov	r6, r0
 8003698:	460f      	mov	r7, r1
 800369a:	f7fd fa3d 	bl	8000b18 <__aeabi_dcmpgt>
 800369e:	b9c8      	cbnz	r0, 80036d4 <_dtoa_r+0x6e4>
 80036a0:	4642      	mov	r2, r8
 80036a2:	464b      	mov	r3, r9
 80036a4:	4630      	mov	r0, r6
 80036a6:	4639      	mov	r1, r7
 80036a8:	f7fd fa0e 	bl	8000ac8 <__aeabi_dcmpeq>
 80036ac:	b110      	cbz	r0, 80036b4 <_dtoa_r+0x6c4>
 80036ae:	9b01      	ldr	r3, [sp, #4]
 80036b0:	07db      	lsls	r3, r3, #31
 80036b2:	d40f      	bmi.n	80036d4 <_dtoa_r+0x6e4>
 80036b4:	4651      	mov	r1, sl
 80036b6:	4620      	mov	r0, r4
 80036b8:	f000 fbcc 	bl	8003e54 <_Bfree>
 80036bc:	2300      	movs	r3, #0
 80036be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80036c0:	702b      	strb	r3, [r5, #0]
 80036c2:	f10b 0301 	add.w	r3, fp, #1
 80036c6:	6013      	str	r3, [r2, #0]
 80036c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80036ca:	2b00      	cmp	r3, #0
 80036cc:	f43f ace2 	beq.w	8003094 <_dtoa_r+0xa4>
 80036d0:	601d      	str	r5, [r3, #0]
 80036d2:	e4df      	b.n	8003094 <_dtoa_r+0xa4>
 80036d4:	465f      	mov	r7, fp
 80036d6:	462b      	mov	r3, r5
 80036d8:	461d      	mov	r5, r3
 80036da:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80036de:	2a39      	cmp	r2, #57	; 0x39
 80036e0:	d106      	bne.n	80036f0 <_dtoa_r+0x700>
 80036e2:	9a00      	ldr	r2, [sp, #0]
 80036e4:	429a      	cmp	r2, r3
 80036e6:	d1f7      	bne.n	80036d8 <_dtoa_r+0x6e8>
 80036e8:	9900      	ldr	r1, [sp, #0]
 80036ea:	2230      	movs	r2, #48	; 0x30
 80036ec:	3701      	adds	r7, #1
 80036ee:	700a      	strb	r2, [r1, #0]
 80036f0:	781a      	ldrb	r2, [r3, #0]
 80036f2:	3201      	adds	r2, #1
 80036f4:	701a      	strb	r2, [r3, #0]
 80036f6:	e790      	b.n	800361a <_dtoa_r+0x62a>
 80036f8:	4ba3      	ldr	r3, [pc, #652]	; (8003988 <_dtoa_r+0x998>)
 80036fa:	2200      	movs	r2, #0
 80036fc:	f7fc ff7c 	bl	80005f8 <__aeabi_dmul>
 8003700:	2200      	movs	r2, #0
 8003702:	2300      	movs	r3, #0
 8003704:	4606      	mov	r6, r0
 8003706:	460f      	mov	r7, r1
 8003708:	f7fd f9de 	bl	8000ac8 <__aeabi_dcmpeq>
 800370c:	2800      	cmp	r0, #0
 800370e:	d09e      	beq.n	800364e <_dtoa_r+0x65e>
 8003710:	e7d0      	b.n	80036b4 <_dtoa_r+0x6c4>
 8003712:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003714:	2a00      	cmp	r2, #0
 8003716:	f000 80ca 	beq.w	80038ae <_dtoa_r+0x8be>
 800371a:	9a07      	ldr	r2, [sp, #28]
 800371c:	2a01      	cmp	r2, #1
 800371e:	f300 80ad 	bgt.w	800387c <_dtoa_r+0x88c>
 8003722:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003724:	2a00      	cmp	r2, #0
 8003726:	f000 80a5 	beq.w	8003874 <_dtoa_r+0x884>
 800372a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800372e:	9e08      	ldr	r6, [sp, #32]
 8003730:	9d05      	ldr	r5, [sp, #20]
 8003732:	9a05      	ldr	r2, [sp, #20]
 8003734:	441a      	add	r2, r3
 8003736:	9205      	str	r2, [sp, #20]
 8003738:	9a06      	ldr	r2, [sp, #24]
 800373a:	2101      	movs	r1, #1
 800373c:	441a      	add	r2, r3
 800373e:	4620      	mov	r0, r4
 8003740:	9206      	str	r2, [sp, #24]
 8003742:	f000 fc87 	bl	8004054 <__i2b>
 8003746:	4607      	mov	r7, r0
 8003748:	b165      	cbz	r5, 8003764 <_dtoa_r+0x774>
 800374a:	9b06      	ldr	r3, [sp, #24]
 800374c:	2b00      	cmp	r3, #0
 800374e:	dd09      	ble.n	8003764 <_dtoa_r+0x774>
 8003750:	42ab      	cmp	r3, r5
 8003752:	9a05      	ldr	r2, [sp, #20]
 8003754:	bfa8      	it	ge
 8003756:	462b      	movge	r3, r5
 8003758:	1ad2      	subs	r2, r2, r3
 800375a:	9205      	str	r2, [sp, #20]
 800375c:	9a06      	ldr	r2, [sp, #24]
 800375e:	1aed      	subs	r5, r5, r3
 8003760:	1ad3      	subs	r3, r2, r3
 8003762:	9306      	str	r3, [sp, #24]
 8003764:	9b08      	ldr	r3, [sp, #32]
 8003766:	b1f3      	cbz	r3, 80037a6 <_dtoa_r+0x7b6>
 8003768:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800376a:	2b00      	cmp	r3, #0
 800376c:	f000 80a3 	beq.w	80038b6 <_dtoa_r+0x8c6>
 8003770:	2e00      	cmp	r6, #0
 8003772:	dd10      	ble.n	8003796 <_dtoa_r+0x7a6>
 8003774:	4639      	mov	r1, r7
 8003776:	4632      	mov	r2, r6
 8003778:	4620      	mov	r0, r4
 800377a:	f000 fd2b 	bl	80041d4 <__pow5mult>
 800377e:	4652      	mov	r2, sl
 8003780:	4601      	mov	r1, r0
 8003782:	4607      	mov	r7, r0
 8003784:	4620      	mov	r0, r4
 8003786:	f000 fc7b 	bl	8004080 <__multiply>
 800378a:	4651      	mov	r1, sl
 800378c:	4680      	mov	r8, r0
 800378e:	4620      	mov	r0, r4
 8003790:	f000 fb60 	bl	8003e54 <_Bfree>
 8003794:	46c2      	mov	sl, r8
 8003796:	9b08      	ldr	r3, [sp, #32]
 8003798:	1b9a      	subs	r2, r3, r6
 800379a:	d004      	beq.n	80037a6 <_dtoa_r+0x7b6>
 800379c:	4651      	mov	r1, sl
 800379e:	4620      	mov	r0, r4
 80037a0:	f000 fd18 	bl	80041d4 <__pow5mult>
 80037a4:	4682      	mov	sl, r0
 80037a6:	2101      	movs	r1, #1
 80037a8:	4620      	mov	r0, r4
 80037aa:	f000 fc53 	bl	8004054 <__i2b>
 80037ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80037b0:	2b00      	cmp	r3, #0
 80037b2:	4606      	mov	r6, r0
 80037b4:	f340 8081 	ble.w	80038ba <_dtoa_r+0x8ca>
 80037b8:	461a      	mov	r2, r3
 80037ba:	4601      	mov	r1, r0
 80037bc:	4620      	mov	r0, r4
 80037be:	f000 fd09 	bl	80041d4 <__pow5mult>
 80037c2:	9b07      	ldr	r3, [sp, #28]
 80037c4:	2b01      	cmp	r3, #1
 80037c6:	4606      	mov	r6, r0
 80037c8:	dd7a      	ble.n	80038c0 <_dtoa_r+0x8d0>
 80037ca:	f04f 0800 	mov.w	r8, #0
 80037ce:	6933      	ldr	r3, [r6, #16]
 80037d0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80037d4:	6918      	ldr	r0, [r3, #16]
 80037d6:	f000 fbef 	bl	8003fb8 <__hi0bits>
 80037da:	f1c0 0020 	rsb	r0, r0, #32
 80037de:	9b06      	ldr	r3, [sp, #24]
 80037e0:	4418      	add	r0, r3
 80037e2:	f010 001f 	ands.w	r0, r0, #31
 80037e6:	f000 8094 	beq.w	8003912 <_dtoa_r+0x922>
 80037ea:	f1c0 0320 	rsb	r3, r0, #32
 80037ee:	2b04      	cmp	r3, #4
 80037f0:	f340 8085 	ble.w	80038fe <_dtoa_r+0x90e>
 80037f4:	9b05      	ldr	r3, [sp, #20]
 80037f6:	f1c0 001c 	rsb	r0, r0, #28
 80037fa:	4403      	add	r3, r0
 80037fc:	9305      	str	r3, [sp, #20]
 80037fe:	9b06      	ldr	r3, [sp, #24]
 8003800:	4403      	add	r3, r0
 8003802:	4405      	add	r5, r0
 8003804:	9306      	str	r3, [sp, #24]
 8003806:	9b05      	ldr	r3, [sp, #20]
 8003808:	2b00      	cmp	r3, #0
 800380a:	dd05      	ble.n	8003818 <_dtoa_r+0x828>
 800380c:	4651      	mov	r1, sl
 800380e:	461a      	mov	r2, r3
 8003810:	4620      	mov	r0, r4
 8003812:	f000 fd39 	bl	8004288 <__lshift>
 8003816:	4682      	mov	sl, r0
 8003818:	9b06      	ldr	r3, [sp, #24]
 800381a:	2b00      	cmp	r3, #0
 800381c:	dd05      	ble.n	800382a <_dtoa_r+0x83a>
 800381e:	4631      	mov	r1, r6
 8003820:	461a      	mov	r2, r3
 8003822:	4620      	mov	r0, r4
 8003824:	f000 fd30 	bl	8004288 <__lshift>
 8003828:	4606      	mov	r6, r0
 800382a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800382c:	2b00      	cmp	r3, #0
 800382e:	d072      	beq.n	8003916 <_dtoa_r+0x926>
 8003830:	4631      	mov	r1, r6
 8003832:	4650      	mov	r0, sl
 8003834:	f000 fd94 	bl	8004360 <__mcmp>
 8003838:	2800      	cmp	r0, #0
 800383a:	da6c      	bge.n	8003916 <_dtoa_r+0x926>
 800383c:	2300      	movs	r3, #0
 800383e:	4651      	mov	r1, sl
 8003840:	220a      	movs	r2, #10
 8003842:	4620      	mov	r0, r4
 8003844:	f000 fb28 	bl	8003e98 <__multadd>
 8003848:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800384a:	f10b 3bff 	add.w	fp, fp, #4294967295
 800384e:	4682      	mov	sl, r0
 8003850:	2b00      	cmp	r3, #0
 8003852:	f000 81b0 	beq.w	8003bb6 <_dtoa_r+0xbc6>
 8003856:	2300      	movs	r3, #0
 8003858:	4639      	mov	r1, r7
 800385a:	220a      	movs	r2, #10
 800385c:	4620      	mov	r0, r4
 800385e:	f000 fb1b 	bl	8003e98 <__multadd>
 8003862:	9b01      	ldr	r3, [sp, #4]
 8003864:	2b00      	cmp	r3, #0
 8003866:	4607      	mov	r7, r0
 8003868:	f300 8096 	bgt.w	8003998 <_dtoa_r+0x9a8>
 800386c:	9b07      	ldr	r3, [sp, #28]
 800386e:	2b02      	cmp	r3, #2
 8003870:	dc59      	bgt.n	8003926 <_dtoa_r+0x936>
 8003872:	e091      	b.n	8003998 <_dtoa_r+0x9a8>
 8003874:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003876:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800387a:	e758      	b.n	800372e <_dtoa_r+0x73e>
 800387c:	9b04      	ldr	r3, [sp, #16]
 800387e:	1e5e      	subs	r6, r3, #1
 8003880:	9b08      	ldr	r3, [sp, #32]
 8003882:	42b3      	cmp	r3, r6
 8003884:	bfbf      	itttt	lt
 8003886:	9b08      	ldrlt	r3, [sp, #32]
 8003888:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 800388a:	9608      	strlt	r6, [sp, #32]
 800388c:	1af3      	sublt	r3, r6, r3
 800388e:	bfb4      	ite	lt
 8003890:	18d2      	addlt	r2, r2, r3
 8003892:	1b9e      	subge	r6, r3, r6
 8003894:	9b04      	ldr	r3, [sp, #16]
 8003896:	bfbc      	itt	lt
 8003898:	920b      	strlt	r2, [sp, #44]	; 0x2c
 800389a:	2600      	movlt	r6, #0
 800389c:	2b00      	cmp	r3, #0
 800389e:	bfb7      	itett	lt
 80038a0:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 80038a4:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 80038a8:	1a9d      	sublt	r5, r3, r2
 80038aa:	2300      	movlt	r3, #0
 80038ac:	e741      	b.n	8003732 <_dtoa_r+0x742>
 80038ae:	9e08      	ldr	r6, [sp, #32]
 80038b0:	9d05      	ldr	r5, [sp, #20]
 80038b2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80038b4:	e748      	b.n	8003748 <_dtoa_r+0x758>
 80038b6:	9a08      	ldr	r2, [sp, #32]
 80038b8:	e770      	b.n	800379c <_dtoa_r+0x7ac>
 80038ba:	9b07      	ldr	r3, [sp, #28]
 80038bc:	2b01      	cmp	r3, #1
 80038be:	dc19      	bgt.n	80038f4 <_dtoa_r+0x904>
 80038c0:	9b02      	ldr	r3, [sp, #8]
 80038c2:	b9bb      	cbnz	r3, 80038f4 <_dtoa_r+0x904>
 80038c4:	9b03      	ldr	r3, [sp, #12]
 80038c6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80038ca:	b99b      	cbnz	r3, 80038f4 <_dtoa_r+0x904>
 80038cc:	9b03      	ldr	r3, [sp, #12]
 80038ce:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80038d2:	0d1b      	lsrs	r3, r3, #20
 80038d4:	051b      	lsls	r3, r3, #20
 80038d6:	b183      	cbz	r3, 80038fa <_dtoa_r+0x90a>
 80038d8:	9b05      	ldr	r3, [sp, #20]
 80038da:	3301      	adds	r3, #1
 80038dc:	9305      	str	r3, [sp, #20]
 80038de:	9b06      	ldr	r3, [sp, #24]
 80038e0:	3301      	adds	r3, #1
 80038e2:	9306      	str	r3, [sp, #24]
 80038e4:	f04f 0801 	mov.w	r8, #1
 80038e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	f47f af6f 	bne.w	80037ce <_dtoa_r+0x7de>
 80038f0:	2001      	movs	r0, #1
 80038f2:	e774      	b.n	80037de <_dtoa_r+0x7ee>
 80038f4:	f04f 0800 	mov.w	r8, #0
 80038f8:	e7f6      	b.n	80038e8 <_dtoa_r+0x8f8>
 80038fa:	4698      	mov	r8, r3
 80038fc:	e7f4      	b.n	80038e8 <_dtoa_r+0x8f8>
 80038fe:	d082      	beq.n	8003806 <_dtoa_r+0x816>
 8003900:	9a05      	ldr	r2, [sp, #20]
 8003902:	331c      	adds	r3, #28
 8003904:	441a      	add	r2, r3
 8003906:	9205      	str	r2, [sp, #20]
 8003908:	9a06      	ldr	r2, [sp, #24]
 800390a:	441a      	add	r2, r3
 800390c:	441d      	add	r5, r3
 800390e:	9206      	str	r2, [sp, #24]
 8003910:	e779      	b.n	8003806 <_dtoa_r+0x816>
 8003912:	4603      	mov	r3, r0
 8003914:	e7f4      	b.n	8003900 <_dtoa_r+0x910>
 8003916:	9b04      	ldr	r3, [sp, #16]
 8003918:	2b00      	cmp	r3, #0
 800391a:	dc37      	bgt.n	800398c <_dtoa_r+0x99c>
 800391c:	9b07      	ldr	r3, [sp, #28]
 800391e:	2b02      	cmp	r3, #2
 8003920:	dd34      	ble.n	800398c <_dtoa_r+0x99c>
 8003922:	9b04      	ldr	r3, [sp, #16]
 8003924:	9301      	str	r3, [sp, #4]
 8003926:	9b01      	ldr	r3, [sp, #4]
 8003928:	b963      	cbnz	r3, 8003944 <_dtoa_r+0x954>
 800392a:	4631      	mov	r1, r6
 800392c:	2205      	movs	r2, #5
 800392e:	4620      	mov	r0, r4
 8003930:	f000 fab2 	bl	8003e98 <__multadd>
 8003934:	4601      	mov	r1, r0
 8003936:	4606      	mov	r6, r0
 8003938:	4650      	mov	r0, sl
 800393a:	f000 fd11 	bl	8004360 <__mcmp>
 800393e:	2800      	cmp	r0, #0
 8003940:	f73f adbb 	bgt.w	80034ba <_dtoa_r+0x4ca>
 8003944:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003946:	9d00      	ldr	r5, [sp, #0]
 8003948:	ea6f 0b03 	mvn.w	fp, r3
 800394c:	f04f 0800 	mov.w	r8, #0
 8003950:	4631      	mov	r1, r6
 8003952:	4620      	mov	r0, r4
 8003954:	f000 fa7e 	bl	8003e54 <_Bfree>
 8003958:	2f00      	cmp	r7, #0
 800395a:	f43f aeab 	beq.w	80036b4 <_dtoa_r+0x6c4>
 800395e:	f1b8 0f00 	cmp.w	r8, #0
 8003962:	d005      	beq.n	8003970 <_dtoa_r+0x980>
 8003964:	45b8      	cmp	r8, r7
 8003966:	d003      	beq.n	8003970 <_dtoa_r+0x980>
 8003968:	4641      	mov	r1, r8
 800396a:	4620      	mov	r0, r4
 800396c:	f000 fa72 	bl	8003e54 <_Bfree>
 8003970:	4639      	mov	r1, r7
 8003972:	4620      	mov	r0, r4
 8003974:	f000 fa6e 	bl	8003e54 <_Bfree>
 8003978:	e69c      	b.n	80036b4 <_dtoa_r+0x6c4>
 800397a:	2600      	movs	r6, #0
 800397c:	4637      	mov	r7, r6
 800397e:	e7e1      	b.n	8003944 <_dtoa_r+0x954>
 8003980:	46bb      	mov	fp, r7
 8003982:	4637      	mov	r7, r6
 8003984:	e599      	b.n	80034ba <_dtoa_r+0x4ca>
 8003986:	bf00      	nop
 8003988:	40240000 	.word	0x40240000
 800398c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800398e:	2b00      	cmp	r3, #0
 8003990:	f000 80c8 	beq.w	8003b24 <_dtoa_r+0xb34>
 8003994:	9b04      	ldr	r3, [sp, #16]
 8003996:	9301      	str	r3, [sp, #4]
 8003998:	2d00      	cmp	r5, #0
 800399a:	dd05      	ble.n	80039a8 <_dtoa_r+0x9b8>
 800399c:	4639      	mov	r1, r7
 800399e:	462a      	mov	r2, r5
 80039a0:	4620      	mov	r0, r4
 80039a2:	f000 fc71 	bl	8004288 <__lshift>
 80039a6:	4607      	mov	r7, r0
 80039a8:	f1b8 0f00 	cmp.w	r8, #0
 80039ac:	d05b      	beq.n	8003a66 <_dtoa_r+0xa76>
 80039ae:	6879      	ldr	r1, [r7, #4]
 80039b0:	4620      	mov	r0, r4
 80039b2:	f000 fa0f 	bl	8003dd4 <_Balloc>
 80039b6:	4605      	mov	r5, r0
 80039b8:	b928      	cbnz	r0, 80039c6 <_dtoa_r+0x9d6>
 80039ba:	4b83      	ldr	r3, [pc, #524]	; (8003bc8 <_dtoa_r+0xbd8>)
 80039bc:	4602      	mov	r2, r0
 80039be:	f240 21ef 	movw	r1, #751	; 0x2ef
 80039c2:	f7ff bb2e 	b.w	8003022 <_dtoa_r+0x32>
 80039c6:	693a      	ldr	r2, [r7, #16]
 80039c8:	3202      	adds	r2, #2
 80039ca:	0092      	lsls	r2, r2, #2
 80039cc:	f107 010c 	add.w	r1, r7, #12
 80039d0:	300c      	adds	r0, #12
 80039d2:	f001 ff85 	bl	80058e0 <memcpy>
 80039d6:	2201      	movs	r2, #1
 80039d8:	4629      	mov	r1, r5
 80039da:	4620      	mov	r0, r4
 80039dc:	f000 fc54 	bl	8004288 <__lshift>
 80039e0:	9b00      	ldr	r3, [sp, #0]
 80039e2:	3301      	adds	r3, #1
 80039e4:	9304      	str	r3, [sp, #16]
 80039e6:	e9dd 2300 	ldrd	r2, r3, [sp]
 80039ea:	4413      	add	r3, r2
 80039ec:	9308      	str	r3, [sp, #32]
 80039ee:	9b02      	ldr	r3, [sp, #8]
 80039f0:	f003 0301 	and.w	r3, r3, #1
 80039f4:	46b8      	mov	r8, r7
 80039f6:	9306      	str	r3, [sp, #24]
 80039f8:	4607      	mov	r7, r0
 80039fa:	9b04      	ldr	r3, [sp, #16]
 80039fc:	4631      	mov	r1, r6
 80039fe:	3b01      	subs	r3, #1
 8003a00:	4650      	mov	r0, sl
 8003a02:	9301      	str	r3, [sp, #4]
 8003a04:	f7ff fa6c 	bl	8002ee0 <quorem>
 8003a08:	4641      	mov	r1, r8
 8003a0a:	9002      	str	r0, [sp, #8]
 8003a0c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003a10:	4650      	mov	r0, sl
 8003a12:	f000 fca5 	bl	8004360 <__mcmp>
 8003a16:	463a      	mov	r2, r7
 8003a18:	9005      	str	r0, [sp, #20]
 8003a1a:	4631      	mov	r1, r6
 8003a1c:	4620      	mov	r0, r4
 8003a1e:	f000 fcbb 	bl	8004398 <__mdiff>
 8003a22:	68c2      	ldr	r2, [r0, #12]
 8003a24:	4605      	mov	r5, r0
 8003a26:	bb02      	cbnz	r2, 8003a6a <_dtoa_r+0xa7a>
 8003a28:	4601      	mov	r1, r0
 8003a2a:	4650      	mov	r0, sl
 8003a2c:	f000 fc98 	bl	8004360 <__mcmp>
 8003a30:	4602      	mov	r2, r0
 8003a32:	4629      	mov	r1, r5
 8003a34:	4620      	mov	r0, r4
 8003a36:	9209      	str	r2, [sp, #36]	; 0x24
 8003a38:	f000 fa0c 	bl	8003e54 <_Bfree>
 8003a3c:	9b07      	ldr	r3, [sp, #28]
 8003a3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003a40:	9d04      	ldr	r5, [sp, #16]
 8003a42:	ea43 0102 	orr.w	r1, r3, r2
 8003a46:	9b06      	ldr	r3, [sp, #24]
 8003a48:	4319      	orrs	r1, r3
 8003a4a:	d110      	bne.n	8003a6e <_dtoa_r+0xa7e>
 8003a4c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003a50:	d029      	beq.n	8003aa6 <_dtoa_r+0xab6>
 8003a52:	9b05      	ldr	r3, [sp, #20]
 8003a54:	2b00      	cmp	r3, #0
 8003a56:	dd02      	ble.n	8003a5e <_dtoa_r+0xa6e>
 8003a58:	9b02      	ldr	r3, [sp, #8]
 8003a5a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8003a5e:	9b01      	ldr	r3, [sp, #4]
 8003a60:	f883 9000 	strb.w	r9, [r3]
 8003a64:	e774      	b.n	8003950 <_dtoa_r+0x960>
 8003a66:	4638      	mov	r0, r7
 8003a68:	e7ba      	b.n	80039e0 <_dtoa_r+0x9f0>
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	e7e1      	b.n	8003a32 <_dtoa_r+0xa42>
 8003a6e:	9b05      	ldr	r3, [sp, #20]
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	db04      	blt.n	8003a7e <_dtoa_r+0xa8e>
 8003a74:	9907      	ldr	r1, [sp, #28]
 8003a76:	430b      	orrs	r3, r1
 8003a78:	9906      	ldr	r1, [sp, #24]
 8003a7a:	430b      	orrs	r3, r1
 8003a7c:	d120      	bne.n	8003ac0 <_dtoa_r+0xad0>
 8003a7e:	2a00      	cmp	r2, #0
 8003a80:	dded      	ble.n	8003a5e <_dtoa_r+0xa6e>
 8003a82:	4651      	mov	r1, sl
 8003a84:	2201      	movs	r2, #1
 8003a86:	4620      	mov	r0, r4
 8003a88:	f000 fbfe 	bl	8004288 <__lshift>
 8003a8c:	4631      	mov	r1, r6
 8003a8e:	4682      	mov	sl, r0
 8003a90:	f000 fc66 	bl	8004360 <__mcmp>
 8003a94:	2800      	cmp	r0, #0
 8003a96:	dc03      	bgt.n	8003aa0 <_dtoa_r+0xab0>
 8003a98:	d1e1      	bne.n	8003a5e <_dtoa_r+0xa6e>
 8003a9a:	f019 0f01 	tst.w	r9, #1
 8003a9e:	d0de      	beq.n	8003a5e <_dtoa_r+0xa6e>
 8003aa0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003aa4:	d1d8      	bne.n	8003a58 <_dtoa_r+0xa68>
 8003aa6:	9a01      	ldr	r2, [sp, #4]
 8003aa8:	2339      	movs	r3, #57	; 0x39
 8003aaa:	7013      	strb	r3, [r2, #0]
 8003aac:	462b      	mov	r3, r5
 8003aae:	461d      	mov	r5, r3
 8003ab0:	3b01      	subs	r3, #1
 8003ab2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003ab6:	2a39      	cmp	r2, #57	; 0x39
 8003ab8:	d06c      	beq.n	8003b94 <_dtoa_r+0xba4>
 8003aba:	3201      	adds	r2, #1
 8003abc:	701a      	strb	r2, [r3, #0]
 8003abe:	e747      	b.n	8003950 <_dtoa_r+0x960>
 8003ac0:	2a00      	cmp	r2, #0
 8003ac2:	dd07      	ble.n	8003ad4 <_dtoa_r+0xae4>
 8003ac4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003ac8:	d0ed      	beq.n	8003aa6 <_dtoa_r+0xab6>
 8003aca:	9a01      	ldr	r2, [sp, #4]
 8003acc:	f109 0301 	add.w	r3, r9, #1
 8003ad0:	7013      	strb	r3, [r2, #0]
 8003ad2:	e73d      	b.n	8003950 <_dtoa_r+0x960>
 8003ad4:	9b04      	ldr	r3, [sp, #16]
 8003ad6:	9a08      	ldr	r2, [sp, #32]
 8003ad8:	f803 9c01 	strb.w	r9, [r3, #-1]
 8003adc:	4293      	cmp	r3, r2
 8003ade:	d043      	beq.n	8003b68 <_dtoa_r+0xb78>
 8003ae0:	4651      	mov	r1, sl
 8003ae2:	2300      	movs	r3, #0
 8003ae4:	220a      	movs	r2, #10
 8003ae6:	4620      	mov	r0, r4
 8003ae8:	f000 f9d6 	bl	8003e98 <__multadd>
 8003aec:	45b8      	cmp	r8, r7
 8003aee:	4682      	mov	sl, r0
 8003af0:	f04f 0300 	mov.w	r3, #0
 8003af4:	f04f 020a 	mov.w	r2, #10
 8003af8:	4641      	mov	r1, r8
 8003afa:	4620      	mov	r0, r4
 8003afc:	d107      	bne.n	8003b0e <_dtoa_r+0xb1e>
 8003afe:	f000 f9cb 	bl	8003e98 <__multadd>
 8003b02:	4680      	mov	r8, r0
 8003b04:	4607      	mov	r7, r0
 8003b06:	9b04      	ldr	r3, [sp, #16]
 8003b08:	3301      	adds	r3, #1
 8003b0a:	9304      	str	r3, [sp, #16]
 8003b0c:	e775      	b.n	80039fa <_dtoa_r+0xa0a>
 8003b0e:	f000 f9c3 	bl	8003e98 <__multadd>
 8003b12:	4639      	mov	r1, r7
 8003b14:	4680      	mov	r8, r0
 8003b16:	2300      	movs	r3, #0
 8003b18:	220a      	movs	r2, #10
 8003b1a:	4620      	mov	r0, r4
 8003b1c:	f000 f9bc 	bl	8003e98 <__multadd>
 8003b20:	4607      	mov	r7, r0
 8003b22:	e7f0      	b.n	8003b06 <_dtoa_r+0xb16>
 8003b24:	9b04      	ldr	r3, [sp, #16]
 8003b26:	9301      	str	r3, [sp, #4]
 8003b28:	9d00      	ldr	r5, [sp, #0]
 8003b2a:	4631      	mov	r1, r6
 8003b2c:	4650      	mov	r0, sl
 8003b2e:	f7ff f9d7 	bl	8002ee0 <quorem>
 8003b32:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003b36:	9b00      	ldr	r3, [sp, #0]
 8003b38:	f805 9b01 	strb.w	r9, [r5], #1
 8003b3c:	1aea      	subs	r2, r5, r3
 8003b3e:	9b01      	ldr	r3, [sp, #4]
 8003b40:	4293      	cmp	r3, r2
 8003b42:	dd07      	ble.n	8003b54 <_dtoa_r+0xb64>
 8003b44:	4651      	mov	r1, sl
 8003b46:	2300      	movs	r3, #0
 8003b48:	220a      	movs	r2, #10
 8003b4a:	4620      	mov	r0, r4
 8003b4c:	f000 f9a4 	bl	8003e98 <__multadd>
 8003b50:	4682      	mov	sl, r0
 8003b52:	e7ea      	b.n	8003b2a <_dtoa_r+0xb3a>
 8003b54:	9b01      	ldr	r3, [sp, #4]
 8003b56:	2b00      	cmp	r3, #0
 8003b58:	bfc8      	it	gt
 8003b5a:	461d      	movgt	r5, r3
 8003b5c:	9b00      	ldr	r3, [sp, #0]
 8003b5e:	bfd8      	it	le
 8003b60:	2501      	movle	r5, #1
 8003b62:	441d      	add	r5, r3
 8003b64:	f04f 0800 	mov.w	r8, #0
 8003b68:	4651      	mov	r1, sl
 8003b6a:	2201      	movs	r2, #1
 8003b6c:	4620      	mov	r0, r4
 8003b6e:	f000 fb8b 	bl	8004288 <__lshift>
 8003b72:	4631      	mov	r1, r6
 8003b74:	4682      	mov	sl, r0
 8003b76:	f000 fbf3 	bl	8004360 <__mcmp>
 8003b7a:	2800      	cmp	r0, #0
 8003b7c:	dc96      	bgt.n	8003aac <_dtoa_r+0xabc>
 8003b7e:	d102      	bne.n	8003b86 <_dtoa_r+0xb96>
 8003b80:	f019 0f01 	tst.w	r9, #1
 8003b84:	d192      	bne.n	8003aac <_dtoa_r+0xabc>
 8003b86:	462b      	mov	r3, r5
 8003b88:	461d      	mov	r5, r3
 8003b8a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003b8e:	2a30      	cmp	r2, #48	; 0x30
 8003b90:	d0fa      	beq.n	8003b88 <_dtoa_r+0xb98>
 8003b92:	e6dd      	b.n	8003950 <_dtoa_r+0x960>
 8003b94:	9a00      	ldr	r2, [sp, #0]
 8003b96:	429a      	cmp	r2, r3
 8003b98:	d189      	bne.n	8003aae <_dtoa_r+0xabe>
 8003b9a:	f10b 0b01 	add.w	fp, fp, #1
 8003b9e:	2331      	movs	r3, #49	; 0x31
 8003ba0:	e796      	b.n	8003ad0 <_dtoa_r+0xae0>
 8003ba2:	4b0a      	ldr	r3, [pc, #40]	; (8003bcc <_dtoa_r+0xbdc>)
 8003ba4:	f7ff ba99 	b.w	80030da <_dtoa_r+0xea>
 8003ba8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	f47f aa6d 	bne.w	800308a <_dtoa_r+0x9a>
 8003bb0:	4b07      	ldr	r3, [pc, #28]	; (8003bd0 <_dtoa_r+0xbe0>)
 8003bb2:	f7ff ba92 	b.w	80030da <_dtoa_r+0xea>
 8003bb6:	9b01      	ldr	r3, [sp, #4]
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	dcb5      	bgt.n	8003b28 <_dtoa_r+0xb38>
 8003bbc:	9b07      	ldr	r3, [sp, #28]
 8003bbe:	2b02      	cmp	r3, #2
 8003bc0:	f73f aeb1 	bgt.w	8003926 <_dtoa_r+0x936>
 8003bc4:	e7b0      	b.n	8003b28 <_dtoa_r+0xb38>
 8003bc6:	bf00      	nop
 8003bc8:	08006a38 	.word	0x08006a38
 8003bcc:	08006993 	.word	0x08006993
 8003bd0:	080069bc 	.word	0x080069bc

08003bd4 <_free_r>:
 8003bd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003bd6:	2900      	cmp	r1, #0
 8003bd8:	d044      	beq.n	8003c64 <_free_r+0x90>
 8003bda:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003bde:	9001      	str	r0, [sp, #4]
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	f1a1 0404 	sub.w	r4, r1, #4
 8003be6:	bfb8      	it	lt
 8003be8:	18e4      	addlt	r4, r4, r3
 8003bea:	f000 f8e7 	bl	8003dbc <__malloc_lock>
 8003bee:	4a1e      	ldr	r2, [pc, #120]	; (8003c68 <_free_r+0x94>)
 8003bf0:	9801      	ldr	r0, [sp, #4]
 8003bf2:	6813      	ldr	r3, [r2, #0]
 8003bf4:	b933      	cbnz	r3, 8003c04 <_free_r+0x30>
 8003bf6:	6063      	str	r3, [r4, #4]
 8003bf8:	6014      	str	r4, [r2, #0]
 8003bfa:	b003      	add	sp, #12
 8003bfc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003c00:	f000 b8e2 	b.w	8003dc8 <__malloc_unlock>
 8003c04:	42a3      	cmp	r3, r4
 8003c06:	d908      	bls.n	8003c1a <_free_r+0x46>
 8003c08:	6825      	ldr	r5, [r4, #0]
 8003c0a:	1961      	adds	r1, r4, r5
 8003c0c:	428b      	cmp	r3, r1
 8003c0e:	bf01      	itttt	eq
 8003c10:	6819      	ldreq	r1, [r3, #0]
 8003c12:	685b      	ldreq	r3, [r3, #4]
 8003c14:	1949      	addeq	r1, r1, r5
 8003c16:	6021      	streq	r1, [r4, #0]
 8003c18:	e7ed      	b.n	8003bf6 <_free_r+0x22>
 8003c1a:	461a      	mov	r2, r3
 8003c1c:	685b      	ldr	r3, [r3, #4]
 8003c1e:	b10b      	cbz	r3, 8003c24 <_free_r+0x50>
 8003c20:	42a3      	cmp	r3, r4
 8003c22:	d9fa      	bls.n	8003c1a <_free_r+0x46>
 8003c24:	6811      	ldr	r1, [r2, #0]
 8003c26:	1855      	adds	r5, r2, r1
 8003c28:	42a5      	cmp	r5, r4
 8003c2a:	d10b      	bne.n	8003c44 <_free_r+0x70>
 8003c2c:	6824      	ldr	r4, [r4, #0]
 8003c2e:	4421      	add	r1, r4
 8003c30:	1854      	adds	r4, r2, r1
 8003c32:	42a3      	cmp	r3, r4
 8003c34:	6011      	str	r1, [r2, #0]
 8003c36:	d1e0      	bne.n	8003bfa <_free_r+0x26>
 8003c38:	681c      	ldr	r4, [r3, #0]
 8003c3a:	685b      	ldr	r3, [r3, #4]
 8003c3c:	6053      	str	r3, [r2, #4]
 8003c3e:	440c      	add	r4, r1
 8003c40:	6014      	str	r4, [r2, #0]
 8003c42:	e7da      	b.n	8003bfa <_free_r+0x26>
 8003c44:	d902      	bls.n	8003c4c <_free_r+0x78>
 8003c46:	230c      	movs	r3, #12
 8003c48:	6003      	str	r3, [r0, #0]
 8003c4a:	e7d6      	b.n	8003bfa <_free_r+0x26>
 8003c4c:	6825      	ldr	r5, [r4, #0]
 8003c4e:	1961      	adds	r1, r4, r5
 8003c50:	428b      	cmp	r3, r1
 8003c52:	bf04      	itt	eq
 8003c54:	6819      	ldreq	r1, [r3, #0]
 8003c56:	685b      	ldreq	r3, [r3, #4]
 8003c58:	6063      	str	r3, [r4, #4]
 8003c5a:	bf04      	itt	eq
 8003c5c:	1949      	addeq	r1, r1, r5
 8003c5e:	6021      	streq	r1, [r4, #0]
 8003c60:	6054      	str	r4, [r2, #4]
 8003c62:	e7ca      	b.n	8003bfa <_free_r+0x26>
 8003c64:	b003      	add	sp, #12
 8003c66:	bd30      	pop	{r4, r5, pc}
 8003c68:	20000748 	.word	0x20000748

08003c6c <malloc>:
 8003c6c:	4b02      	ldr	r3, [pc, #8]	; (8003c78 <malloc+0xc>)
 8003c6e:	4601      	mov	r1, r0
 8003c70:	6818      	ldr	r0, [r3, #0]
 8003c72:	f000 b823 	b.w	8003cbc <_malloc_r>
 8003c76:	bf00      	nop
 8003c78:	20000060 	.word	0x20000060

08003c7c <sbrk_aligned>:
 8003c7c:	b570      	push	{r4, r5, r6, lr}
 8003c7e:	4e0e      	ldr	r6, [pc, #56]	; (8003cb8 <sbrk_aligned+0x3c>)
 8003c80:	460c      	mov	r4, r1
 8003c82:	6831      	ldr	r1, [r6, #0]
 8003c84:	4605      	mov	r5, r0
 8003c86:	b911      	cbnz	r1, 8003c8e <sbrk_aligned+0x12>
 8003c88:	f001 fe1a 	bl	80058c0 <_sbrk_r>
 8003c8c:	6030      	str	r0, [r6, #0]
 8003c8e:	4621      	mov	r1, r4
 8003c90:	4628      	mov	r0, r5
 8003c92:	f001 fe15 	bl	80058c0 <_sbrk_r>
 8003c96:	1c43      	adds	r3, r0, #1
 8003c98:	d00a      	beq.n	8003cb0 <sbrk_aligned+0x34>
 8003c9a:	1cc4      	adds	r4, r0, #3
 8003c9c:	f024 0403 	bic.w	r4, r4, #3
 8003ca0:	42a0      	cmp	r0, r4
 8003ca2:	d007      	beq.n	8003cb4 <sbrk_aligned+0x38>
 8003ca4:	1a21      	subs	r1, r4, r0
 8003ca6:	4628      	mov	r0, r5
 8003ca8:	f001 fe0a 	bl	80058c0 <_sbrk_r>
 8003cac:	3001      	adds	r0, #1
 8003cae:	d101      	bne.n	8003cb4 <sbrk_aligned+0x38>
 8003cb0:	f04f 34ff 	mov.w	r4, #4294967295
 8003cb4:	4620      	mov	r0, r4
 8003cb6:	bd70      	pop	{r4, r5, r6, pc}
 8003cb8:	2000074c 	.word	0x2000074c

08003cbc <_malloc_r>:
 8003cbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003cc0:	1ccd      	adds	r5, r1, #3
 8003cc2:	f025 0503 	bic.w	r5, r5, #3
 8003cc6:	3508      	adds	r5, #8
 8003cc8:	2d0c      	cmp	r5, #12
 8003cca:	bf38      	it	cc
 8003ccc:	250c      	movcc	r5, #12
 8003cce:	2d00      	cmp	r5, #0
 8003cd0:	4607      	mov	r7, r0
 8003cd2:	db01      	blt.n	8003cd8 <_malloc_r+0x1c>
 8003cd4:	42a9      	cmp	r1, r5
 8003cd6:	d905      	bls.n	8003ce4 <_malloc_r+0x28>
 8003cd8:	230c      	movs	r3, #12
 8003cda:	603b      	str	r3, [r7, #0]
 8003cdc:	2600      	movs	r6, #0
 8003cde:	4630      	mov	r0, r6
 8003ce0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003ce4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003db8 <_malloc_r+0xfc>
 8003ce8:	f000 f868 	bl	8003dbc <__malloc_lock>
 8003cec:	f8d8 3000 	ldr.w	r3, [r8]
 8003cf0:	461c      	mov	r4, r3
 8003cf2:	bb5c      	cbnz	r4, 8003d4c <_malloc_r+0x90>
 8003cf4:	4629      	mov	r1, r5
 8003cf6:	4638      	mov	r0, r7
 8003cf8:	f7ff ffc0 	bl	8003c7c <sbrk_aligned>
 8003cfc:	1c43      	adds	r3, r0, #1
 8003cfe:	4604      	mov	r4, r0
 8003d00:	d155      	bne.n	8003dae <_malloc_r+0xf2>
 8003d02:	f8d8 4000 	ldr.w	r4, [r8]
 8003d06:	4626      	mov	r6, r4
 8003d08:	2e00      	cmp	r6, #0
 8003d0a:	d145      	bne.n	8003d98 <_malloc_r+0xdc>
 8003d0c:	2c00      	cmp	r4, #0
 8003d0e:	d048      	beq.n	8003da2 <_malloc_r+0xe6>
 8003d10:	6823      	ldr	r3, [r4, #0]
 8003d12:	4631      	mov	r1, r6
 8003d14:	4638      	mov	r0, r7
 8003d16:	eb04 0903 	add.w	r9, r4, r3
 8003d1a:	f001 fdd1 	bl	80058c0 <_sbrk_r>
 8003d1e:	4581      	cmp	r9, r0
 8003d20:	d13f      	bne.n	8003da2 <_malloc_r+0xe6>
 8003d22:	6821      	ldr	r1, [r4, #0]
 8003d24:	1a6d      	subs	r5, r5, r1
 8003d26:	4629      	mov	r1, r5
 8003d28:	4638      	mov	r0, r7
 8003d2a:	f7ff ffa7 	bl	8003c7c <sbrk_aligned>
 8003d2e:	3001      	adds	r0, #1
 8003d30:	d037      	beq.n	8003da2 <_malloc_r+0xe6>
 8003d32:	6823      	ldr	r3, [r4, #0]
 8003d34:	442b      	add	r3, r5
 8003d36:	6023      	str	r3, [r4, #0]
 8003d38:	f8d8 3000 	ldr.w	r3, [r8]
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	d038      	beq.n	8003db2 <_malloc_r+0xf6>
 8003d40:	685a      	ldr	r2, [r3, #4]
 8003d42:	42a2      	cmp	r2, r4
 8003d44:	d12b      	bne.n	8003d9e <_malloc_r+0xe2>
 8003d46:	2200      	movs	r2, #0
 8003d48:	605a      	str	r2, [r3, #4]
 8003d4a:	e00f      	b.n	8003d6c <_malloc_r+0xb0>
 8003d4c:	6822      	ldr	r2, [r4, #0]
 8003d4e:	1b52      	subs	r2, r2, r5
 8003d50:	d41f      	bmi.n	8003d92 <_malloc_r+0xd6>
 8003d52:	2a0b      	cmp	r2, #11
 8003d54:	d917      	bls.n	8003d86 <_malloc_r+0xca>
 8003d56:	1961      	adds	r1, r4, r5
 8003d58:	42a3      	cmp	r3, r4
 8003d5a:	6025      	str	r5, [r4, #0]
 8003d5c:	bf18      	it	ne
 8003d5e:	6059      	strne	r1, [r3, #4]
 8003d60:	6863      	ldr	r3, [r4, #4]
 8003d62:	bf08      	it	eq
 8003d64:	f8c8 1000 	streq.w	r1, [r8]
 8003d68:	5162      	str	r2, [r4, r5]
 8003d6a:	604b      	str	r3, [r1, #4]
 8003d6c:	4638      	mov	r0, r7
 8003d6e:	f104 060b 	add.w	r6, r4, #11
 8003d72:	f000 f829 	bl	8003dc8 <__malloc_unlock>
 8003d76:	f026 0607 	bic.w	r6, r6, #7
 8003d7a:	1d23      	adds	r3, r4, #4
 8003d7c:	1af2      	subs	r2, r6, r3
 8003d7e:	d0ae      	beq.n	8003cde <_malloc_r+0x22>
 8003d80:	1b9b      	subs	r3, r3, r6
 8003d82:	50a3      	str	r3, [r4, r2]
 8003d84:	e7ab      	b.n	8003cde <_malloc_r+0x22>
 8003d86:	42a3      	cmp	r3, r4
 8003d88:	6862      	ldr	r2, [r4, #4]
 8003d8a:	d1dd      	bne.n	8003d48 <_malloc_r+0x8c>
 8003d8c:	f8c8 2000 	str.w	r2, [r8]
 8003d90:	e7ec      	b.n	8003d6c <_malloc_r+0xb0>
 8003d92:	4623      	mov	r3, r4
 8003d94:	6864      	ldr	r4, [r4, #4]
 8003d96:	e7ac      	b.n	8003cf2 <_malloc_r+0x36>
 8003d98:	4634      	mov	r4, r6
 8003d9a:	6876      	ldr	r6, [r6, #4]
 8003d9c:	e7b4      	b.n	8003d08 <_malloc_r+0x4c>
 8003d9e:	4613      	mov	r3, r2
 8003da0:	e7cc      	b.n	8003d3c <_malloc_r+0x80>
 8003da2:	230c      	movs	r3, #12
 8003da4:	603b      	str	r3, [r7, #0]
 8003da6:	4638      	mov	r0, r7
 8003da8:	f000 f80e 	bl	8003dc8 <__malloc_unlock>
 8003dac:	e797      	b.n	8003cde <_malloc_r+0x22>
 8003dae:	6025      	str	r5, [r4, #0]
 8003db0:	e7dc      	b.n	8003d6c <_malloc_r+0xb0>
 8003db2:	605b      	str	r3, [r3, #4]
 8003db4:	deff      	udf	#255	; 0xff
 8003db6:	bf00      	nop
 8003db8:	20000748 	.word	0x20000748

08003dbc <__malloc_lock>:
 8003dbc:	4801      	ldr	r0, [pc, #4]	; (8003dc4 <__malloc_lock+0x8>)
 8003dbe:	f7ff b886 	b.w	8002ece <__retarget_lock_acquire_recursive>
 8003dc2:	bf00      	nop
 8003dc4:	20000744 	.word	0x20000744

08003dc8 <__malloc_unlock>:
 8003dc8:	4801      	ldr	r0, [pc, #4]	; (8003dd0 <__malloc_unlock+0x8>)
 8003dca:	f7ff b881 	b.w	8002ed0 <__retarget_lock_release_recursive>
 8003dce:	bf00      	nop
 8003dd0:	20000744 	.word	0x20000744

08003dd4 <_Balloc>:
 8003dd4:	b570      	push	{r4, r5, r6, lr}
 8003dd6:	69c6      	ldr	r6, [r0, #28]
 8003dd8:	4604      	mov	r4, r0
 8003dda:	460d      	mov	r5, r1
 8003ddc:	b976      	cbnz	r6, 8003dfc <_Balloc+0x28>
 8003dde:	2010      	movs	r0, #16
 8003de0:	f7ff ff44 	bl	8003c6c <malloc>
 8003de4:	4602      	mov	r2, r0
 8003de6:	61e0      	str	r0, [r4, #28]
 8003de8:	b920      	cbnz	r0, 8003df4 <_Balloc+0x20>
 8003dea:	4b18      	ldr	r3, [pc, #96]	; (8003e4c <_Balloc+0x78>)
 8003dec:	4818      	ldr	r0, [pc, #96]	; (8003e50 <_Balloc+0x7c>)
 8003dee:	216b      	movs	r1, #107	; 0x6b
 8003df0:	f001 fd8e 	bl	8005910 <__assert_func>
 8003df4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003df8:	6006      	str	r6, [r0, #0]
 8003dfa:	60c6      	str	r6, [r0, #12]
 8003dfc:	69e6      	ldr	r6, [r4, #28]
 8003dfe:	68f3      	ldr	r3, [r6, #12]
 8003e00:	b183      	cbz	r3, 8003e24 <_Balloc+0x50>
 8003e02:	69e3      	ldr	r3, [r4, #28]
 8003e04:	68db      	ldr	r3, [r3, #12]
 8003e06:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003e0a:	b9b8      	cbnz	r0, 8003e3c <_Balloc+0x68>
 8003e0c:	2101      	movs	r1, #1
 8003e0e:	fa01 f605 	lsl.w	r6, r1, r5
 8003e12:	1d72      	adds	r2, r6, #5
 8003e14:	0092      	lsls	r2, r2, #2
 8003e16:	4620      	mov	r0, r4
 8003e18:	f001 fd98 	bl	800594c <_calloc_r>
 8003e1c:	b160      	cbz	r0, 8003e38 <_Balloc+0x64>
 8003e1e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003e22:	e00e      	b.n	8003e42 <_Balloc+0x6e>
 8003e24:	2221      	movs	r2, #33	; 0x21
 8003e26:	2104      	movs	r1, #4
 8003e28:	4620      	mov	r0, r4
 8003e2a:	f001 fd8f 	bl	800594c <_calloc_r>
 8003e2e:	69e3      	ldr	r3, [r4, #28]
 8003e30:	60f0      	str	r0, [r6, #12]
 8003e32:	68db      	ldr	r3, [r3, #12]
 8003e34:	2b00      	cmp	r3, #0
 8003e36:	d1e4      	bne.n	8003e02 <_Balloc+0x2e>
 8003e38:	2000      	movs	r0, #0
 8003e3a:	bd70      	pop	{r4, r5, r6, pc}
 8003e3c:	6802      	ldr	r2, [r0, #0]
 8003e3e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003e42:	2300      	movs	r3, #0
 8003e44:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003e48:	e7f7      	b.n	8003e3a <_Balloc+0x66>
 8003e4a:	bf00      	nop
 8003e4c:	080069c9 	.word	0x080069c9
 8003e50:	08006a49 	.word	0x08006a49

08003e54 <_Bfree>:
 8003e54:	b570      	push	{r4, r5, r6, lr}
 8003e56:	69c6      	ldr	r6, [r0, #28]
 8003e58:	4605      	mov	r5, r0
 8003e5a:	460c      	mov	r4, r1
 8003e5c:	b976      	cbnz	r6, 8003e7c <_Bfree+0x28>
 8003e5e:	2010      	movs	r0, #16
 8003e60:	f7ff ff04 	bl	8003c6c <malloc>
 8003e64:	4602      	mov	r2, r0
 8003e66:	61e8      	str	r0, [r5, #28]
 8003e68:	b920      	cbnz	r0, 8003e74 <_Bfree+0x20>
 8003e6a:	4b09      	ldr	r3, [pc, #36]	; (8003e90 <_Bfree+0x3c>)
 8003e6c:	4809      	ldr	r0, [pc, #36]	; (8003e94 <_Bfree+0x40>)
 8003e6e:	218f      	movs	r1, #143	; 0x8f
 8003e70:	f001 fd4e 	bl	8005910 <__assert_func>
 8003e74:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003e78:	6006      	str	r6, [r0, #0]
 8003e7a:	60c6      	str	r6, [r0, #12]
 8003e7c:	b13c      	cbz	r4, 8003e8e <_Bfree+0x3a>
 8003e7e:	69eb      	ldr	r3, [r5, #28]
 8003e80:	6862      	ldr	r2, [r4, #4]
 8003e82:	68db      	ldr	r3, [r3, #12]
 8003e84:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003e88:	6021      	str	r1, [r4, #0]
 8003e8a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003e8e:	bd70      	pop	{r4, r5, r6, pc}
 8003e90:	080069c9 	.word	0x080069c9
 8003e94:	08006a49 	.word	0x08006a49

08003e98 <__multadd>:
 8003e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e9c:	690d      	ldr	r5, [r1, #16]
 8003e9e:	4607      	mov	r7, r0
 8003ea0:	460c      	mov	r4, r1
 8003ea2:	461e      	mov	r6, r3
 8003ea4:	f101 0c14 	add.w	ip, r1, #20
 8003ea8:	2000      	movs	r0, #0
 8003eaa:	f8dc 3000 	ldr.w	r3, [ip]
 8003eae:	b299      	uxth	r1, r3
 8003eb0:	fb02 6101 	mla	r1, r2, r1, r6
 8003eb4:	0c1e      	lsrs	r6, r3, #16
 8003eb6:	0c0b      	lsrs	r3, r1, #16
 8003eb8:	fb02 3306 	mla	r3, r2, r6, r3
 8003ebc:	b289      	uxth	r1, r1
 8003ebe:	3001      	adds	r0, #1
 8003ec0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003ec4:	4285      	cmp	r5, r0
 8003ec6:	f84c 1b04 	str.w	r1, [ip], #4
 8003eca:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003ece:	dcec      	bgt.n	8003eaa <__multadd+0x12>
 8003ed0:	b30e      	cbz	r6, 8003f16 <__multadd+0x7e>
 8003ed2:	68a3      	ldr	r3, [r4, #8]
 8003ed4:	42ab      	cmp	r3, r5
 8003ed6:	dc19      	bgt.n	8003f0c <__multadd+0x74>
 8003ed8:	6861      	ldr	r1, [r4, #4]
 8003eda:	4638      	mov	r0, r7
 8003edc:	3101      	adds	r1, #1
 8003ede:	f7ff ff79 	bl	8003dd4 <_Balloc>
 8003ee2:	4680      	mov	r8, r0
 8003ee4:	b928      	cbnz	r0, 8003ef2 <__multadd+0x5a>
 8003ee6:	4602      	mov	r2, r0
 8003ee8:	4b0c      	ldr	r3, [pc, #48]	; (8003f1c <__multadd+0x84>)
 8003eea:	480d      	ldr	r0, [pc, #52]	; (8003f20 <__multadd+0x88>)
 8003eec:	21ba      	movs	r1, #186	; 0xba
 8003eee:	f001 fd0f 	bl	8005910 <__assert_func>
 8003ef2:	6922      	ldr	r2, [r4, #16]
 8003ef4:	3202      	adds	r2, #2
 8003ef6:	f104 010c 	add.w	r1, r4, #12
 8003efa:	0092      	lsls	r2, r2, #2
 8003efc:	300c      	adds	r0, #12
 8003efe:	f001 fcef 	bl	80058e0 <memcpy>
 8003f02:	4621      	mov	r1, r4
 8003f04:	4638      	mov	r0, r7
 8003f06:	f7ff ffa5 	bl	8003e54 <_Bfree>
 8003f0a:	4644      	mov	r4, r8
 8003f0c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003f10:	3501      	adds	r5, #1
 8003f12:	615e      	str	r6, [r3, #20]
 8003f14:	6125      	str	r5, [r4, #16]
 8003f16:	4620      	mov	r0, r4
 8003f18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f1c:	08006a38 	.word	0x08006a38
 8003f20:	08006a49 	.word	0x08006a49

08003f24 <__s2b>:
 8003f24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f28:	460c      	mov	r4, r1
 8003f2a:	4615      	mov	r5, r2
 8003f2c:	461f      	mov	r7, r3
 8003f2e:	2209      	movs	r2, #9
 8003f30:	3308      	adds	r3, #8
 8003f32:	4606      	mov	r6, r0
 8003f34:	fb93 f3f2 	sdiv	r3, r3, r2
 8003f38:	2100      	movs	r1, #0
 8003f3a:	2201      	movs	r2, #1
 8003f3c:	429a      	cmp	r2, r3
 8003f3e:	db09      	blt.n	8003f54 <__s2b+0x30>
 8003f40:	4630      	mov	r0, r6
 8003f42:	f7ff ff47 	bl	8003dd4 <_Balloc>
 8003f46:	b940      	cbnz	r0, 8003f5a <__s2b+0x36>
 8003f48:	4602      	mov	r2, r0
 8003f4a:	4b19      	ldr	r3, [pc, #100]	; (8003fb0 <__s2b+0x8c>)
 8003f4c:	4819      	ldr	r0, [pc, #100]	; (8003fb4 <__s2b+0x90>)
 8003f4e:	21d3      	movs	r1, #211	; 0xd3
 8003f50:	f001 fcde 	bl	8005910 <__assert_func>
 8003f54:	0052      	lsls	r2, r2, #1
 8003f56:	3101      	adds	r1, #1
 8003f58:	e7f0      	b.n	8003f3c <__s2b+0x18>
 8003f5a:	9b08      	ldr	r3, [sp, #32]
 8003f5c:	6143      	str	r3, [r0, #20]
 8003f5e:	2d09      	cmp	r5, #9
 8003f60:	f04f 0301 	mov.w	r3, #1
 8003f64:	6103      	str	r3, [r0, #16]
 8003f66:	dd16      	ble.n	8003f96 <__s2b+0x72>
 8003f68:	f104 0909 	add.w	r9, r4, #9
 8003f6c:	46c8      	mov	r8, r9
 8003f6e:	442c      	add	r4, r5
 8003f70:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003f74:	4601      	mov	r1, r0
 8003f76:	3b30      	subs	r3, #48	; 0x30
 8003f78:	220a      	movs	r2, #10
 8003f7a:	4630      	mov	r0, r6
 8003f7c:	f7ff ff8c 	bl	8003e98 <__multadd>
 8003f80:	45a0      	cmp	r8, r4
 8003f82:	d1f5      	bne.n	8003f70 <__s2b+0x4c>
 8003f84:	f1a5 0408 	sub.w	r4, r5, #8
 8003f88:	444c      	add	r4, r9
 8003f8a:	1b2d      	subs	r5, r5, r4
 8003f8c:	1963      	adds	r3, r4, r5
 8003f8e:	42bb      	cmp	r3, r7
 8003f90:	db04      	blt.n	8003f9c <__s2b+0x78>
 8003f92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f96:	340a      	adds	r4, #10
 8003f98:	2509      	movs	r5, #9
 8003f9a:	e7f6      	b.n	8003f8a <__s2b+0x66>
 8003f9c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003fa0:	4601      	mov	r1, r0
 8003fa2:	3b30      	subs	r3, #48	; 0x30
 8003fa4:	220a      	movs	r2, #10
 8003fa6:	4630      	mov	r0, r6
 8003fa8:	f7ff ff76 	bl	8003e98 <__multadd>
 8003fac:	e7ee      	b.n	8003f8c <__s2b+0x68>
 8003fae:	bf00      	nop
 8003fb0:	08006a38 	.word	0x08006a38
 8003fb4:	08006a49 	.word	0x08006a49

08003fb8 <__hi0bits>:
 8003fb8:	0c03      	lsrs	r3, r0, #16
 8003fba:	041b      	lsls	r3, r3, #16
 8003fbc:	b9d3      	cbnz	r3, 8003ff4 <__hi0bits+0x3c>
 8003fbe:	0400      	lsls	r0, r0, #16
 8003fc0:	2310      	movs	r3, #16
 8003fc2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8003fc6:	bf04      	itt	eq
 8003fc8:	0200      	lsleq	r0, r0, #8
 8003fca:	3308      	addeq	r3, #8
 8003fcc:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003fd0:	bf04      	itt	eq
 8003fd2:	0100      	lsleq	r0, r0, #4
 8003fd4:	3304      	addeq	r3, #4
 8003fd6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8003fda:	bf04      	itt	eq
 8003fdc:	0080      	lsleq	r0, r0, #2
 8003fde:	3302      	addeq	r3, #2
 8003fe0:	2800      	cmp	r0, #0
 8003fe2:	db05      	blt.n	8003ff0 <__hi0bits+0x38>
 8003fe4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003fe8:	f103 0301 	add.w	r3, r3, #1
 8003fec:	bf08      	it	eq
 8003fee:	2320      	moveq	r3, #32
 8003ff0:	4618      	mov	r0, r3
 8003ff2:	4770      	bx	lr
 8003ff4:	2300      	movs	r3, #0
 8003ff6:	e7e4      	b.n	8003fc2 <__hi0bits+0xa>

08003ff8 <__lo0bits>:
 8003ff8:	6803      	ldr	r3, [r0, #0]
 8003ffa:	f013 0207 	ands.w	r2, r3, #7
 8003ffe:	d00c      	beq.n	800401a <__lo0bits+0x22>
 8004000:	07d9      	lsls	r1, r3, #31
 8004002:	d422      	bmi.n	800404a <__lo0bits+0x52>
 8004004:	079a      	lsls	r2, r3, #30
 8004006:	bf49      	itett	mi
 8004008:	085b      	lsrmi	r3, r3, #1
 800400a:	089b      	lsrpl	r3, r3, #2
 800400c:	6003      	strmi	r3, [r0, #0]
 800400e:	2201      	movmi	r2, #1
 8004010:	bf5c      	itt	pl
 8004012:	6003      	strpl	r3, [r0, #0]
 8004014:	2202      	movpl	r2, #2
 8004016:	4610      	mov	r0, r2
 8004018:	4770      	bx	lr
 800401a:	b299      	uxth	r1, r3
 800401c:	b909      	cbnz	r1, 8004022 <__lo0bits+0x2a>
 800401e:	0c1b      	lsrs	r3, r3, #16
 8004020:	2210      	movs	r2, #16
 8004022:	b2d9      	uxtb	r1, r3
 8004024:	b909      	cbnz	r1, 800402a <__lo0bits+0x32>
 8004026:	3208      	adds	r2, #8
 8004028:	0a1b      	lsrs	r3, r3, #8
 800402a:	0719      	lsls	r1, r3, #28
 800402c:	bf04      	itt	eq
 800402e:	091b      	lsreq	r3, r3, #4
 8004030:	3204      	addeq	r2, #4
 8004032:	0799      	lsls	r1, r3, #30
 8004034:	bf04      	itt	eq
 8004036:	089b      	lsreq	r3, r3, #2
 8004038:	3202      	addeq	r2, #2
 800403a:	07d9      	lsls	r1, r3, #31
 800403c:	d403      	bmi.n	8004046 <__lo0bits+0x4e>
 800403e:	085b      	lsrs	r3, r3, #1
 8004040:	f102 0201 	add.w	r2, r2, #1
 8004044:	d003      	beq.n	800404e <__lo0bits+0x56>
 8004046:	6003      	str	r3, [r0, #0]
 8004048:	e7e5      	b.n	8004016 <__lo0bits+0x1e>
 800404a:	2200      	movs	r2, #0
 800404c:	e7e3      	b.n	8004016 <__lo0bits+0x1e>
 800404e:	2220      	movs	r2, #32
 8004050:	e7e1      	b.n	8004016 <__lo0bits+0x1e>
	...

08004054 <__i2b>:
 8004054:	b510      	push	{r4, lr}
 8004056:	460c      	mov	r4, r1
 8004058:	2101      	movs	r1, #1
 800405a:	f7ff febb 	bl	8003dd4 <_Balloc>
 800405e:	4602      	mov	r2, r0
 8004060:	b928      	cbnz	r0, 800406e <__i2b+0x1a>
 8004062:	4b05      	ldr	r3, [pc, #20]	; (8004078 <__i2b+0x24>)
 8004064:	4805      	ldr	r0, [pc, #20]	; (800407c <__i2b+0x28>)
 8004066:	f240 1145 	movw	r1, #325	; 0x145
 800406a:	f001 fc51 	bl	8005910 <__assert_func>
 800406e:	2301      	movs	r3, #1
 8004070:	6144      	str	r4, [r0, #20]
 8004072:	6103      	str	r3, [r0, #16]
 8004074:	bd10      	pop	{r4, pc}
 8004076:	bf00      	nop
 8004078:	08006a38 	.word	0x08006a38
 800407c:	08006a49 	.word	0x08006a49

08004080 <__multiply>:
 8004080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004084:	4691      	mov	r9, r2
 8004086:	690a      	ldr	r2, [r1, #16]
 8004088:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800408c:	429a      	cmp	r2, r3
 800408e:	bfb8      	it	lt
 8004090:	460b      	movlt	r3, r1
 8004092:	460c      	mov	r4, r1
 8004094:	bfbc      	itt	lt
 8004096:	464c      	movlt	r4, r9
 8004098:	4699      	movlt	r9, r3
 800409a:	6927      	ldr	r7, [r4, #16]
 800409c:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80040a0:	68a3      	ldr	r3, [r4, #8]
 80040a2:	6861      	ldr	r1, [r4, #4]
 80040a4:	eb07 060a 	add.w	r6, r7, sl
 80040a8:	42b3      	cmp	r3, r6
 80040aa:	b085      	sub	sp, #20
 80040ac:	bfb8      	it	lt
 80040ae:	3101      	addlt	r1, #1
 80040b0:	f7ff fe90 	bl	8003dd4 <_Balloc>
 80040b4:	b930      	cbnz	r0, 80040c4 <__multiply+0x44>
 80040b6:	4602      	mov	r2, r0
 80040b8:	4b44      	ldr	r3, [pc, #272]	; (80041cc <__multiply+0x14c>)
 80040ba:	4845      	ldr	r0, [pc, #276]	; (80041d0 <__multiply+0x150>)
 80040bc:	f44f 71b1 	mov.w	r1, #354	; 0x162
 80040c0:	f001 fc26 	bl	8005910 <__assert_func>
 80040c4:	f100 0514 	add.w	r5, r0, #20
 80040c8:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80040cc:	462b      	mov	r3, r5
 80040ce:	2200      	movs	r2, #0
 80040d0:	4543      	cmp	r3, r8
 80040d2:	d321      	bcc.n	8004118 <__multiply+0x98>
 80040d4:	f104 0314 	add.w	r3, r4, #20
 80040d8:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80040dc:	f109 0314 	add.w	r3, r9, #20
 80040e0:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80040e4:	9202      	str	r2, [sp, #8]
 80040e6:	1b3a      	subs	r2, r7, r4
 80040e8:	3a15      	subs	r2, #21
 80040ea:	f022 0203 	bic.w	r2, r2, #3
 80040ee:	3204      	adds	r2, #4
 80040f0:	f104 0115 	add.w	r1, r4, #21
 80040f4:	428f      	cmp	r7, r1
 80040f6:	bf38      	it	cc
 80040f8:	2204      	movcc	r2, #4
 80040fa:	9201      	str	r2, [sp, #4]
 80040fc:	9a02      	ldr	r2, [sp, #8]
 80040fe:	9303      	str	r3, [sp, #12]
 8004100:	429a      	cmp	r2, r3
 8004102:	d80c      	bhi.n	800411e <__multiply+0x9e>
 8004104:	2e00      	cmp	r6, #0
 8004106:	dd03      	ble.n	8004110 <__multiply+0x90>
 8004108:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800410c:	2b00      	cmp	r3, #0
 800410e:	d05b      	beq.n	80041c8 <__multiply+0x148>
 8004110:	6106      	str	r6, [r0, #16]
 8004112:	b005      	add	sp, #20
 8004114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004118:	f843 2b04 	str.w	r2, [r3], #4
 800411c:	e7d8      	b.n	80040d0 <__multiply+0x50>
 800411e:	f8b3 a000 	ldrh.w	sl, [r3]
 8004122:	f1ba 0f00 	cmp.w	sl, #0
 8004126:	d024      	beq.n	8004172 <__multiply+0xf2>
 8004128:	f104 0e14 	add.w	lr, r4, #20
 800412c:	46a9      	mov	r9, r5
 800412e:	f04f 0c00 	mov.w	ip, #0
 8004132:	f85e 2b04 	ldr.w	r2, [lr], #4
 8004136:	f8d9 1000 	ldr.w	r1, [r9]
 800413a:	fa1f fb82 	uxth.w	fp, r2
 800413e:	b289      	uxth	r1, r1
 8004140:	fb0a 110b 	mla	r1, sl, fp, r1
 8004144:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8004148:	f8d9 2000 	ldr.w	r2, [r9]
 800414c:	4461      	add	r1, ip
 800414e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8004152:	fb0a c20b 	mla	r2, sl, fp, ip
 8004156:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800415a:	b289      	uxth	r1, r1
 800415c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004160:	4577      	cmp	r7, lr
 8004162:	f849 1b04 	str.w	r1, [r9], #4
 8004166:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800416a:	d8e2      	bhi.n	8004132 <__multiply+0xb2>
 800416c:	9a01      	ldr	r2, [sp, #4]
 800416e:	f845 c002 	str.w	ip, [r5, r2]
 8004172:	9a03      	ldr	r2, [sp, #12]
 8004174:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8004178:	3304      	adds	r3, #4
 800417a:	f1b9 0f00 	cmp.w	r9, #0
 800417e:	d021      	beq.n	80041c4 <__multiply+0x144>
 8004180:	6829      	ldr	r1, [r5, #0]
 8004182:	f104 0c14 	add.w	ip, r4, #20
 8004186:	46ae      	mov	lr, r5
 8004188:	f04f 0a00 	mov.w	sl, #0
 800418c:	f8bc b000 	ldrh.w	fp, [ip]
 8004190:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8004194:	fb09 220b 	mla	r2, r9, fp, r2
 8004198:	4452      	add	r2, sl
 800419a:	b289      	uxth	r1, r1
 800419c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80041a0:	f84e 1b04 	str.w	r1, [lr], #4
 80041a4:	f85c 1b04 	ldr.w	r1, [ip], #4
 80041a8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80041ac:	f8be 1000 	ldrh.w	r1, [lr]
 80041b0:	fb09 110a 	mla	r1, r9, sl, r1
 80041b4:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80041b8:	4567      	cmp	r7, ip
 80041ba:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80041be:	d8e5      	bhi.n	800418c <__multiply+0x10c>
 80041c0:	9a01      	ldr	r2, [sp, #4]
 80041c2:	50a9      	str	r1, [r5, r2]
 80041c4:	3504      	adds	r5, #4
 80041c6:	e799      	b.n	80040fc <__multiply+0x7c>
 80041c8:	3e01      	subs	r6, #1
 80041ca:	e79b      	b.n	8004104 <__multiply+0x84>
 80041cc:	08006a38 	.word	0x08006a38
 80041d0:	08006a49 	.word	0x08006a49

080041d4 <__pow5mult>:
 80041d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80041d8:	4615      	mov	r5, r2
 80041da:	f012 0203 	ands.w	r2, r2, #3
 80041de:	4606      	mov	r6, r0
 80041e0:	460f      	mov	r7, r1
 80041e2:	d007      	beq.n	80041f4 <__pow5mult+0x20>
 80041e4:	4c25      	ldr	r4, [pc, #148]	; (800427c <__pow5mult+0xa8>)
 80041e6:	3a01      	subs	r2, #1
 80041e8:	2300      	movs	r3, #0
 80041ea:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80041ee:	f7ff fe53 	bl	8003e98 <__multadd>
 80041f2:	4607      	mov	r7, r0
 80041f4:	10ad      	asrs	r5, r5, #2
 80041f6:	d03d      	beq.n	8004274 <__pow5mult+0xa0>
 80041f8:	69f4      	ldr	r4, [r6, #28]
 80041fa:	b97c      	cbnz	r4, 800421c <__pow5mult+0x48>
 80041fc:	2010      	movs	r0, #16
 80041fe:	f7ff fd35 	bl	8003c6c <malloc>
 8004202:	4602      	mov	r2, r0
 8004204:	61f0      	str	r0, [r6, #28]
 8004206:	b928      	cbnz	r0, 8004214 <__pow5mult+0x40>
 8004208:	4b1d      	ldr	r3, [pc, #116]	; (8004280 <__pow5mult+0xac>)
 800420a:	481e      	ldr	r0, [pc, #120]	; (8004284 <__pow5mult+0xb0>)
 800420c:	f240 11b3 	movw	r1, #435	; 0x1b3
 8004210:	f001 fb7e 	bl	8005910 <__assert_func>
 8004214:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004218:	6004      	str	r4, [r0, #0]
 800421a:	60c4      	str	r4, [r0, #12]
 800421c:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8004220:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004224:	b94c      	cbnz	r4, 800423a <__pow5mult+0x66>
 8004226:	f240 2171 	movw	r1, #625	; 0x271
 800422a:	4630      	mov	r0, r6
 800422c:	f7ff ff12 	bl	8004054 <__i2b>
 8004230:	2300      	movs	r3, #0
 8004232:	f8c8 0008 	str.w	r0, [r8, #8]
 8004236:	4604      	mov	r4, r0
 8004238:	6003      	str	r3, [r0, #0]
 800423a:	f04f 0900 	mov.w	r9, #0
 800423e:	07eb      	lsls	r3, r5, #31
 8004240:	d50a      	bpl.n	8004258 <__pow5mult+0x84>
 8004242:	4639      	mov	r1, r7
 8004244:	4622      	mov	r2, r4
 8004246:	4630      	mov	r0, r6
 8004248:	f7ff ff1a 	bl	8004080 <__multiply>
 800424c:	4639      	mov	r1, r7
 800424e:	4680      	mov	r8, r0
 8004250:	4630      	mov	r0, r6
 8004252:	f7ff fdff 	bl	8003e54 <_Bfree>
 8004256:	4647      	mov	r7, r8
 8004258:	106d      	asrs	r5, r5, #1
 800425a:	d00b      	beq.n	8004274 <__pow5mult+0xa0>
 800425c:	6820      	ldr	r0, [r4, #0]
 800425e:	b938      	cbnz	r0, 8004270 <__pow5mult+0x9c>
 8004260:	4622      	mov	r2, r4
 8004262:	4621      	mov	r1, r4
 8004264:	4630      	mov	r0, r6
 8004266:	f7ff ff0b 	bl	8004080 <__multiply>
 800426a:	6020      	str	r0, [r4, #0]
 800426c:	f8c0 9000 	str.w	r9, [r0]
 8004270:	4604      	mov	r4, r0
 8004272:	e7e4      	b.n	800423e <__pow5mult+0x6a>
 8004274:	4638      	mov	r0, r7
 8004276:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800427a:	bf00      	nop
 800427c:	08006b98 	.word	0x08006b98
 8004280:	080069c9 	.word	0x080069c9
 8004284:	08006a49 	.word	0x08006a49

08004288 <__lshift>:
 8004288:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800428c:	460c      	mov	r4, r1
 800428e:	6849      	ldr	r1, [r1, #4]
 8004290:	6923      	ldr	r3, [r4, #16]
 8004292:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8004296:	68a3      	ldr	r3, [r4, #8]
 8004298:	4607      	mov	r7, r0
 800429a:	4691      	mov	r9, r2
 800429c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80042a0:	f108 0601 	add.w	r6, r8, #1
 80042a4:	42b3      	cmp	r3, r6
 80042a6:	db0b      	blt.n	80042c0 <__lshift+0x38>
 80042a8:	4638      	mov	r0, r7
 80042aa:	f7ff fd93 	bl	8003dd4 <_Balloc>
 80042ae:	4605      	mov	r5, r0
 80042b0:	b948      	cbnz	r0, 80042c6 <__lshift+0x3e>
 80042b2:	4602      	mov	r2, r0
 80042b4:	4b28      	ldr	r3, [pc, #160]	; (8004358 <__lshift+0xd0>)
 80042b6:	4829      	ldr	r0, [pc, #164]	; (800435c <__lshift+0xd4>)
 80042b8:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80042bc:	f001 fb28 	bl	8005910 <__assert_func>
 80042c0:	3101      	adds	r1, #1
 80042c2:	005b      	lsls	r3, r3, #1
 80042c4:	e7ee      	b.n	80042a4 <__lshift+0x1c>
 80042c6:	2300      	movs	r3, #0
 80042c8:	f100 0114 	add.w	r1, r0, #20
 80042cc:	f100 0210 	add.w	r2, r0, #16
 80042d0:	4618      	mov	r0, r3
 80042d2:	4553      	cmp	r3, sl
 80042d4:	db33      	blt.n	800433e <__lshift+0xb6>
 80042d6:	6920      	ldr	r0, [r4, #16]
 80042d8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80042dc:	f104 0314 	add.w	r3, r4, #20
 80042e0:	f019 091f 	ands.w	r9, r9, #31
 80042e4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80042e8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80042ec:	d02b      	beq.n	8004346 <__lshift+0xbe>
 80042ee:	f1c9 0e20 	rsb	lr, r9, #32
 80042f2:	468a      	mov	sl, r1
 80042f4:	2200      	movs	r2, #0
 80042f6:	6818      	ldr	r0, [r3, #0]
 80042f8:	fa00 f009 	lsl.w	r0, r0, r9
 80042fc:	4310      	orrs	r0, r2
 80042fe:	f84a 0b04 	str.w	r0, [sl], #4
 8004302:	f853 2b04 	ldr.w	r2, [r3], #4
 8004306:	459c      	cmp	ip, r3
 8004308:	fa22 f20e 	lsr.w	r2, r2, lr
 800430c:	d8f3      	bhi.n	80042f6 <__lshift+0x6e>
 800430e:	ebac 0304 	sub.w	r3, ip, r4
 8004312:	3b15      	subs	r3, #21
 8004314:	f023 0303 	bic.w	r3, r3, #3
 8004318:	3304      	adds	r3, #4
 800431a:	f104 0015 	add.w	r0, r4, #21
 800431e:	4584      	cmp	ip, r0
 8004320:	bf38      	it	cc
 8004322:	2304      	movcc	r3, #4
 8004324:	50ca      	str	r2, [r1, r3]
 8004326:	b10a      	cbz	r2, 800432c <__lshift+0xa4>
 8004328:	f108 0602 	add.w	r6, r8, #2
 800432c:	3e01      	subs	r6, #1
 800432e:	4638      	mov	r0, r7
 8004330:	612e      	str	r6, [r5, #16]
 8004332:	4621      	mov	r1, r4
 8004334:	f7ff fd8e 	bl	8003e54 <_Bfree>
 8004338:	4628      	mov	r0, r5
 800433a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800433e:	f842 0f04 	str.w	r0, [r2, #4]!
 8004342:	3301      	adds	r3, #1
 8004344:	e7c5      	b.n	80042d2 <__lshift+0x4a>
 8004346:	3904      	subs	r1, #4
 8004348:	f853 2b04 	ldr.w	r2, [r3], #4
 800434c:	f841 2f04 	str.w	r2, [r1, #4]!
 8004350:	459c      	cmp	ip, r3
 8004352:	d8f9      	bhi.n	8004348 <__lshift+0xc0>
 8004354:	e7ea      	b.n	800432c <__lshift+0xa4>
 8004356:	bf00      	nop
 8004358:	08006a38 	.word	0x08006a38
 800435c:	08006a49 	.word	0x08006a49

08004360 <__mcmp>:
 8004360:	b530      	push	{r4, r5, lr}
 8004362:	6902      	ldr	r2, [r0, #16]
 8004364:	690c      	ldr	r4, [r1, #16]
 8004366:	1b12      	subs	r2, r2, r4
 8004368:	d10e      	bne.n	8004388 <__mcmp+0x28>
 800436a:	f100 0314 	add.w	r3, r0, #20
 800436e:	3114      	adds	r1, #20
 8004370:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8004374:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8004378:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800437c:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8004380:	42a5      	cmp	r5, r4
 8004382:	d003      	beq.n	800438c <__mcmp+0x2c>
 8004384:	d305      	bcc.n	8004392 <__mcmp+0x32>
 8004386:	2201      	movs	r2, #1
 8004388:	4610      	mov	r0, r2
 800438a:	bd30      	pop	{r4, r5, pc}
 800438c:	4283      	cmp	r3, r0
 800438e:	d3f3      	bcc.n	8004378 <__mcmp+0x18>
 8004390:	e7fa      	b.n	8004388 <__mcmp+0x28>
 8004392:	f04f 32ff 	mov.w	r2, #4294967295
 8004396:	e7f7      	b.n	8004388 <__mcmp+0x28>

08004398 <__mdiff>:
 8004398:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800439c:	460c      	mov	r4, r1
 800439e:	4606      	mov	r6, r0
 80043a0:	4611      	mov	r1, r2
 80043a2:	4620      	mov	r0, r4
 80043a4:	4690      	mov	r8, r2
 80043a6:	f7ff ffdb 	bl	8004360 <__mcmp>
 80043aa:	1e05      	subs	r5, r0, #0
 80043ac:	d110      	bne.n	80043d0 <__mdiff+0x38>
 80043ae:	4629      	mov	r1, r5
 80043b0:	4630      	mov	r0, r6
 80043b2:	f7ff fd0f 	bl	8003dd4 <_Balloc>
 80043b6:	b930      	cbnz	r0, 80043c6 <__mdiff+0x2e>
 80043b8:	4b3a      	ldr	r3, [pc, #232]	; (80044a4 <__mdiff+0x10c>)
 80043ba:	4602      	mov	r2, r0
 80043bc:	f240 2137 	movw	r1, #567	; 0x237
 80043c0:	4839      	ldr	r0, [pc, #228]	; (80044a8 <__mdiff+0x110>)
 80043c2:	f001 faa5 	bl	8005910 <__assert_func>
 80043c6:	2301      	movs	r3, #1
 80043c8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80043cc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043d0:	bfa4      	itt	ge
 80043d2:	4643      	movge	r3, r8
 80043d4:	46a0      	movge	r8, r4
 80043d6:	4630      	mov	r0, r6
 80043d8:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80043dc:	bfa6      	itte	ge
 80043de:	461c      	movge	r4, r3
 80043e0:	2500      	movge	r5, #0
 80043e2:	2501      	movlt	r5, #1
 80043e4:	f7ff fcf6 	bl	8003dd4 <_Balloc>
 80043e8:	b920      	cbnz	r0, 80043f4 <__mdiff+0x5c>
 80043ea:	4b2e      	ldr	r3, [pc, #184]	; (80044a4 <__mdiff+0x10c>)
 80043ec:	4602      	mov	r2, r0
 80043ee:	f240 2145 	movw	r1, #581	; 0x245
 80043f2:	e7e5      	b.n	80043c0 <__mdiff+0x28>
 80043f4:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80043f8:	6926      	ldr	r6, [r4, #16]
 80043fa:	60c5      	str	r5, [r0, #12]
 80043fc:	f104 0914 	add.w	r9, r4, #20
 8004400:	f108 0514 	add.w	r5, r8, #20
 8004404:	f100 0e14 	add.w	lr, r0, #20
 8004408:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800440c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8004410:	f108 0210 	add.w	r2, r8, #16
 8004414:	46f2      	mov	sl, lr
 8004416:	2100      	movs	r1, #0
 8004418:	f859 3b04 	ldr.w	r3, [r9], #4
 800441c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8004420:	fa11 f88b 	uxtah	r8, r1, fp
 8004424:	b299      	uxth	r1, r3
 8004426:	0c1b      	lsrs	r3, r3, #16
 8004428:	eba8 0801 	sub.w	r8, r8, r1
 800442c:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8004430:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8004434:	fa1f f888 	uxth.w	r8, r8
 8004438:	1419      	asrs	r1, r3, #16
 800443a:	454e      	cmp	r6, r9
 800443c:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8004440:	f84a 3b04 	str.w	r3, [sl], #4
 8004444:	d8e8      	bhi.n	8004418 <__mdiff+0x80>
 8004446:	1b33      	subs	r3, r6, r4
 8004448:	3b15      	subs	r3, #21
 800444a:	f023 0303 	bic.w	r3, r3, #3
 800444e:	3304      	adds	r3, #4
 8004450:	3415      	adds	r4, #21
 8004452:	42a6      	cmp	r6, r4
 8004454:	bf38      	it	cc
 8004456:	2304      	movcc	r3, #4
 8004458:	441d      	add	r5, r3
 800445a:	4473      	add	r3, lr
 800445c:	469e      	mov	lr, r3
 800445e:	462e      	mov	r6, r5
 8004460:	4566      	cmp	r6, ip
 8004462:	d30e      	bcc.n	8004482 <__mdiff+0xea>
 8004464:	f10c 0203 	add.w	r2, ip, #3
 8004468:	1b52      	subs	r2, r2, r5
 800446a:	f022 0203 	bic.w	r2, r2, #3
 800446e:	3d03      	subs	r5, #3
 8004470:	45ac      	cmp	ip, r5
 8004472:	bf38      	it	cc
 8004474:	2200      	movcc	r2, #0
 8004476:	4413      	add	r3, r2
 8004478:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800447c:	b17a      	cbz	r2, 800449e <__mdiff+0x106>
 800447e:	6107      	str	r7, [r0, #16]
 8004480:	e7a4      	b.n	80043cc <__mdiff+0x34>
 8004482:	f856 8b04 	ldr.w	r8, [r6], #4
 8004486:	fa11 f288 	uxtah	r2, r1, r8
 800448a:	1414      	asrs	r4, r2, #16
 800448c:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8004490:	b292      	uxth	r2, r2
 8004492:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004496:	f84e 2b04 	str.w	r2, [lr], #4
 800449a:	1421      	asrs	r1, r4, #16
 800449c:	e7e0      	b.n	8004460 <__mdiff+0xc8>
 800449e:	3f01      	subs	r7, #1
 80044a0:	e7ea      	b.n	8004478 <__mdiff+0xe0>
 80044a2:	bf00      	nop
 80044a4:	08006a38 	.word	0x08006a38
 80044a8:	08006a49 	.word	0x08006a49

080044ac <__ulp>:
 80044ac:	b082      	sub	sp, #8
 80044ae:	ed8d 0b00 	vstr	d0, [sp]
 80044b2:	9a01      	ldr	r2, [sp, #4]
 80044b4:	4b0f      	ldr	r3, [pc, #60]	; (80044f4 <__ulp+0x48>)
 80044b6:	4013      	ands	r3, r2
 80044b8:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80044bc:	2b00      	cmp	r3, #0
 80044be:	dc08      	bgt.n	80044d2 <__ulp+0x26>
 80044c0:	425b      	negs	r3, r3
 80044c2:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 80044c6:	ea4f 5223 	mov.w	r2, r3, asr #20
 80044ca:	da04      	bge.n	80044d6 <__ulp+0x2a>
 80044cc:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80044d0:	4113      	asrs	r3, r2
 80044d2:	2200      	movs	r2, #0
 80044d4:	e008      	b.n	80044e8 <__ulp+0x3c>
 80044d6:	f1a2 0314 	sub.w	r3, r2, #20
 80044da:	2b1e      	cmp	r3, #30
 80044dc:	bfda      	itte	le
 80044de:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 80044e2:	40da      	lsrle	r2, r3
 80044e4:	2201      	movgt	r2, #1
 80044e6:	2300      	movs	r3, #0
 80044e8:	4619      	mov	r1, r3
 80044ea:	4610      	mov	r0, r2
 80044ec:	ec41 0b10 	vmov	d0, r0, r1
 80044f0:	b002      	add	sp, #8
 80044f2:	4770      	bx	lr
 80044f4:	7ff00000 	.word	0x7ff00000

080044f8 <__b2d>:
 80044f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044fc:	6906      	ldr	r6, [r0, #16]
 80044fe:	f100 0814 	add.w	r8, r0, #20
 8004502:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 8004506:	1f37      	subs	r7, r6, #4
 8004508:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800450c:	4610      	mov	r0, r2
 800450e:	f7ff fd53 	bl	8003fb8 <__hi0bits>
 8004512:	f1c0 0320 	rsb	r3, r0, #32
 8004516:	280a      	cmp	r0, #10
 8004518:	600b      	str	r3, [r1, #0]
 800451a:	491b      	ldr	r1, [pc, #108]	; (8004588 <__b2d+0x90>)
 800451c:	dc15      	bgt.n	800454a <__b2d+0x52>
 800451e:	f1c0 0c0b 	rsb	ip, r0, #11
 8004522:	fa22 f30c 	lsr.w	r3, r2, ip
 8004526:	45b8      	cmp	r8, r7
 8004528:	ea43 0501 	orr.w	r5, r3, r1
 800452c:	bf34      	ite	cc
 800452e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004532:	2300      	movcs	r3, #0
 8004534:	3015      	adds	r0, #21
 8004536:	fa02 f000 	lsl.w	r0, r2, r0
 800453a:	fa23 f30c 	lsr.w	r3, r3, ip
 800453e:	4303      	orrs	r3, r0
 8004540:	461c      	mov	r4, r3
 8004542:	ec45 4b10 	vmov	d0, r4, r5
 8004546:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800454a:	45b8      	cmp	r8, r7
 800454c:	bf3a      	itte	cc
 800454e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 8004552:	f1a6 0708 	subcc.w	r7, r6, #8
 8004556:	2300      	movcs	r3, #0
 8004558:	380b      	subs	r0, #11
 800455a:	d012      	beq.n	8004582 <__b2d+0x8a>
 800455c:	f1c0 0120 	rsb	r1, r0, #32
 8004560:	fa23 f401 	lsr.w	r4, r3, r1
 8004564:	4082      	lsls	r2, r0
 8004566:	4322      	orrs	r2, r4
 8004568:	4547      	cmp	r7, r8
 800456a:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 800456e:	bf8c      	ite	hi
 8004570:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8004574:	2200      	movls	r2, #0
 8004576:	4083      	lsls	r3, r0
 8004578:	40ca      	lsrs	r2, r1
 800457a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800457e:	4313      	orrs	r3, r2
 8004580:	e7de      	b.n	8004540 <__b2d+0x48>
 8004582:	ea42 0501 	orr.w	r5, r2, r1
 8004586:	e7db      	b.n	8004540 <__b2d+0x48>
 8004588:	3ff00000 	.word	0x3ff00000

0800458c <__d2b>:
 800458c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004590:	460f      	mov	r7, r1
 8004592:	2101      	movs	r1, #1
 8004594:	ec59 8b10 	vmov	r8, r9, d0
 8004598:	4616      	mov	r6, r2
 800459a:	f7ff fc1b 	bl	8003dd4 <_Balloc>
 800459e:	4604      	mov	r4, r0
 80045a0:	b930      	cbnz	r0, 80045b0 <__d2b+0x24>
 80045a2:	4602      	mov	r2, r0
 80045a4:	4b24      	ldr	r3, [pc, #144]	; (8004638 <__d2b+0xac>)
 80045a6:	4825      	ldr	r0, [pc, #148]	; (800463c <__d2b+0xb0>)
 80045a8:	f240 310f 	movw	r1, #783	; 0x30f
 80045ac:	f001 f9b0 	bl	8005910 <__assert_func>
 80045b0:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80045b4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80045b8:	bb2d      	cbnz	r5, 8004606 <__d2b+0x7a>
 80045ba:	9301      	str	r3, [sp, #4]
 80045bc:	f1b8 0300 	subs.w	r3, r8, #0
 80045c0:	d026      	beq.n	8004610 <__d2b+0x84>
 80045c2:	4668      	mov	r0, sp
 80045c4:	9300      	str	r3, [sp, #0]
 80045c6:	f7ff fd17 	bl	8003ff8 <__lo0bits>
 80045ca:	e9dd 1200 	ldrd	r1, r2, [sp]
 80045ce:	b1e8      	cbz	r0, 800460c <__d2b+0x80>
 80045d0:	f1c0 0320 	rsb	r3, r0, #32
 80045d4:	fa02 f303 	lsl.w	r3, r2, r3
 80045d8:	430b      	orrs	r3, r1
 80045da:	40c2      	lsrs	r2, r0
 80045dc:	6163      	str	r3, [r4, #20]
 80045de:	9201      	str	r2, [sp, #4]
 80045e0:	9b01      	ldr	r3, [sp, #4]
 80045e2:	61a3      	str	r3, [r4, #24]
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	bf14      	ite	ne
 80045e8:	2202      	movne	r2, #2
 80045ea:	2201      	moveq	r2, #1
 80045ec:	6122      	str	r2, [r4, #16]
 80045ee:	b1bd      	cbz	r5, 8004620 <__d2b+0x94>
 80045f0:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80045f4:	4405      	add	r5, r0
 80045f6:	603d      	str	r5, [r7, #0]
 80045f8:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80045fc:	6030      	str	r0, [r6, #0]
 80045fe:	4620      	mov	r0, r4
 8004600:	b003      	add	sp, #12
 8004602:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004606:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800460a:	e7d6      	b.n	80045ba <__d2b+0x2e>
 800460c:	6161      	str	r1, [r4, #20]
 800460e:	e7e7      	b.n	80045e0 <__d2b+0x54>
 8004610:	a801      	add	r0, sp, #4
 8004612:	f7ff fcf1 	bl	8003ff8 <__lo0bits>
 8004616:	9b01      	ldr	r3, [sp, #4]
 8004618:	6163      	str	r3, [r4, #20]
 800461a:	3020      	adds	r0, #32
 800461c:	2201      	movs	r2, #1
 800461e:	e7e5      	b.n	80045ec <__d2b+0x60>
 8004620:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004624:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004628:	6038      	str	r0, [r7, #0]
 800462a:	6918      	ldr	r0, [r3, #16]
 800462c:	f7ff fcc4 	bl	8003fb8 <__hi0bits>
 8004630:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004634:	e7e2      	b.n	80045fc <__d2b+0x70>
 8004636:	bf00      	nop
 8004638:	08006a38 	.word	0x08006a38
 800463c:	08006a49 	.word	0x08006a49

08004640 <__ratio>:
 8004640:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004644:	4688      	mov	r8, r1
 8004646:	4669      	mov	r1, sp
 8004648:	4681      	mov	r9, r0
 800464a:	f7ff ff55 	bl	80044f8 <__b2d>
 800464e:	a901      	add	r1, sp, #4
 8004650:	4640      	mov	r0, r8
 8004652:	ec55 4b10 	vmov	r4, r5, d0
 8004656:	f7ff ff4f 	bl	80044f8 <__b2d>
 800465a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800465e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8004662:	eba3 0c02 	sub.w	ip, r3, r2
 8004666:	e9dd 3200 	ldrd	r3, r2, [sp]
 800466a:	1a9b      	subs	r3, r3, r2
 800466c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8004670:	ec51 0b10 	vmov	r0, r1, d0
 8004674:	2b00      	cmp	r3, #0
 8004676:	bfd6      	itet	le
 8004678:	460a      	movle	r2, r1
 800467a:	462a      	movgt	r2, r5
 800467c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004680:	468b      	mov	fp, r1
 8004682:	462f      	mov	r7, r5
 8004684:	bfd4      	ite	le
 8004686:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800468a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800468e:	4620      	mov	r0, r4
 8004690:	ee10 2a10 	vmov	r2, s0
 8004694:	465b      	mov	r3, fp
 8004696:	4639      	mov	r1, r7
 8004698:	f7fc f8d8 	bl	800084c <__aeabi_ddiv>
 800469c:	ec41 0b10 	vmov	d0, r0, r1
 80046a0:	b003      	add	sp, #12
 80046a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080046a6 <__copybits>:
 80046a6:	3901      	subs	r1, #1
 80046a8:	b570      	push	{r4, r5, r6, lr}
 80046aa:	1149      	asrs	r1, r1, #5
 80046ac:	6914      	ldr	r4, [r2, #16]
 80046ae:	3101      	adds	r1, #1
 80046b0:	f102 0314 	add.w	r3, r2, #20
 80046b4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80046b8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80046bc:	1f05      	subs	r5, r0, #4
 80046be:	42a3      	cmp	r3, r4
 80046c0:	d30c      	bcc.n	80046dc <__copybits+0x36>
 80046c2:	1aa3      	subs	r3, r4, r2
 80046c4:	3b11      	subs	r3, #17
 80046c6:	f023 0303 	bic.w	r3, r3, #3
 80046ca:	3211      	adds	r2, #17
 80046cc:	42a2      	cmp	r2, r4
 80046ce:	bf88      	it	hi
 80046d0:	2300      	movhi	r3, #0
 80046d2:	4418      	add	r0, r3
 80046d4:	2300      	movs	r3, #0
 80046d6:	4288      	cmp	r0, r1
 80046d8:	d305      	bcc.n	80046e6 <__copybits+0x40>
 80046da:	bd70      	pop	{r4, r5, r6, pc}
 80046dc:	f853 6b04 	ldr.w	r6, [r3], #4
 80046e0:	f845 6f04 	str.w	r6, [r5, #4]!
 80046e4:	e7eb      	b.n	80046be <__copybits+0x18>
 80046e6:	f840 3b04 	str.w	r3, [r0], #4
 80046ea:	e7f4      	b.n	80046d6 <__copybits+0x30>

080046ec <__any_on>:
 80046ec:	f100 0214 	add.w	r2, r0, #20
 80046f0:	6900      	ldr	r0, [r0, #16]
 80046f2:	114b      	asrs	r3, r1, #5
 80046f4:	4298      	cmp	r0, r3
 80046f6:	b510      	push	{r4, lr}
 80046f8:	db11      	blt.n	800471e <__any_on+0x32>
 80046fa:	dd0a      	ble.n	8004712 <__any_on+0x26>
 80046fc:	f011 011f 	ands.w	r1, r1, #31
 8004700:	d007      	beq.n	8004712 <__any_on+0x26>
 8004702:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004706:	fa24 f001 	lsr.w	r0, r4, r1
 800470a:	fa00 f101 	lsl.w	r1, r0, r1
 800470e:	428c      	cmp	r4, r1
 8004710:	d10b      	bne.n	800472a <__any_on+0x3e>
 8004712:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004716:	4293      	cmp	r3, r2
 8004718:	d803      	bhi.n	8004722 <__any_on+0x36>
 800471a:	2000      	movs	r0, #0
 800471c:	bd10      	pop	{r4, pc}
 800471e:	4603      	mov	r3, r0
 8004720:	e7f7      	b.n	8004712 <__any_on+0x26>
 8004722:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004726:	2900      	cmp	r1, #0
 8004728:	d0f5      	beq.n	8004716 <__any_on+0x2a>
 800472a:	2001      	movs	r0, #1
 800472c:	e7f6      	b.n	800471c <__any_on+0x30>

0800472e <sulp>:
 800472e:	b570      	push	{r4, r5, r6, lr}
 8004730:	4604      	mov	r4, r0
 8004732:	460d      	mov	r5, r1
 8004734:	ec45 4b10 	vmov	d0, r4, r5
 8004738:	4616      	mov	r6, r2
 800473a:	f7ff feb7 	bl	80044ac <__ulp>
 800473e:	ec51 0b10 	vmov	r0, r1, d0
 8004742:	b17e      	cbz	r6, 8004764 <sulp+0x36>
 8004744:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004748:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800474c:	2b00      	cmp	r3, #0
 800474e:	dd09      	ble.n	8004764 <sulp+0x36>
 8004750:	051b      	lsls	r3, r3, #20
 8004752:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8004756:	2400      	movs	r4, #0
 8004758:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800475c:	4622      	mov	r2, r4
 800475e:	462b      	mov	r3, r5
 8004760:	f7fb ff4a 	bl	80005f8 <__aeabi_dmul>
 8004764:	bd70      	pop	{r4, r5, r6, pc}
	...

08004768 <_strtod_l>:
 8004768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800476c:	ed2d 8b02 	vpush	{d8}
 8004770:	b09b      	sub	sp, #108	; 0x6c
 8004772:	4604      	mov	r4, r0
 8004774:	9213      	str	r2, [sp, #76]	; 0x4c
 8004776:	2200      	movs	r2, #0
 8004778:	9216      	str	r2, [sp, #88]	; 0x58
 800477a:	460d      	mov	r5, r1
 800477c:	f04f 0800 	mov.w	r8, #0
 8004780:	f04f 0900 	mov.w	r9, #0
 8004784:	460a      	mov	r2, r1
 8004786:	9215      	str	r2, [sp, #84]	; 0x54
 8004788:	7811      	ldrb	r1, [r2, #0]
 800478a:	292b      	cmp	r1, #43	; 0x2b
 800478c:	d04c      	beq.n	8004828 <_strtod_l+0xc0>
 800478e:	d83a      	bhi.n	8004806 <_strtod_l+0x9e>
 8004790:	290d      	cmp	r1, #13
 8004792:	d834      	bhi.n	80047fe <_strtod_l+0x96>
 8004794:	2908      	cmp	r1, #8
 8004796:	d834      	bhi.n	8004802 <_strtod_l+0x9a>
 8004798:	2900      	cmp	r1, #0
 800479a:	d03d      	beq.n	8004818 <_strtod_l+0xb0>
 800479c:	2200      	movs	r2, #0
 800479e:	920a      	str	r2, [sp, #40]	; 0x28
 80047a0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80047a2:	7832      	ldrb	r2, [r6, #0]
 80047a4:	2a30      	cmp	r2, #48	; 0x30
 80047a6:	f040 80b4 	bne.w	8004912 <_strtod_l+0x1aa>
 80047aa:	7872      	ldrb	r2, [r6, #1]
 80047ac:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 80047b0:	2a58      	cmp	r2, #88	; 0x58
 80047b2:	d170      	bne.n	8004896 <_strtod_l+0x12e>
 80047b4:	9302      	str	r3, [sp, #8]
 80047b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047b8:	9301      	str	r3, [sp, #4]
 80047ba:	ab16      	add	r3, sp, #88	; 0x58
 80047bc:	9300      	str	r3, [sp, #0]
 80047be:	4a8e      	ldr	r2, [pc, #568]	; (80049f8 <_strtod_l+0x290>)
 80047c0:	ab17      	add	r3, sp, #92	; 0x5c
 80047c2:	a915      	add	r1, sp, #84	; 0x54
 80047c4:	4620      	mov	r0, r4
 80047c6:	f001 f93f 	bl	8005a48 <__gethex>
 80047ca:	f010 070f 	ands.w	r7, r0, #15
 80047ce:	4605      	mov	r5, r0
 80047d0:	d005      	beq.n	80047de <_strtod_l+0x76>
 80047d2:	2f06      	cmp	r7, #6
 80047d4:	d12a      	bne.n	800482c <_strtod_l+0xc4>
 80047d6:	3601      	adds	r6, #1
 80047d8:	2300      	movs	r3, #0
 80047da:	9615      	str	r6, [sp, #84]	; 0x54
 80047dc:	930a      	str	r3, [sp, #40]	; 0x28
 80047de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80047e0:	2b00      	cmp	r3, #0
 80047e2:	f040 857f 	bne.w	80052e4 <_strtod_l+0xb7c>
 80047e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047e8:	b1db      	cbz	r3, 8004822 <_strtod_l+0xba>
 80047ea:	4642      	mov	r2, r8
 80047ec:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80047f0:	ec43 2b10 	vmov	d0, r2, r3
 80047f4:	b01b      	add	sp, #108	; 0x6c
 80047f6:	ecbd 8b02 	vpop	{d8}
 80047fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80047fe:	2920      	cmp	r1, #32
 8004800:	d1cc      	bne.n	800479c <_strtod_l+0x34>
 8004802:	3201      	adds	r2, #1
 8004804:	e7bf      	b.n	8004786 <_strtod_l+0x1e>
 8004806:	292d      	cmp	r1, #45	; 0x2d
 8004808:	d1c8      	bne.n	800479c <_strtod_l+0x34>
 800480a:	2101      	movs	r1, #1
 800480c:	910a      	str	r1, [sp, #40]	; 0x28
 800480e:	1c51      	adds	r1, r2, #1
 8004810:	9115      	str	r1, [sp, #84]	; 0x54
 8004812:	7852      	ldrb	r2, [r2, #1]
 8004814:	2a00      	cmp	r2, #0
 8004816:	d1c3      	bne.n	80047a0 <_strtod_l+0x38>
 8004818:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800481a:	9515      	str	r5, [sp, #84]	; 0x54
 800481c:	2b00      	cmp	r3, #0
 800481e:	f040 855f 	bne.w	80052e0 <_strtod_l+0xb78>
 8004822:	4642      	mov	r2, r8
 8004824:	464b      	mov	r3, r9
 8004826:	e7e3      	b.n	80047f0 <_strtod_l+0x88>
 8004828:	2100      	movs	r1, #0
 800482a:	e7ef      	b.n	800480c <_strtod_l+0xa4>
 800482c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800482e:	b13a      	cbz	r2, 8004840 <_strtod_l+0xd8>
 8004830:	2135      	movs	r1, #53	; 0x35
 8004832:	a818      	add	r0, sp, #96	; 0x60
 8004834:	f7ff ff37 	bl	80046a6 <__copybits>
 8004838:	9916      	ldr	r1, [sp, #88]	; 0x58
 800483a:	4620      	mov	r0, r4
 800483c:	f7ff fb0a 	bl	8003e54 <_Bfree>
 8004840:	3f01      	subs	r7, #1
 8004842:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004844:	2f04      	cmp	r7, #4
 8004846:	d806      	bhi.n	8004856 <_strtod_l+0xee>
 8004848:	e8df f007 	tbb	[pc, r7]
 800484c:	201d0314 	.word	0x201d0314
 8004850:	14          	.byte	0x14
 8004851:	00          	.byte	0x00
 8004852:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 8004856:	05e9      	lsls	r1, r5, #23
 8004858:	bf48      	it	mi
 800485a:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 800485e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004862:	0d1b      	lsrs	r3, r3, #20
 8004864:	051b      	lsls	r3, r3, #20
 8004866:	2b00      	cmp	r3, #0
 8004868:	d1b9      	bne.n	80047de <_strtod_l+0x76>
 800486a:	f7fe fb05 	bl	8002e78 <__errno>
 800486e:	2322      	movs	r3, #34	; 0x22
 8004870:	6003      	str	r3, [r0, #0]
 8004872:	e7b4      	b.n	80047de <_strtod_l+0x76>
 8004874:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 8004878:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800487c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004880:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8004884:	e7e7      	b.n	8004856 <_strtod_l+0xee>
 8004886:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8004a00 <_strtod_l+0x298>
 800488a:	e7e4      	b.n	8004856 <_strtod_l+0xee>
 800488c:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8004890:	f04f 38ff 	mov.w	r8, #4294967295
 8004894:	e7df      	b.n	8004856 <_strtod_l+0xee>
 8004896:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004898:	1c5a      	adds	r2, r3, #1
 800489a:	9215      	str	r2, [sp, #84]	; 0x54
 800489c:	785b      	ldrb	r3, [r3, #1]
 800489e:	2b30      	cmp	r3, #48	; 0x30
 80048a0:	d0f9      	beq.n	8004896 <_strtod_l+0x12e>
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d09b      	beq.n	80047de <_strtod_l+0x76>
 80048a6:	2301      	movs	r3, #1
 80048a8:	f04f 0a00 	mov.w	sl, #0
 80048ac:	9304      	str	r3, [sp, #16]
 80048ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80048b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80048b2:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80048b6:	46d3      	mov	fp, sl
 80048b8:	220a      	movs	r2, #10
 80048ba:	9815      	ldr	r0, [sp, #84]	; 0x54
 80048bc:	7806      	ldrb	r6, [r0, #0]
 80048be:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80048c2:	b2d9      	uxtb	r1, r3
 80048c4:	2909      	cmp	r1, #9
 80048c6:	d926      	bls.n	8004916 <_strtod_l+0x1ae>
 80048c8:	494c      	ldr	r1, [pc, #304]	; (80049fc <_strtod_l+0x294>)
 80048ca:	2201      	movs	r2, #1
 80048cc:	f000 ffe6 	bl	800589c <strncmp>
 80048d0:	2800      	cmp	r0, #0
 80048d2:	d030      	beq.n	8004936 <_strtod_l+0x1ce>
 80048d4:	2000      	movs	r0, #0
 80048d6:	4632      	mov	r2, r6
 80048d8:	9005      	str	r0, [sp, #20]
 80048da:	465e      	mov	r6, fp
 80048dc:	4603      	mov	r3, r0
 80048de:	2a65      	cmp	r2, #101	; 0x65
 80048e0:	d001      	beq.n	80048e6 <_strtod_l+0x17e>
 80048e2:	2a45      	cmp	r2, #69	; 0x45
 80048e4:	d113      	bne.n	800490e <_strtod_l+0x1a6>
 80048e6:	b91e      	cbnz	r6, 80048f0 <_strtod_l+0x188>
 80048e8:	9a04      	ldr	r2, [sp, #16]
 80048ea:	4302      	orrs	r2, r0
 80048ec:	d094      	beq.n	8004818 <_strtod_l+0xb0>
 80048ee:	2600      	movs	r6, #0
 80048f0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80048f2:	1c6a      	adds	r2, r5, #1
 80048f4:	9215      	str	r2, [sp, #84]	; 0x54
 80048f6:	786a      	ldrb	r2, [r5, #1]
 80048f8:	2a2b      	cmp	r2, #43	; 0x2b
 80048fa:	d074      	beq.n	80049e6 <_strtod_l+0x27e>
 80048fc:	2a2d      	cmp	r2, #45	; 0x2d
 80048fe:	d078      	beq.n	80049f2 <_strtod_l+0x28a>
 8004900:	f04f 0c00 	mov.w	ip, #0
 8004904:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8004908:	2909      	cmp	r1, #9
 800490a:	d97f      	bls.n	8004a0c <_strtod_l+0x2a4>
 800490c:	9515      	str	r5, [sp, #84]	; 0x54
 800490e:	2700      	movs	r7, #0
 8004910:	e09e      	b.n	8004a50 <_strtod_l+0x2e8>
 8004912:	2300      	movs	r3, #0
 8004914:	e7c8      	b.n	80048a8 <_strtod_l+0x140>
 8004916:	f1bb 0f08 	cmp.w	fp, #8
 800491a:	bfd8      	it	le
 800491c:	9909      	ldrle	r1, [sp, #36]	; 0x24
 800491e:	f100 0001 	add.w	r0, r0, #1
 8004922:	bfda      	itte	le
 8004924:	fb02 3301 	mlale	r3, r2, r1, r3
 8004928:	9309      	strle	r3, [sp, #36]	; 0x24
 800492a:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 800492e:	f10b 0b01 	add.w	fp, fp, #1
 8004932:	9015      	str	r0, [sp, #84]	; 0x54
 8004934:	e7c1      	b.n	80048ba <_strtod_l+0x152>
 8004936:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004938:	1c5a      	adds	r2, r3, #1
 800493a:	9215      	str	r2, [sp, #84]	; 0x54
 800493c:	785a      	ldrb	r2, [r3, #1]
 800493e:	f1bb 0f00 	cmp.w	fp, #0
 8004942:	d037      	beq.n	80049b4 <_strtod_l+0x24c>
 8004944:	9005      	str	r0, [sp, #20]
 8004946:	465e      	mov	r6, fp
 8004948:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800494c:	2b09      	cmp	r3, #9
 800494e:	d912      	bls.n	8004976 <_strtod_l+0x20e>
 8004950:	2301      	movs	r3, #1
 8004952:	e7c4      	b.n	80048de <_strtod_l+0x176>
 8004954:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004956:	1c5a      	adds	r2, r3, #1
 8004958:	9215      	str	r2, [sp, #84]	; 0x54
 800495a:	785a      	ldrb	r2, [r3, #1]
 800495c:	3001      	adds	r0, #1
 800495e:	2a30      	cmp	r2, #48	; 0x30
 8004960:	d0f8      	beq.n	8004954 <_strtod_l+0x1ec>
 8004962:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8004966:	2b08      	cmp	r3, #8
 8004968:	f200 84c1 	bhi.w	80052ee <_strtod_l+0xb86>
 800496c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800496e:	9005      	str	r0, [sp, #20]
 8004970:	2000      	movs	r0, #0
 8004972:	930b      	str	r3, [sp, #44]	; 0x2c
 8004974:	4606      	mov	r6, r0
 8004976:	3a30      	subs	r2, #48	; 0x30
 8004978:	f100 0301 	add.w	r3, r0, #1
 800497c:	d014      	beq.n	80049a8 <_strtod_l+0x240>
 800497e:	9905      	ldr	r1, [sp, #20]
 8004980:	4419      	add	r1, r3
 8004982:	9105      	str	r1, [sp, #20]
 8004984:	4633      	mov	r3, r6
 8004986:	eb00 0c06 	add.w	ip, r0, r6
 800498a:	210a      	movs	r1, #10
 800498c:	4563      	cmp	r3, ip
 800498e:	d113      	bne.n	80049b8 <_strtod_l+0x250>
 8004990:	1833      	adds	r3, r6, r0
 8004992:	2b08      	cmp	r3, #8
 8004994:	f106 0601 	add.w	r6, r6, #1
 8004998:	4406      	add	r6, r0
 800499a:	dc1a      	bgt.n	80049d2 <_strtod_l+0x26a>
 800499c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800499e:	230a      	movs	r3, #10
 80049a0:	fb03 2301 	mla	r3, r3, r1, r2
 80049a4:	9309      	str	r3, [sp, #36]	; 0x24
 80049a6:	2300      	movs	r3, #0
 80049a8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80049aa:	1c51      	adds	r1, r2, #1
 80049ac:	9115      	str	r1, [sp, #84]	; 0x54
 80049ae:	7852      	ldrb	r2, [r2, #1]
 80049b0:	4618      	mov	r0, r3
 80049b2:	e7c9      	b.n	8004948 <_strtod_l+0x1e0>
 80049b4:	4658      	mov	r0, fp
 80049b6:	e7d2      	b.n	800495e <_strtod_l+0x1f6>
 80049b8:	2b08      	cmp	r3, #8
 80049ba:	f103 0301 	add.w	r3, r3, #1
 80049be:	dc03      	bgt.n	80049c8 <_strtod_l+0x260>
 80049c0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80049c2:	434f      	muls	r7, r1
 80049c4:	9709      	str	r7, [sp, #36]	; 0x24
 80049c6:	e7e1      	b.n	800498c <_strtod_l+0x224>
 80049c8:	2b10      	cmp	r3, #16
 80049ca:	bfd8      	it	le
 80049cc:	fb01 fa0a 	mulle.w	sl, r1, sl
 80049d0:	e7dc      	b.n	800498c <_strtod_l+0x224>
 80049d2:	2e10      	cmp	r6, #16
 80049d4:	bfdc      	itt	le
 80049d6:	230a      	movle	r3, #10
 80049d8:	fb03 2a0a 	mlale	sl, r3, sl, r2
 80049dc:	e7e3      	b.n	80049a6 <_strtod_l+0x23e>
 80049de:	2300      	movs	r3, #0
 80049e0:	9305      	str	r3, [sp, #20]
 80049e2:	2301      	movs	r3, #1
 80049e4:	e780      	b.n	80048e8 <_strtod_l+0x180>
 80049e6:	f04f 0c00 	mov.w	ip, #0
 80049ea:	1caa      	adds	r2, r5, #2
 80049ec:	9215      	str	r2, [sp, #84]	; 0x54
 80049ee:	78aa      	ldrb	r2, [r5, #2]
 80049f0:	e788      	b.n	8004904 <_strtod_l+0x19c>
 80049f2:	f04f 0c01 	mov.w	ip, #1
 80049f6:	e7f8      	b.n	80049ea <_strtod_l+0x282>
 80049f8:	08006ba8 	.word	0x08006ba8
 80049fc:	08006ba4 	.word	0x08006ba4
 8004a00:	7ff00000 	.word	0x7ff00000
 8004a04:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004a06:	1c51      	adds	r1, r2, #1
 8004a08:	9115      	str	r1, [sp, #84]	; 0x54
 8004a0a:	7852      	ldrb	r2, [r2, #1]
 8004a0c:	2a30      	cmp	r2, #48	; 0x30
 8004a0e:	d0f9      	beq.n	8004a04 <_strtod_l+0x29c>
 8004a10:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8004a14:	2908      	cmp	r1, #8
 8004a16:	f63f af7a 	bhi.w	800490e <_strtod_l+0x1a6>
 8004a1a:	3a30      	subs	r2, #48	; 0x30
 8004a1c:	9208      	str	r2, [sp, #32]
 8004a1e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004a20:	920c      	str	r2, [sp, #48]	; 0x30
 8004a22:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004a24:	1c57      	adds	r7, r2, #1
 8004a26:	9715      	str	r7, [sp, #84]	; 0x54
 8004a28:	7852      	ldrb	r2, [r2, #1]
 8004a2a:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8004a2e:	f1be 0f09 	cmp.w	lr, #9
 8004a32:	d938      	bls.n	8004aa6 <_strtod_l+0x33e>
 8004a34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004a36:	1a7f      	subs	r7, r7, r1
 8004a38:	2f08      	cmp	r7, #8
 8004a3a:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8004a3e:	dc03      	bgt.n	8004a48 <_strtod_l+0x2e0>
 8004a40:	9908      	ldr	r1, [sp, #32]
 8004a42:	428f      	cmp	r7, r1
 8004a44:	bfa8      	it	ge
 8004a46:	460f      	movge	r7, r1
 8004a48:	f1bc 0f00 	cmp.w	ip, #0
 8004a4c:	d000      	beq.n	8004a50 <_strtod_l+0x2e8>
 8004a4e:	427f      	negs	r7, r7
 8004a50:	2e00      	cmp	r6, #0
 8004a52:	d14f      	bne.n	8004af4 <_strtod_l+0x38c>
 8004a54:	9904      	ldr	r1, [sp, #16]
 8004a56:	4301      	orrs	r1, r0
 8004a58:	f47f aec1 	bne.w	80047de <_strtod_l+0x76>
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	f47f aedb 	bne.w	8004818 <_strtod_l+0xb0>
 8004a62:	2a69      	cmp	r2, #105	; 0x69
 8004a64:	d029      	beq.n	8004aba <_strtod_l+0x352>
 8004a66:	dc26      	bgt.n	8004ab6 <_strtod_l+0x34e>
 8004a68:	2a49      	cmp	r2, #73	; 0x49
 8004a6a:	d026      	beq.n	8004aba <_strtod_l+0x352>
 8004a6c:	2a4e      	cmp	r2, #78	; 0x4e
 8004a6e:	f47f aed3 	bne.w	8004818 <_strtod_l+0xb0>
 8004a72:	499b      	ldr	r1, [pc, #620]	; (8004ce0 <_strtod_l+0x578>)
 8004a74:	a815      	add	r0, sp, #84	; 0x54
 8004a76:	f001 fa27 	bl	8005ec8 <__match>
 8004a7a:	2800      	cmp	r0, #0
 8004a7c:	f43f aecc 	beq.w	8004818 <_strtod_l+0xb0>
 8004a80:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004a82:	781b      	ldrb	r3, [r3, #0]
 8004a84:	2b28      	cmp	r3, #40	; 0x28
 8004a86:	d12f      	bne.n	8004ae8 <_strtod_l+0x380>
 8004a88:	4996      	ldr	r1, [pc, #600]	; (8004ce4 <_strtod_l+0x57c>)
 8004a8a:	aa18      	add	r2, sp, #96	; 0x60
 8004a8c:	a815      	add	r0, sp, #84	; 0x54
 8004a8e:	f001 fa2f 	bl	8005ef0 <__hexnan>
 8004a92:	2805      	cmp	r0, #5
 8004a94:	d128      	bne.n	8004ae8 <_strtod_l+0x380>
 8004a96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004a98:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8004a9c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8004aa0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8004aa4:	e69b      	b.n	80047de <_strtod_l+0x76>
 8004aa6:	9f08      	ldr	r7, [sp, #32]
 8004aa8:	210a      	movs	r1, #10
 8004aaa:	fb01 2107 	mla	r1, r1, r7, r2
 8004aae:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8004ab2:	9208      	str	r2, [sp, #32]
 8004ab4:	e7b5      	b.n	8004a22 <_strtod_l+0x2ba>
 8004ab6:	2a6e      	cmp	r2, #110	; 0x6e
 8004ab8:	e7d9      	b.n	8004a6e <_strtod_l+0x306>
 8004aba:	498b      	ldr	r1, [pc, #556]	; (8004ce8 <_strtod_l+0x580>)
 8004abc:	a815      	add	r0, sp, #84	; 0x54
 8004abe:	f001 fa03 	bl	8005ec8 <__match>
 8004ac2:	2800      	cmp	r0, #0
 8004ac4:	f43f aea8 	beq.w	8004818 <_strtod_l+0xb0>
 8004ac8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004aca:	4988      	ldr	r1, [pc, #544]	; (8004cec <_strtod_l+0x584>)
 8004acc:	3b01      	subs	r3, #1
 8004ace:	a815      	add	r0, sp, #84	; 0x54
 8004ad0:	9315      	str	r3, [sp, #84]	; 0x54
 8004ad2:	f001 f9f9 	bl	8005ec8 <__match>
 8004ad6:	b910      	cbnz	r0, 8004ade <_strtod_l+0x376>
 8004ad8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004ada:	3301      	adds	r3, #1
 8004adc:	9315      	str	r3, [sp, #84]	; 0x54
 8004ade:	f8df 921c 	ldr.w	r9, [pc, #540]	; 8004cfc <_strtod_l+0x594>
 8004ae2:	f04f 0800 	mov.w	r8, #0
 8004ae6:	e67a      	b.n	80047de <_strtod_l+0x76>
 8004ae8:	4881      	ldr	r0, [pc, #516]	; (8004cf0 <_strtod_l+0x588>)
 8004aea:	f000 ff09 	bl	8005900 <nan>
 8004aee:	ec59 8b10 	vmov	r8, r9, d0
 8004af2:	e674      	b.n	80047de <_strtod_l+0x76>
 8004af4:	9b05      	ldr	r3, [sp, #20]
 8004af6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004af8:	1afb      	subs	r3, r7, r3
 8004afa:	f1bb 0f00 	cmp.w	fp, #0
 8004afe:	bf08      	it	eq
 8004b00:	46b3      	moveq	fp, r6
 8004b02:	2e10      	cmp	r6, #16
 8004b04:	9308      	str	r3, [sp, #32]
 8004b06:	4635      	mov	r5, r6
 8004b08:	bfa8      	it	ge
 8004b0a:	2510      	movge	r5, #16
 8004b0c:	f7fb fcfa 	bl	8000504 <__aeabi_ui2d>
 8004b10:	2e09      	cmp	r6, #9
 8004b12:	4680      	mov	r8, r0
 8004b14:	4689      	mov	r9, r1
 8004b16:	dd13      	ble.n	8004b40 <_strtod_l+0x3d8>
 8004b18:	4b76      	ldr	r3, [pc, #472]	; (8004cf4 <_strtod_l+0x58c>)
 8004b1a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8004b1e:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8004b22:	f7fb fd69 	bl	80005f8 <__aeabi_dmul>
 8004b26:	4680      	mov	r8, r0
 8004b28:	4650      	mov	r0, sl
 8004b2a:	4689      	mov	r9, r1
 8004b2c:	f7fb fcea 	bl	8000504 <__aeabi_ui2d>
 8004b30:	4602      	mov	r2, r0
 8004b32:	460b      	mov	r3, r1
 8004b34:	4640      	mov	r0, r8
 8004b36:	4649      	mov	r1, r9
 8004b38:	f7fb fba8 	bl	800028c <__adddf3>
 8004b3c:	4680      	mov	r8, r0
 8004b3e:	4689      	mov	r9, r1
 8004b40:	2e0f      	cmp	r6, #15
 8004b42:	dc38      	bgt.n	8004bb6 <_strtod_l+0x44e>
 8004b44:	9b08      	ldr	r3, [sp, #32]
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	f43f ae49 	beq.w	80047de <_strtod_l+0x76>
 8004b4c:	dd24      	ble.n	8004b98 <_strtod_l+0x430>
 8004b4e:	2b16      	cmp	r3, #22
 8004b50:	dc0b      	bgt.n	8004b6a <_strtod_l+0x402>
 8004b52:	4968      	ldr	r1, [pc, #416]	; (8004cf4 <_strtod_l+0x58c>)
 8004b54:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004b58:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b5c:	4642      	mov	r2, r8
 8004b5e:	464b      	mov	r3, r9
 8004b60:	f7fb fd4a 	bl	80005f8 <__aeabi_dmul>
 8004b64:	4680      	mov	r8, r0
 8004b66:	4689      	mov	r9, r1
 8004b68:	e639      	b.n	80047de <_strtod_l+0x76>
 8004b6a:	9a08      	ldr	r2, [sp, #32]
 8004b6c:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 8004b70:	4293      	cmp	r3, r2
 8004b72:	db20      	blt.n	8004bb6 <_strtod_l+0x44e>
 8004b74:	4c5f      	ldr	r4, [pc, #380]	; (8004cf4 <_strtod_l+0x58c>)
 8004b76:	f1c6 060f 	rsb	r6, r6, #15
 8004b7a:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8004b7e:	4642      	mov	r2, r8
 8004b80:	464b      	mov	r3, r9
 8004b82:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b86:	f7fb fd37 	bl	80005f8 <__aeabi_dmul>
 8004b8a:	9b08      	ldr	r3, [sp, #32]
 8004b8c:	1b9e      	subs	r6, r3, r6
 8004b8e:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8004b92:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004b96:	e7e3      	b.n	8004b60 <_strtod_l+0x3f8>
 8004b98:	9b08      	ldr	r3, [sp, #32]
 8004b9a:	3316      	adds	r3, #22
 8004b9c:	db0b      	blt.n	8004bb6 <_strtod_l+0x44e>
 8004b9e:	9b05      	ldr	r3, [sp, #20]
 8004ba0:	1bdf      	subs	r7, r3, r7
 8004ba2:	4b54      	ldr	r3, [pc, #336]	; (8004cf4 <_strtod_l+0x58c>)
 8004ba4:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8004ba8:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004bac:	4640      	mov	r0, r8
 8004bae:	4649      	mov	r1, r9
 8004bb0:	f7fb fe4c 	bl	800084c <__aeabi_ddiv>
 8004bb4:	e7d6      	b.n	8004b64 <_strtod_l+0x3fc>
 8004bb6:	9b08      	ldr	r3, [sp, #32]
 8004bb8:	1b75      	subs	r5, r6, r5
 8004bba:	441d      	add	r5, r3
 8004bbc:	2d00      	cmp	r5, #0
 8004bbe:	dd70      	ble.n	8004ca2 <_strtod_l+0x53a>
 8004bc0:	f015 030f 	ands.w	r3, r5, #15
 8004bc4:	d00a      	beq.n	8004bdc <_strtod_l+0x474>
 8004bc6:	494b      	ldr	r1, [pc, #300]	; (8004cf4 <_strtod_l+0x58c>)
 8004bc8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004bcc:	4642      	mov	r2, r8
 8004bce:	464b      	mov	r3, r9
 8004bd0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004bd4:	f7fb fd10 	bl	80005f8 <__aeabi_dmul>
 8004bd8:	4680      	mov	r8, r0
 8004bda:	4689      	mov	r9, r1
 8004bdc:	f035 050f 	bics.w	r5, r5, #15
 8004be0:	d04d      	beq.n	8004c7e <_strtod_l+0x516>
 8004be2:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 8004be6:	dd22      	ble.n	8004c2e <_strtod_l+0x4c6>
 8004be8:	2500      	movs	r5, #0
 8004bea:	46ab      	mov	fp, r5
 8004bec:	9509      	str	r5, [sp, #36]	; 0x24
 8004bee:	9505      	str	r5, [sp, #20]
 8004bf0:	2322      	movs	r3, #34	; 0x22
 8004bf2:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8004cfc <_strtod_l+0x594>
 8004bf6:	6023      	str	r3, [r4, #0]
 8004bf8:	f04f 0800 	mov.w	r8, #0
 8004bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	f43f aded 	beq.w	80047de <_strtod_l+0x76>
 8004c04:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004c06:	4620      	mov	r0, r4
 8004c08:	f7ff f924 	bl	8003e54 <_Bfree>
 8004c0c:	9905      	ldr	r1, [sp, #20]
 8004c0e:	4620      	mov	r0, r4
 8004c10:	f7ff f920 	bl	8003e54 <_Bfree>
 8004c14:	4659      	mov	r1, fp
 8004c16:	4620      	mov	r0, r4
 8004c18:	f7ff f91c 	bl	8003e54 <_Bfree>
 8004c1c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c1e:	4620      	mov	r0, r4
 8004c20:	f7ff f918 	bl	8003e54 <_Bfree>
 8004c24:	4629      	mov	r1, r5
 8004c26:	4620      	mov	r0, r4
 8004c28:	f7ff f914 	bl	8003e54 <_Bfree>
 8004c2c:	e5d7      	b.n	80047de <_strtod_l+0x76>
 8004c2e:	4b32      	ldr	r3, [pc, #200]	; (8004cf8 <_strtod_l+0x590>)
 8004c30:	9304      	str	r3, [sp, #16]
 8004c32:	2300      	movs	r3, #0
 8004c34:	112d      	asrs	r5, r5, #4
 8004c36:	4640      	mov	r0, r8
 8004c38:	4649      	mov	r1, r9
 8004c3a:	469a      	mov	sl, r3
 8004c3c:	2d01      	cmp	r5, #1
 8004c3e:	dc21      	bgt.n	8004c84 <_strtod_l+0x51c>
 8004c40:	b10b      	cbz	r3, 8004c46 <_strtod_l+0x4de>
 8004c42:	4680      	mov	r8, r0
 8004c44:	4689      	mov	r9, r1
 8004c46:	492c      	ldr	r1, [pc, #176]	; (8004cf8 <_strtod_l+0x590>)
 8004c48:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8004c4c:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8004c50:	4642      	mov	r2, r8
 8004c52:	464b      	mov	r3, r9
 8004c54:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004c58:	f7fb fcce 	bl	80005f8 <__aeabi_dmul>
 8004c5c:	4b27      	ldr	r3, [pc, #156]	; (8004cfc <_strtod_l+0x594>)
 8004c5e:	460a      	mov	r2, r1
 8004c60:	400b      	ands	r3, r1
 8004c62:	4927      	ldr	r1, [pc, #156]	; (8004d00 <_strtod_l+0x598>)
 8004c64:	428b      	cmp	r3, r1
 8004c66:	4680      	mov	r8, r0
 8004c68:	d8be      	bhi.n	8004be8 <_strtod_l+0x480>
 8004c6a:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8004c6e:	428b      	cmp	r3, r1
 8004c70:	bf86      	itte	hi
 8004c72:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 8004d04 <_strtod_l+0x59c>
 8004c76:	f04f 38ff 	movhi.w	r8, #4294967295
 8004c7a:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8004c7e:	2300      	movs	r3, #0
 8004c80:	9304      	str	r3, [sp, #16]
 8004c82:	e07b      	b.n	8004d7c <_strtod_l+0x614>
 8004c84:	07ea      	lsls	r2, r5, #31
 8004c86:	d505      	bpl.n	8004c94 <_strtod_l+0x52c>
 8004c88:	9b04      	ldr	r3, [sp, #16]
 8004c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c8e:	f7fb fcb3 	bl	80005f8 <__aeabi_dmul>
 8004c92:	2301      	movs	r3, #1
 8004c94:	9a04      	ldr	r2, [sp, #16]
 8004c96:	3208      	adds	r2, #8
 8004c98:	f10a 0a01 	add.w	sl, sl, #1
 8004c9c:	106d      	asrs	r5, r5, #1
 8004c9e:	9204      	str	r2, [sp, #16]
 8004ca0:	e7cc      	b.n	8004c3c <_strtod_l+0x4d4>
 8004ca2:	d0ec      	beq.n	8004c7e <_strtod_l+0x516>
 8004ca4:	426d      	negs	r5, r5
 8004ca6:	f015 020f 	ands.w	r2, r5, #15
 8004caa:	d00a      	beq.n	8004cc2 <_strtod_l+0x55a>
 8004cac:	4b11      	ldr	r3, [pc, #68]	; (8004cf4 <_strtod_l+0x58c>)
 8004cae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004cb2:	4640      	mov	r0, r8
 8004cb4:	4649      	mov	r1, r9
 8004cb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004cba:	f7fb fdc7 	bl	800084c <__aeabi_ddiv>
 8004cbe:	4680      	mov	r8, r0
 8004cc0:	4689      	mov	r9, r1
 8004cc2:	112d      	asrs	r5, r5, #4
 8004cc4:	d0db      	beq.n	8004c7e <_strtod_l+0x516>
 8004cc6:	2d1f      	cmp	r5, #31
 8004cc8:	dd1e      	ble.n	8004d08 <_strtod_l+0x5a0>
 8004cca:	2500      	movs	r5, #0
 8004ccc:	46ab      	mov	fp, r5
 8004cce:	9509      	str	r5, [sp, #36]	; 0x24
 8004cd0:	9505      	str	r5, [sp, #20]
 8004cd2:	2322      	movs	r3, #34	; 0x22
 8004cd4:	f04f 0800 	mov.w	r8, #0
 8004cd8:	f04f 0900 	mov.w	r9, #0
 8004cdc:	6023      	str	r3, [r4, #0]
 8004cde:	e78d      	b.n	8004bfc <_strtod_l+0x494>
 8004ce0:	08006990 	.word	0x08006990
 8004ce4:	08006bbc 	.word	0x08006bbc
 8004ce8:	08006988 	.word	0x08006988
 8004cec:	080069bf 	.word	0x080069bf
 8004cf0:	08006c4c 	.word	0x08006c4c
 8004cf4:	08006ad0 	.word	0x08006ad0
 8004cf8:	08006aa8 	.word	0x08006aa8
 8004cfc:	7ff00000 	.word	0x7ff00000
 8004d00:	7ca00000 	.word	0x7ca00000
 8004d04:	7fefffff 	.word	0x7fefffff
 8004d08:	f015 0310 	ands.w	r3, r5, #16
 8004d0c:	bf18      	it	ne
 8004d0e:	236a      	movne	r3, #106	; 0x6a
 8004d10:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 80050b4 <_strtod_l+0x94c>
 8004d14:	9304      	str	r3, [sp, #16]
 8004d16:	4640      	mov	r0, r8
 8004d18:	4649      	mov	r1, r9
 8004d1a:	2300      	movs	r3, #0
 8004d1c:	07ea      	lsls	r2, r5, #31
 8004d1e:	d504      	bpl.n	8004d2a <_strtod_l+0x5c2>
 8004d20:	e9da 2300 	ldrd	r2, r3, [sl]
 8004d24:	f7fb fc68 	bl	80005f8 <__aeabi_dmul>
 8004d28:	2301      	movs	r3, #1
 8004d2a:	106d      	asrs	r5, r5, #1
 8004d2c:	f10a 0a08 	add.w	sl, sl, #8
 8004d30:	d1f4      	bne.n	8004d1c <_strtod_l+0x5b4>
 8004d32:	b10b      	cbz	r3, 8004d38 <_strtod_l+0x5d0>
 8004d34:	4680      	mov	r8, r0
 8004d36:	4689      	mov	r9, r1
 8004d38:	9b04      	ldr	r3, [sp, #16]
 8004d3a:	b1bb      	cbz	r3, 8004d6c <_strtod_l+0x604>
 8004d3c:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8004d40:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004d44:	2b00      	cmp	r3, #0
 8004d46:	4649      	mov	r1, r9
 8004d48:	dd10      	ble.n	8004d6c <_strtod_l+0x604>
 8004d4a:	2b1f      	cmp	r3, #31
 8004d4c:	f340 811e 	ble.w	8004f8c <_strtod_l+0x824>
 8004d50:	2b34      	cmp	r3, #52	; 0x34
 8004d52:	bfde      	ittt	le
 8004d54:	f04f 33ff 	movle.w	r3, #4294967295
 8004d58:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8004d5c:	4093      	lslle	r3, r2
 8004d5e:	f04f 0800 	mov.w	r8, #0
 8004d62:	bfcc      	ite	gt
 8004d64:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8004d68:	ea03 0901 	andle.w	r9, r3, r1
 8004d6c:	2200      	movs	r2, #0
 8004d6e:	2300      	movs	r3, #0
 8004d70:	4640      	mov	r0, r8
 8004d72:	4649      	mov	r1, r9
 8004d74:	f7fb fea8 	bl	8000ac8 <__aeabi_dcmpeq>
 8004d78:	2800      	cmp	r0, #0
 8004d7a:	d1a6      	bne.n	8004cca <_strtod_l+0x562>
 8004d7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d7e:	9300      	str	r3, [sp, #0]
 8004d80:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004d82:	4633      	mov	r3, r6
 8004d84:	465a      	mov	r2, fp
 8004d86:	4620      	mov	r0, r4
 8004d88:	f7ff f8cc 	bl	8003f24 <__s2b>
 8004d8c:	9009      	str	r0, [sp, #36]	; 0x24
 8004d8e:	2800      	cmp	r0, #0
 8004d90:	f43f af2a 	beq.w	8004be8 <_strtod_l+0x480>
 8004d94:	9a08      	ldr	r2, [sp, #32]
 8004d96:	9b05      	ldr	r3, [sp, #20]
 8004d98:	2a00      	cmp	r2, #0
 8004d9a:	eba3 0307 	sub.w	r3, r3, r7
 8004d9e:	bfa8      	it	ge
 8004da0:	2300      	movge	r3, #0
 8004da2:	930c      	str	r3, [sp, #48]	; 0x30
 8004da4:	2500      	movs	r5, #0
 8004da6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8004daa:	9312      	str	r3, [sp, #72]	; 0x48
 8004dac:	46ab      	mov	fp, r5
 8004dae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004db0:	4620      	mov	r0, r4
 8004db2:	6859      	ldr	r1, [r3, #4]
 8004db4:	f7ff f80e 	bl	8003dd4 <_Balloc>
 8004db8:	9005      	str	r0, [sp, #20]
 8004dba:	2800      	cmp	r0, #0
 8004dbc:	f43f af18 	beq.w	8004bf0 <_strtod_l+0x488>
 8004dc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004dc2:	691a      	ldr	r2, [r3, #16]
 8004dc4:	3202      	adds	r2, #2
 8004dc6:	f103 010c 	add.w	r1, r3, #12
 8004dca:	0092      	lsls	r2, r2, #2
 8004dcc:	300c      	adds	r0, #12
 8004dce:	f000 fd87 	bl	80058e0 <memcpy>
 8004dd2:	ec49 8b10 	vmov	d0, r8, r9
 8004dd6:	aa18      	add	r2, sp, #96	; 0x60
 8004dd8:	a917      	add	r1, sp, #92	; 0x5c
 8004dda:	4620      	mov	r0, r4
 8004ddc:	f7ff fbd6 	bl	800458c <__d2b>
 8004de0:	ec49 8b18 	vmov	d8, r8, r9
 8004de4:	9016      	str	r0, [sp, #88]	; 0x58
 8004de6:	2800      	cmp	r0, #0
 8004de8:	f43f af02 	beq.w	8004bf0 <_strtod_l+0x488>
 8004dec:	2101      	movs	r1, #1
 8004dee:	4620      	mov	r0, r4
 8004df0:	f7ff f930 	bl	8004054 <__i2b>
 8004df4:	4683      	mov	fp, r0
 8004df6:	2800      	cmp	r0, #0
 8004df8:	f43f aefa 	beq.w	8004bf0 <_strtod_l+0x488>
 8004dfc:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8004dfe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8004e00:	2e00      	cmp	r6, #0
 8004e02:	bfab      	itete	ge
 8004e04:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 8004e06:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 8004e08:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8004e0a:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 8004e0e:	bfac      	ite	ge
 8004e10:	eb06 0a03 	addge.w	sl, r6, r3
 8004e14:	1b9f      	sublt	r7, r3, r6
 8004e16:	9b04      	ldr	r3, [sp, #16]
 8004e18:	1af6      	subs	r6, r6, r3
 8004e1a:	4416      	add	r6, r2
 8004e1c:	4ba0      	ldr	r3, [pc, #640]	; (80050a0 <_strtod_l+0x938>)
 8004e1e:	3e01      	subs	r6, #1
 8004e20:	429e      	cmp	r6, r3
 8004e22:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004e26:	f280 80c4 	bge.w	8004fb2 <_strtod_l+0x84a>
 8004e2a:	1b9b      	subs	r3, r3, r6
 8004e2c:	2b1f      	cmp	r3, #31
 8004e2e:	eba2 0203 	sub.w	r2, r2, r3
 8004e32:	f04f 0101 	mov.w	r1, #1
 8004e36:	f300 80b0 	bgt.w	8004f9a <_strtod_l+0x832>
 8004e3a:	fa01 f303 	lsl.w	r3, r1, r3
 8004e3e:	930e      	str	r3, [sp, #56]	; 0x38
 8004e40:	2300      	movs	r3, #0
 8004e42:	930d      	str	r3, [sp, #52]	; 0x34
 8004e44:	eb0a 0602 	add.w	r6, sl, r2
 8004e48:	9b04      	ldr	r3, [sp, #16]
 8004e4a:	45b2      	cmp	sl, r6
 8004e4c:	4417      	add	r7, r2
 8004e4e:	441f      	add	r7, r3
 8004e50:	4653      	mov	r3, sl
 8004e52:	bfa8      	it	ge
 8004e54:	4633      	movge	r3, r6
 8004e56:	42bb      	cmp	r3, r7
 8004e58:	bfa8      	it	ge
 8004e5a:	463b      	movge	r3, r7
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	bfc2      	ittt	gt
 8004e60:	1af6      	subgt	r6, r6, r3
 8004e62:	1aff      	subgt	r7, r7, r3
 8004e64:	ebaa 0a03 	subgt.w	sl, sl, r3
 8004e68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004e6a:	2b00      	cmp	r3, #0
 8004e6c:	dd17      	ble.n	8004e9e <_strtod_l+0x736>
 8004e6e:	4659      	mov	r1, fp
 8004e70:	461a      	mov	r2, r3
 8004e72:	4620      	mov	r0, r4
 8004e74:	f7ff f9ae 	bl	80041d4 <__pow5mult>
 8004e78:	4683      	mov	fp, r0
 8004e7a:	2800      	cmp	r0, #0
 8004e7c:	f43f aeb8 	beq.w	8004bf0 <_strtod_l+0x488>
 8004e80:	4601      	mov	r1, r0
 8004e82:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004e84:	4620      	mov	r0, r4
 8004e86:	f7ff f8fb 	bl	8004080 <__multiply>
 8004e8a:	900b      	str	r0, [sp, #44]	; 0x2c
 8004e8c:	2800      	cmp	r0, #0
 8004e8e:	f43f aeaf 	beq.w	8004bf0 <_strtod_l+0x488>
 8004e92:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004e94:	4620      	mov	r0, r4
 8004e96:	f7fe ffdd 	bl	8003e54 <_Bfree>
 8004e9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004e9c:	9316      	str	r3, [sp, #88]	; 0x58
 8004e9e:	2e00      	cmp	r6, #0
 8004ea0:	f300 808c 	bgt.w	8004fbc <_strtod_l+0x854>
 8004ea4:	9b08      	ldr	r3, [sp, #32]
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	dd08      	ble.n	8004ebc <_strtod_l+0x754>
 8004eaa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004eac:	9905      	ldr	r1, [sp, #20]
 8004eae:	4620      	mov	r0, r4
 8004eb0:	f7ff f990 	bl	80041d4 <__pow5mult>
 8004eb4:	9005      	str	r0, [sp, #20]
 8004eb6:	2800      	cmp	r0, #0
 8004eb8:	f43f ae9a 	beq.w	8004bf0 <_strtod_l+0x488>
 8004ebc:	2f00      	cmp	r7, #0
 8004ebe:	dd08      	ble.n	8004ed2 <_strtod_l+0x76a>
 8004ec0:	9905      	ldr	r1, [sp, #20]
 8004ec2:	463a      	mov	r2, r7
 8004ec4:	4620      	mov	r0, r4
 8004ec6:	f7ff f9df 	bl	8004288 <__lshift>
 8004eca:	9005      	str	r0, [sp, #20]
 8004ecc:	2800      	cmp	r0, #0
 8004ece:	f43f ae8f 	beq.w	8004bf0 <_strtod_l+0x488>
 8004ed2:	f1ba 0f00 	cmp.w	sl, #0
 8004ed6:	dd08      	ble.n	8004eea <_strtod_l+0x782>
 8004ed8:	4659      	mov	r1, fp
 8004eda:	4652      	mov	r2, sl
 8004edc:	4620      	mov	r0, r4
 8004ede:	f7ff f9d3 	bl	8004288 <__lshift>
 8004ee2:	4683      	mov	fp, r0
 8004ee4:	2800      	cmp	r0, #0
 8004ee6:	f43f ae83 	beq.w	8004bf0 <_strtod_l+0x488>
 8004eea:	9a05      	ldr	r2, [sp, #20]
 8004eec:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004eee:	4620      	mov	r0, r4
 8004ef0:	f7ff fa52 	bl	8004398 <__mdiff>
 8004ef4:	4605      	mov	r5, r0
 8004ef6:	2800      	cmp	r0, #0
 8004ef8:	f43f ae7a 	beq.w	8004bf0 <_strtod_l+0x488>
 8004efc:	68c3      	ldr	r3, [r0, #12]
 8004efe:	930b      	str	r3, [sp, #44]	; 0x2c
 8004f00:	2300      	movs	r3, #0
 8004f02:	60c3      	str	r3, [r0, #12]
 8004f04:	4659      	mov	r1, fp
 8004f06:	f7ff fa2b 	bl	8004360 <__mcmp>
 8004f0a:	2800      	cmp	r0, #0
 8004f0c:	da60      	bge.n	8004fd0 <_strtod_l+0x868>
 8004f0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004f10:	ea53 0308 	orrs.w	r3, r3, r8
 8004f14:	f040 8084 	bne.w	8005020 <_strtod_l+0x8b8>
 8004f18:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004f1c:	2b00      	cmp	r3, #0
 8004f1e:	d17f      	bne.n	8005020 <_strtod_l+0x8b8>
 8004f20:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004f24:	0d1b      	lsrs	r3, r3, #20
 8004f26:	051b      	lsls	r3, r3, #20
 8004f28:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004f2c:	d978      	bls.n	8005020 <_strtod_l+0x8b8>
 8004f2e:	696b      	ldr	r3, [r5, #20]
 8004f30:	b913      	cbnz	r3, 8004f38 <_strtod_l+0x7d0>
 8004f32:	692b      	ldr	r3, [r5, #16]
 8004f34:	2b01      	cmp	r3, #1
 8004f36:	dd73      	ble.n	8005020 <_strtod_l+0x8b8>
 8004f38:	4629      	mov	r1, r5
 8004f3a:	2201      	movs	r2, #1
 8004f3c:	4620      	mov	r0, r4
 8004f3e:	f7ff f9a3 	bl	8004288 <__lshift>
 8004f42:	4659      	mov	r1, fp
 8004f44:	4605      	mov	r5, r0
 8004f46:	f7ff fa0b 	bl	8004360 <__mcmp>
 8004f4a:	2800      	cmp	r0, #0
 8004f4c:	dd68      	ble.n	8005020 <_strtod_l+0x8b8>
 8004f4e:	9904      	ldr	r1, [sp, #16]
 8004f50:	4a54      	ldr	r2, [pc, #336]	; (80050a4 <_strtod_l+0x93c>)
 8004f52:	464b      	mov	r3, r9
 8004f54:	2900      	cmp	r1, #0
 8004f56:	f000 8084 	beq.w	8005062 <_strtod_l+0x8fa>
 8004f5a:	ea02 0109 	and.w	r1, r2, r9
 8004f5e:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004f62:	dc7e      	bgt.n	8005062 <_strtod_l+0x8fa>
 8004f64:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004f68:	f77f aeb3 	ble.w	8004cd2 <_strtod_l+0x56a>
 8004f6c:	4b4e      	ldr	r3, [pc, #312]	; (80050a8 <_strtod_l+0x940>)
 8004f6e:	4640      	mov	r0, r8
 8004f70:	4649      	mov	r1, r9
 8004f72:	2200      	movs	r2, #0
 8004f74:	f7fb fb40 	bl	80005f8 <__aeabi_dmul>
 8004f78:	4b4a      	ldr	r3, [pc, #296]	; (80050a4 <_strtod_l+0x93c>)
 8004f7a:	400b      	ands	r3, r1
 8004f7c:	4680      	mov	r8, r0
 8004f7e:	4689      	mov	r9, r1
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	f47f ae3f 	bne.w	8004c04 <_strtod_l+0x49c>
 8004f86:	2322      	movs	r3, #34	; 0x22
 8004f88:	6023      	str	r3, [r4, #0]
 8004f8a:	e63b      	b.n	8004c04 <_strtod_l+0x49c>
 8004f8c:	f04f 32ff 	mov.w	r2, #4294967295
 8004f90:	fa02 f303 	lsl.w	r3, r2, r3
 8004f94:	ea03 0808 	and.w	r8, r3, r8
 8004f98:	e6e8      	b.n	8004d6c <_strtod_l+0x604>
 8004f9a:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 8004f9e:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 8004fa2:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 8004fa6:	36e2      	adds	r6, #226	; 0xe2
 8004fa8:	fa01 f306 	lsl.w	r3, r1, r6
 8004fac:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 8004fb0:	e748      	b.n	8004e44 <_strtod_l+0x6dc>
 8004fb2:	2100      	movs	r1, #0
 8004fb4:	2301      	movs	r3, #1
 8004fb6:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 8004fba:	e743      	b.n	8004e44 <_strtod_l+0x6dc>
 8004fbc:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004fbe:	4632      	mov	r2, r6
 8004fc0:	4620      	mov	r0, r4
 8004fc2:	f7ff f961 	bl	8004288 <__lshift>
 8004fc6:	9016      	str	r0, [sp, #88]	; 0x58
 8004fc8:	2800      	cmp	r0, #0
 8004fca:	f47f af6b 	bne.w	8004ea4 <_strtod_l+0x73c>
 8004fce:	e60f      	b.n	8004bf0 <_strtod_l+0x488>
 8004fd0:	46ca      	mov	sl, r9
 8004fd2:	d171      	bne.n	80050b8 <_strtod_l+0x950>
 8004fd4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004fd6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004fda:	b352      	cbz	r2, 8005032 <_strtod_l+0x8ca>
 8004fdc:	4a33      	ldr	r2, [pc, #204]	; (80050ac <_strtod_l+0x944>)
 8004fde:	4293      	cmp	r3, r2
 8004fe0:	d12a      	bne.n	8005038 <_strtod_l+0x8d0>
 8004fe2:	9b04      	ldr	r3, [sp, #16]
 8004fe4:	4641      	mov	r1, r8
 8004fe6:	b1fb      	cbz	r3, 8005028 <_strtod_l+0x8c0>
 8004fe8:	4b2e      	ldr	r3, [pc, #184]	; (80050a4 <_strtod_l+0x93c>)
 8004fea:	ea09 0303 	and.w	r3, r9, r3
 8004fee:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004ff2:	f04f 32ff 	mov.w	r2, #4294967295
 8004ff6:	d81a      	bhi.n	800502e <_strtod_l+0x8c6>
 8004ff8:	0d1b      	lsrs	r3, r3, #20
 8004ffa:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004ffe:	fa02 f303 	lsl.w	r3, r2, r3
 8005002:	4299      	cmp	r1, r3
 8005004:	d118      	bne.n	8005038 <_strtod_l+0x8d0>
 8005006:	4b2a      	ldr	r3, [pc, #168]	; (80050b0 <_strtod_l+0x948>)
 8005008:	459a      	cmp	sl, r3
 800500a:	d102      	bne.n	8005012 <_strtod_l+0x8aa>
 800500c:	3101      	adds	r1, #1
 800500e:	f43f adef 	beq.w	8004bf0 <_strtod_l+0x488>
 8005012:	4b24      	ldr	r3, [pc, #144]	; (80050a4 <_strtod_l+0x93c>)
 8005014:	ea0a 0303 	and.w	r3, sl, r3
 8005018:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 800501c:	f04f 0800 	mov.w	r8, #0
 8005020:	9b04      	ldr	r3, [sp, #16]
 8005022:	2b00      	cmp	r3, #0
 8005024:	d1a2      	bne.n	8004f6c <_strtod_l+0x804>
 8005026:	e5ed      	b.n	8004c04 <_strtod_l+0x49c>
 8005028:	f04f 33ff 	mov.w	r3, #4294967295
 800502c:	e7e9      	b.n	8005002 <_strtod_l+0x89a>
 800502e:	4613      	mov	r3, r2
 8005030:	e7e7      	b.n	8005002 <_strtod_l+0x89a>
 8005032:	ea53 0308 	orrs.w	r3, r3, r8
 8005036:	d08a      	beq.n	8004f4e <_strtod_l+0x7e6>
 8005038:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800503a:	b1e3      	cbz	r3, 8005076 <_strtod_l+0x90e>
 800503c:	ea13 0f0a 	tst.w	r3, sl
 8005040:	d0ee      	beq.n	8005020 <_strtod_l+0x8b8>
 8005042:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005044:	9a04      	ldr	r2, [sp, #16]
 8005046:	4640      	mov	r0, r8
 8005048:	4649      	mov	r1, r9
 800504a:	b1c3      	cbz	r3, 800507e <_strtod_l+0x916>
 800504c:	f7ff fb6f 	bl	800472e <sulp>
 8005050:	4602      	mov	r2, r0
 8005052:	460b      	mov	r3, r1
 8005054:	ec51 0b18 	vmov	r0, r1, d8
 8005058:	f7fb f918 	bl	800028c <__adddf3>
 800505c:	4680      	mov	r8, r0
 800505e:	4689      	mov	r9, r1
 8005060:	e7de      	b.n	8005020 <_strtod_l+0x8b8>
 8005062:	4013      	ands	r3, r2
 8005064:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8005068:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800506c:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8005070:	f04f 38ff 	mov.w	r8, #4294967295
 8005074:	e7d4      	b.n	8005020 <_strtod_l+0x8b8>
 8005076:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005078:	ea13 0f08 	tst.w	r3, r8
 800507c:	e7e0      	b.n	8005040 <_strtod_l+0x8d8>
 800507e:	f7ff fb56 	bl	800472e <sulp>
 8005082:	4602      	mov	r2, r0
 8005084:	460b      	mov	r3, r1
 8005086:	ec51 0b18 	vmov	r0, r1, d8
 800508a:	f7fb f8fd 	bl	8000288 <__aeabi_dsub>
 800508e:	2200      	movs	r2, #0
 8005090:	2300      	movs	r3, #0
 8005092:	4680      	mov	r8, r0
 8005094:	4689      	mov	r9, r1
 8005096:	f7fb fd17 	bl	8000ac8 <__aeabi_dcmpeq>
 800509a:	2800      	cmp	r0, #0
 800509c:	d0c0      	beq.n	8005020 <_strtod_l+0x8b8>
 800509e:	e618      	b.n	8004cd2 <_strtod_l+0x56a>
 80050a0:	fffffc02 	.word	0xfffffc02
 80050a4:	7ff00000 	.word	0x7ff00000
 80050a8:	39500000 	.word	0x39500000
 80050ac:	000fffff 	.word	0x000fffff
 80050b0:	7fefffff 	.word	0x7fefffff
 80050b4:	08006bd0 	.word	0x08006bd0
 80050b8:	4659      	mov	r1, fp
 80050ba:	4628      	mov	r0, r5
 80050bc:	f7ff fac0 	bl	8004640 <__ratio>
 80050c0:	ec57 6b10 	vmov	r6, r7, d0
 80050c4:	ee10 0a10 	vmov	r0, s0
 80050c8:	2200      	movs	r2, #0
 80050ca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80050ce:	4639      	mov	r1, r7
 80050d0:	f7fb fd0e 	bl	8000af0 <__aeabi_dcmple>
 80050d4:	2800      	cmp	r0, #0
 80050d6:	d071      	beq.n	80051bc <_strtod_l+0xa54>
 80050d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80050da:	2b00      	cmp	r3, #0
 80050dc:	d17c      	bne.n	80051d8 <_strtod_l+0xa70>
 80050de:	f1b8 0f00 	cmp.w	r8, #0
 80050e2:	d15a      	bne.n	800519a <_strtod_l+0xa32>
 80050e4:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80050e8:	2b00      	cmp	r3, #0
 80050ea:	d15d      	bne.n	80051a8 <_strtod_l+0xa40>
 80050ec:	4b90      	ldr	r3, [pc, #576]	; (8005330 <_strtod_l+0xbc8>)
 80050ee:	2200      	movs	r2, #0
 80050f0:	4630      	mov	r0, r6
 80050f2:	4639      	mov	r1, r7
 80050f4:	f7fb fcf2 	bl	8000adc <__aeabi_dcmplt>
 80050f8:	2800      	cmp	r0, #0
 80050fa:	d15c      	bne.n	80051b6 <_strtod_l+0xa4e>
 80050fc:	4630      	mov	r0, r6
 80050fe:	4639      	mov	r1, r7
 8005100:	4b8c      	ldr	r3, [pc, #560]	; (8005334 <_strtod_l+0xbcc>)
 8005102:	2200      	movs	r2, #0
 8005104:	f7fb fa78 	bl	80005f8 <__aeabi_dmul>
 8005108:	4606      	mov	r6, r0
 800510a:	460f      	mov	r7, r1
 800510c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8005110:	9606      	str	r6, [sp, #24]
 8005112:	9307      	str	r3, [sp, #28]
 8005114:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005118:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 800511c:	4b86      	ldr	r3, [pc, #536]	; (8005338 <_strtod_l+0xbd0>)
 800511e:	ea0a 0303 	and.w	r3, sl, r3
 8005122:	930d      	str	r3, [sp, #52]	; 0x34
 8005124:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005126:	4b85      	ldr	r3, [pc, #532]	; (800533c <_strtod_l+0xbd4>)
 8005128:	429a      	cmp	r2, r3
 800512a:	f040 8090 	bne.w	800524e <_strtod_l+0xae6>
 800512e:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 8005132:	ec49 8b10 	vmov	d0, r8, r9
 8005136:	f7ff f9b9 	bl	80044ac <__ulp>
 800513a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800513e:	ec51 0b10 	vmov	r0, r1, d0
 8005142:	f7fb fa59 	bl	80005f8 <__aeabi_dmul>
 8005146:	4642      	mov	r2, r8
 8005148:	464b      	mov	r3, r9
 800514a:	f7fb f89f 	bl	800028c <__adddf3>
 800514e:	460b      	mov	r3, r1
 8005150:	4979      	ldr	r1, [pc, #484]	; (8005338 <_strtod_l+0xbd0>)
 8005152:	4a7b      	ldr	r2, [pc, #492]	; (8005340 <_strtod_l+0xbd8>)
 8005154:	4019      	ands	r1, r3
 8005156:	4291      	cmp	r1, r2
 8005158:	4680      	mov	r8, r0
 800515a:	d944      	bls.n	80051e6 <_strtod_l+0xa7e>
 800515c:	ee18 2a90 	vmov	r2, s17
 8005160:	4b78      	ldr	r3, [pc, #480]	; (8005344 <_strtod_l+0xbdc>)
 8005162:	429a      	cmp	r2, r3
 8005164:	d104      	bne.n	8005170 <_strtod_l+0xa08>
 8005166:	ee18 3a10 	vmov	r3, s16
 800516a:	3301      	adds	r3, #1
 800516c:	f43f ad40 	beq.w	8004bf0 <_strtod_l+0x488>
 8005170:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8005344 <_strtod_l+0xbdc>
 8005174:	f04f 38ff 	mov.w	r8, #4294967295
 8005178:	9916      	ldr	r1, [sp, #88]	; 0x58
 800517a:	4620      	mov	r0, r4
 800517c:	f7fe fe6a 	bl	8003e54 <_Bfree>
 8005180:	9905      	ldr	r1, [sp, #20]
 8005182:	4620      	mov	r0, r4
 8005184:	f7fe fe66 	bl	8003e54 <_Bfree>
 8005188:	4659      	mov	r1, fp
 800518a:	4620      	mov	r0, r4
 800518c:	f7fe fe62 	bl	8003e54 <_Bfree>
 8005190:	4629      	mov	r1, r5
 8005192:	4620      	mov	r0, r4
 8005194:	f7fe fe5e 	bl	8003e54 <_Bfree>
 8005198:	e609      	b.n	8004dae <_strtod_l+0x646>
 800519a:	f1b8 0f01 	cmp.w	r8, #1
 800519e:	d103      	bne.n	80051a8 <_strtod_l+0xa40>
 80051a0:	f1b9 0f00 	cmp.w	r9, #0
 80051a4:	f43f ad95 	beq.w	8004cd2 <_strtod_l+0x56a>
 80051a8:	ed9f 7b55 	vldr	d7, [pc, #340]	; 8005300 <_strtod_l+0xb98>
 80051ac:	4f60      	ldr	r7, [pc, #384]	; (8005330 <_strtod_l+0xbc8>)
 80051ae:	ed8d 7b06 	vstr	d7, [sp, #24]
 80051b2:	2600      	movs	r6, #0
 80051b4:	e7ae      	b.n	8005114 <_strtod_l+0x9ac>
 80051b6:	4f5f      	ldr	r7, [pc, #380]	; (8005334 <_strtod_l+0xbcc>)
 80051b8:	2600      	movs	r6, #0
 80051ba:	e7a7      	b.n	800510c <_strtod_l+0x9a4>
 80051bc:	4b5d      	ldr	r3, [pc, #372]	; (8005334 <_strtod_l+0xbcc>)
 80051be:	4630      	mov	r0, r6
 80051c0:	4639      	mov	r1, r7
 80051c2:	2200      	movs	r2, #0
 80051c4:	f7fb fa18 	bl	80005f8 <__aeabi_dmul>
 80051c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80051ca:	4606      	mov	r6, r0
 80051cc:	460f      	mov	r7, r1
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d09c      	beq.n	800510c <_strtod_l+0x9a4>
 80051d2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 80051d6:	e79d      	b.n	8005114 <_strtod_l+0x9ac>
 80051d8:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 8005308 <_strtod_l+0xba0>
 80051dc:	ed8d 7b06 	vstr	d7, [sp, #24]
 80051e0:	ec57 6b17 	vmov	r6, r7, d7
 80051e4:	e796      	b.n	8005114 <_strtod_l+0x9ac>
 80051e6:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 80051ea:	9b04      	ldr	r3, [sp, #16]
 80051ec:	46ca      	mov	sl, r9
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d1c2      	bne.n	8005178 <_strtod_l+0xa10>
 80051f2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80051f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80051f8:	0d1b      	lsrs	r3, r3, #20
 80051fa:	051b      	lsls	r3, r3, #20
 80051fc:	429a      	cmp	r2, r3
 80051fe:	d1bb      	bne.n	8005178 <_strtod_l+0xa10>
 8005200:	4630      	mov	r0, r6
 8005202:	4639      	mov	r1, r7
 8005204:	f7fb fd40 	bl	8000c88 <__aeabi_d2lz>
 8005208:	f7fb f9c8 	bl	800059c <__aeabi_l2d>
 800520c:	4602      	mov	r2, r0
 800520e:	460b      	mov	r3, r1
 8005210:	4630      	mov	r0, r6
 8005212:	4639      	mov	r1, r7
 8005214:	f7fb f838 	bl	8000288 <__aeabi_dsub>
 8005218:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800521a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800521e:	ea43 0308 	orr.w	r3, r3, r8
 8005222:	4313      	orrs	r3, r2
 8005224:	4606      	mov	r6, r0
 8005226:	460f      	mov	r7, r1
 8005228:	d054      	beq.n	80052d4 <_strtod_l+0xb6c>
 800522a:	a339      	add	r3, pc, #228	; (adr r3, 8005310 <_strtod_l+0xba8>)
 800522c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005230:	f7fb fc54 	bl	8000adc <__aeabi_dcmplt>
 8005234:	2800      	cmp	r0, #0
 8005236:	f47f ace5 	bne.w	8004c04 <_strtod_l+0x49c>
 800523a:	a337      	add	r3, pc, #220	; (adr r3, 8005318 <_strtod_l+0xbb0>)
 800523c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005240:	4630      	mov	r0, r6
 8005242:	4639      	mov	r1, r7
 8005244:	f7fb fc68 	bl	8000b18 <__aeabi_dcmpgt>
 8005248:	2800      	cmp	r0, #0
 800524a:	d095      	beq.n	8005178 <_strtod_l+0xa10>
 800524c:	e4da      	b.n	8004c04 <_strtod_l+0x49c>
 800524e:	9b04      	ldr	r3, [sp, #16]
 8005250:	b333      	cbz	r3, 80052a0 <_strtod_l+0xb38>
 8005252:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005254:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8005258:	d822      	bhi.n	80052a0 <_strtod_l+0xb38>
 800525a:	a331      	add	r3, pc, #196	; (adr r3, 8005320 <_strtod_l+0xbb8>)
 800525c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005260:	4630      	mov	r0, r6
 8005262:	4639      	mov	r1, r7
 8005264:	f7fb fc44 	bl	8000af0 <__aeabi_dcmple>
 8005268:	b1a0      	cbz	r0, 8005294 <_strtod_l+0xb2c>
 800526a:	4639      	mov	r1, r7
 800526c:	4630      	mov	r0, r6
 800526e:	f7fb fc9b 	bl	8000ba8 <__aeabi_d2uiz>
 8005272:	2801      	cmp	r0, #1
 8005274:	bf38      	it	cc
 8005276:	2001      	movcc	r0, #1
 8005278:	f7fb f944 	bl	8000504 <__aeabi_ui2d>
 800527c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800527e:	4606      	mov	r6, r0
 8005280:	460f      	mov	r7, r1
 8005282:	bb23      	cbnz	r3, 80052ce <_strtod_l+0xb66>
 8005284:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005288:	9010      	str	r0, [sp, #64]	; 0x40
 800528a:	9311      	str	r3, [sp, #68]	; 0x44
 800528c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8005290:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8005294:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005296:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005298:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800529c:	1a9b      	subs	r3, r3, r2
 800529e:	930f      	str	r3, [sp, #60]	; 0x3c
 80052a0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80052a4:	eeb0 0a48 	vmov.f32	s0, s16
 80052a8:	eef0 0a68 	vmov.f32	s1, s17
 80052ac:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 80052b0:	f7ff f8fc 	bl	80044ac <__ulp>
 80052b4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80052b8:	ec53 2b10 	vmov	r2, r3, d0
 80052bc:	f7fb f99c 	bl	80005f8 <__aeabi_dmul>
 80052c0:	ec53 2b18 	vmov	r2, r3, d8
 80052c4:	f7fa ffe2 	bl	800028c <__adddf3>
 80052c8:	4680      	mov	r8, r0
 80052ca:	4689      	mov	r9, r1
 80052cc:	e78d      	b.n	80051ea <_strtod_l+0xa82>
 80052ce:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 80052d2:	e7db      	b.n	800528c <_strtod_l+0xb24>
 80052d4:	a314      	add	r3, pc, #80	; (adr r3, 8005328 <_strtod_l+0xbc0>)
 80052d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80052da:	f7fb fbff 	bl	8000adc <__aeabi_dcmplt>
 80052de:	e7b3      	b.n	8005248 <_strtod_l+0xae0>
 80052e0:	2300      	movs	r3, #0
 80052e2:	930a      	str	r3, [sp, #40]	; 0x28
 80052e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80052e6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80052e8:	6013      	str	r3, [r2, #0]
 80052ea:	f7ff ba7c 	b.w	80047e6 <_strtod_l+0x7e>
 80052ee:	2a65      	cmp	r2, #101	; 0x65
 80052f0:	f43f ab75 	beq.w	80049de <_strtod_l+0x276>
 80052f4:	2a45      	cmp	r2, #69	; 0x45
 80052f6:	f43f ab72 	beq.w	80049de <_strtod_l+0x276>
 80052fa:	2301      	movs	r3, #1
 80052fc:	f7ff bbaa 	b.w	8004a54 <_strtod_l+0x2ec>
 8005300:	00000000 	.word	0x00000000
 8005304:	bff00000 	.word	0xbff00000
 8005308:	00000000 	.word	0x00000000
 800530c:	3ff00000 	.word	0x3ff00000
 8005310:	94a03595 	.word	0x94a03595
 8005314:	3fdfffff 	.word	0x3fdfffff
 8005318:	35afe535 	.word	0x35afe535
 800531c:	3fe00000 	.word	0x3fe00000
 8005320:	ffc00000 	.word	0xffc00000
 8005324:	41dfffff 	.word	0x41dfffff
 8005328:	94a03595 	.word	0x94a03595
 800532c:	3fcfffff 	.word	0x3fcfffff
 8005330:	3ff00000 	.word	0x3ff00000
 8005334:	3fe00000 	.word	0x3fe00000
 8005338:	7ff00000 	.word	0x7ff00000
 800533c:	7fe00000 	.word	0x7fe00000
 8005340:	7c9fffff 	.word	0x7c9fffff
 8005344:	7fefffff 	.word	0x7fefffff

08005348 <_strtod_r>:
 8005348:	4b01      	ldr	r3, [pc, #4]	; (8005350 <_strtod_r+0x8>)
 800534a:	f7ff ba0d 	b.w	8004768 <_strtod_l>
 800534e:	bf00      	nop
 8005350:	20000064 	.word	0x20000064

08005354 <_strtol_l.constprop.0>:
 8005354:	2b01      	cmp	r3, #1
 8005356:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800535a:	d001      	beq.n	8005360 <_strtol_l.constprop.0+0xc>
 800535c:	2b24      	cmp	r3, #36	; 0x24
 800535e:	d906      	bls.n	800536e <_strtol_l.constprop.0+0x1a>
 8005360:	f7fd fd8a 	bl	8002e78 <__errno>
 8005364:	2316      	movs	r3, #22
 8005366:	6003      	str	r3, [r0, #0]
 8005368:	2000      	movs	r0, #0
 800536a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800536e:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8005454 <_strtol_l.constprop.0+0x100>
 8005372:	460d      	mov	r5, r1
 8005374:	462e      	mov	r6, r5
 8005376:	f815 4b01 	ldrb.w	r4, [r5], #1
 800537a:	f81c 7004 	ldrb.w	r7, [ip, r4]
 800537e:	f017 0708 	ands.w	r7, r7, #8
 8005382:	d1f7      	bne.n	8005374 <_strtol_l.constprop.0+0x20>
 8005384:	2c2d      	cmp	r4, #45	; 0x2d
 8005386:	d132      	bne.n	80053ee <_strtol_l.constprop.0+0x9a>
 8005388:	782c      	ldrb	r4, [r5, #0]
 800538a:	2701      	movs	r7, #1
 800538c:	1cb5      	adds	r5, r6, #2
 800538e:	2b00      	cmp	r3, #0
 8005390:	d05b      	beq.n	800544a <_strtol_l.constprop.0+0xf6>
 8005392:	2b10      	cmp	r3, #16
 8005394:	d109      	bne.n	80053aa <_strtol_l.constprop.0+0x56>
 8005396:	2c30      	cmp	r4, #48	; 0x30
 8005398:	d107      	bne.n	80053aa <_strtol_l.constprop.0+0x56>
 800539a:	782c      	ldrb	r4, [r5, #0]
 800539c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80053a0:	2c58      	cmp	r4, #88	; 0x58
 80053a2:	d14d      	bne.n	8005440 <_strtol_l.constprop.0+0xec>
 80053a4:	786c      	ldrb	r4, [r5, #1]
 80053a6:	2310      	movs	r3, #16
 80053a8:	3502      	adds	r5, #2
 80053aa:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 80053ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80053b2:	f04f 0e00 	mov.w	lr, #0
 80053b6:	fbb8 f9f3 	udiv	r9, r8, r3
 80053ba:	4676      	mov	r6, lr
 80053bc:	fb03 8a19 	mls	sl, r3, r9, r8
 80053c0:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80053c4:	f1bc 0f09 	cmp.w	ip, #9
 80053c8:	d816      	bhi.n	80053f8 <_strtol_l.constprop.0+0xa4>
 80053ca:	4664      	mov	r4, ip
 80053cc:	42a3      	cmp	r3, r4
 80053ce:	dd24      	ble.n	800541a <_strtol_l.constprop.0+0xc6>
 80053d0:	f1be 3fff 	cmp.w	lr, #4294967295
 80053d4:	d008      	beq.n	80053e8 <_strtol_l.constprop.0+0x94>
 80053d6:	45b1      	cmp	r9, r6
 80053d8:	d31c      	bcc.n	8005414 <_strtol_l.constprop.0+0xc0>
 80053da:	d101      	bne.n	80053e0 <_strtol_l.constprop.0+0x8c>
 80053dc:	45a2      	cmp	sl, r4
 80053de:	db19      	blt.n	8005414 <_strtol_l.constprop.0+0xc0>
 80053e0:	fb06 4603 	mla	r6, r6, r3, r4
 80053e4:	f04f 0e01 	mov.w	lr, #1
 80053e8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80053ec:	e7e8      	b.n	80053c0 <_strtol_l.constprop.0+0x6c>
 80053ee:	2c2b      	cmp	r4, #43	; 0x2b
 80053f0:	bf04      	itt	eq
 80053f2:	782c      	ldrbeq	r4, [r5, #0]
 80053f4:	1cb5      	addeq	r5, r6, #2
 80053f6:	e7ca      	b.n	800538e <_strtol_l.constprop.0+0x3a>
 80053f8:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 80053fc:	f1bc 0f19 	cmp.w	ip, #25
 8005400:	d801      	bhi.n	8005406 <_strtol_l.constprop.0+0xb2>
 8005402:	3c37      	subs	r4, #55	; 0x37
 8005404:	e7e2      	b.n	80053cc <_strtol_l.constprop.0+0x78>
 8005406:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800540a:	f1bc 0f19 	cmp.w	ip, #25
 800540e:	d804      	bhi.n	800541a <_strtol_l.constprop.0+0xc6>
 8005410:	3c57      	subs	r4, #87	; 0x57
 8005412:	e7db      	b.n	80053cc <_strtol_l.constprop.0+0x78>
 8005414:	f04f 3eff 	mov.w	lr, #4294967295
 8005418:	e7e6      	b.n	80053e8 <_strtol_l.constprop.0+0x94>
 800541a:	f1be 3fff 	cmp.w	lr, #4294967295
 800541e:	d105      	bne.n	800542c <_strtol_l.constprop.0+0xd8>
 8005420:	2322      	movs	r3, #34	; 0x22
 8005422:	6003      	str	r3, [r0, #0]
 8005424:	4646      	mov	r6, r8
 8005426:	b942      	cbnz	r2, 800543a <_strtol_l.constprop.0+0xe6>
 8005428:	4630      	mov	r0, r6
 800542a:	e79e      	b.n	800536a <_strtol_l.constprop.0+0x16>
 800542c:	b107      	cbz	r7, 8005430 <_strtol_l.constprop.0+0xdc>
 800542e:	4276      	negs	r6, r6
 8005430:	2a00      	cmp	r2, #0
 8005432:	d0f9      	beq.n	8005428 <_strtol_l.constprop.0+0xd4>
 8005434:	f1be 0f00 	cmp.w	lr, #0
 8005438:	d000      	beq.n	800543c <_strtol_l.constprop.0+0xe8>
 800543a:	1e69      	subs	r1, r5, #1
 800543c:	6011      	str	r1, [r2, #0]
 800543e:	e7f3      	b.n	8005428 <_strtol_l.constprop.0+0xd4>
 8005440:	2430      	movs	r4, #48	; 0x30
 8005442:	2b00      	cmp	r3, #0
 8005444:	d1b1      	bne.n	80053aa <_strtol_l.constprop.0+0x56>
 8005446:	2308      	movs	r3, #8
 8005448:	e7af      	b.n	80053aa <_strtol_l.constprop.0+0x56>
 800544a:	2c30      	cmp	r4, #48	; 0x30
 800544c:	d0a5      	beq.n	800539a <_strtol_l.constprop.0+0x46>
 800544e:	230a      	movs	r3, #10
 8005450:	e7ab      	b.n	80053aa <_strtol_l.constprop.0+0x56>
 8005452:	bf00      	nop
 8005454:	08006883 	.word	0x08006883

08005458 <_strtol_r>:
 8005458:	f7ff bf7c 	b.w	8005354 <_strtol_l.constprop.0>

0800545c <__ssputs_r>:
 800545c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005460:	688e      	ldr	r6, [r1, #8]
 8005462:	461f      	mov	r7, r3
 8005464:	42be      	cmp	r6, r7
 8005466:	680b      	ldr	r3, [r1, #0]
 8005468:	4682      	mov	sl, r0
 800546a:	460c      	mov	r4, r1
 800546c:	4690      	mov	r8, r2
 800546e:	d82c      	bhi.n	80054ca <__ssputs_r+0x6e>
 8005470:	898a      	ldrh	r2, [r1, #12]
 8005472:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005476:	d026      	beq.n	80054c6 <__ssputs_r+0x6a>
 8005478:	6965      	ldr	r5, [r4, #20]
 800547a:	6909      	ldr	r1, [r1, #16]
 800547c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005480:	eba3 0901 	sub.w	r9, r3, r1
 8005484:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005488:	1c7b      	adds	r3, r7, #1
 800548a:	444b      	add	r3, r9
 800548c:	106d      	asrs	r5, r5, #1
 800548e:	429d      	cmp	r5, r3
 8005490:	bf38      	it	cc
 8005492:	461d      	movcc	r5, r3
 8005494:	0553      	lsls	r3, r2, #21
 8005496:	d527      	bpl.n	80054e8 <__ssputs_r+0x8c>
 8005498:	4629      	mov	r1, r5
 800549a:	f7fe fc0f 	bl	8003cbc <_malloc_r>
 800549e:	4606      	mov	r6, r0
 80054a0:	b360      	cbz	r0, 80054fc <__ssputs_r+0xa0>
 80054a2:	6921      	ldr	r1, [r4, #16]
 80054a4:	464a      	mov	r2, r9
 80054a6:	f000 fa1b 	bl	80058e0 <memcpy>
 80054aa:	89a3      	ldrh	r3, [r4, #12]
 80054ac:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80054b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80054b4:	81a3      	strh	r3, [r4, #12]
 80054b6:	6126      	str	r6, [r4, #16]
 80054b8:	6165      	str	r5, [r4, #20]
 80054ba:	444e      	add	r6, r9
 80054bc:	eba5 0509 	sub.w	r5, r5, r9
 80054c0:	6026      	str	r6, [r4, #0]
 80054c2:	60a5      	str	r5, [r4, #8]
 80054c4:	463e      	mov	r6, r7
 80054c6:	42be      	cmp	r6, r7
 80054c8:	d900      	bls.n	80054cc <__ssputs_r+0x70>
 80054ca:	463e      	mov	r6, r7
 80054cc:	6820      	ldr	r0, [r4, #0]
 80054ce:	4632      	mov	r2, r6
 80054d0:	4641      	mov	r1, r8
 80054d2:	f000 f9c9 	bl	8005868 <memmove>
 80054d6:	68a3      	ldr	r3, [r4, #8]
 80054d8:	1b9b      	subs	r3, r3, r6
 80054da:	60a3      	str	r3, [r4, #8]
 80054dc:	6823      	ldr	r3, [r4, #0]
 80054de:	4433      	add	r3, r6
 80054e0:	6023      	str	r3, [r4, #0]
 80054e2:	2000      	movs	r0, #0
 80054e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80054e8:	462a      	mov	r2, r5
 80054ea:	f000 fdae 	bl	800604a <_realloc_r>
 80054ee:	4606      	mov	r6, r0
 80054f0:	2800      	cmp	r0, #0
 80054f2:	d1e0      	bne.n	80054b6 <__ssputs_r+0x5a>
 80054f4:	6921      	ldr	r1, [r4, #16]
 80054f6:	4650      	mov	r0, sl
 80054f8:	f7fe fb6c 	bl	8003bd4 <_free_r>
 80054fc:	230c      	movs	r3, #12
 80054fe:	f8ca 3000 	str.w	r3, [sl]
 8005502:	89a3      	ldrh	r3, [r4, #12]
 8005504:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005508:	81a3      	strh	r3, [r4, #12]
 800550a:	f04f 30ff 	mov.w	r0, #4294967295
 800550e:	e7e9      	b.n	80054e4 <__ssputs_r+0x88>

08005510 <_svfiprintf_r>:
 8005510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005514:	4698      	mov	r8, r3
 8005516:	898b      	ldrh	r3, [r1, #12]
 8005518:	061b      	lsls	r3, r3, #24
 800551a:	b09d      	sub	sp, #116	; 0x74
 800551c:	4607      	mov	r7, r0
 800551e:	460d      	mov	r5, r1
 8005520:	4614      	mov	r4, r2
 8005522:	d50e      	bpl.n	8005542 <_svfiprintf_r+0x32>
 8005524:	690b      	ldr	r3, [r1, #16]
 8005526:	b963      	cbnz	r3, 8005542 <_svfiprintf_r+0x32>
 8005528:	2140      	movs	r1, #64	; 0x40
 800552a:	f7fe fbc7 	bl	8003cbc <_malloc_r>
 800552e:	6028      	str	r0, [r5, #0]
 8005530:	6128      	str	r0, [r5, #16]
 8005532:	b920      	cbnz	r0, 800553e <_svfiprintf_r+0x2e>
 8005534:	230c      	movs	r3, #12
 8005536:	603b      	str	r3, [r7, #0]
 8005538:	f04f 30ff 	mov.w	r0, #4294967295
 800553c:	e0d0      	b.n	80056e0 <_svfiprintf_r+0x1d0>
 800553e:	2340      	movs	r3, #64	; 0x40
 8005540:	616b      	str	r3, [r5, #20]
 8005542:	2300      	movs	r3, #0
 8005544:	9309      	str	r3, [sp, #36]	; 0x24
 8005546:	2320      	movs	r3, #32
 8005548:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800554c:	f8cd 800c 	str.w	r8, [sp, #12]
 8005550:	2330      	movs	r3, #48	; 0x30
 8005552:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80056f8 <_svfiprintf_r+0x1e8>
 8005556:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800555a:	f04f 0901 	mov.w	r9, #1
 800555e:	4623      	mov	r3, r4
 8005560:	469a      	mov	sl, r3
 8005562:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005566:	b10a      	cbz	r2, 800556c <_svfiprintf_r+0x5c>
 8005568:	2a25      	cmp	r2, #37	; 0x25
 800556a:	d1f9      	bne.n	8005560 <_svfiprintf_r+0x50>
 800556c:	ebba 0b04 	subs.w	fp, sl, r4
 8005570:	d00b      	beq.n	800558a <_svfiprintf_r+0x7a>
 8005572:	465b      	mov	r3, fp
 8005574:	4622      	mov	r2, r4
 8005576:	4629      	mov	r1, r5
 8005578:	4638      	mov	r0, r7
 800557a:	f7ff ff6f 	bl	800545c <__ssputs_r>
 800557e:	3001      	adds	r0, #1
 8005580:	f000 80a9 	beq.w	80056d6 <_svfiprintf_r+0x1c6>
 8005584:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005586:	445a      	add	r2, fp
 8005588:	9209      	str	r2, [sp, #36]	; 0x24
 800558a:	f89a 3000 	ldrb.w	r3, [sl]
 800558e:	2b00      	cmp	r3, #0
 8005590:	f000 80a1 	beq.w	80056d6 <_svfiprintf_r+0x1c6>
 8005594:	2300      	movs	r3, #0
 8005596:	f04f 32ff 	mov.w	r2, #4294967295
 800559a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800559e:	f10a 0a01 	add.w	sl, sl, #1
 80055a2:	9304      	str	r3, [sp, #16]
 80055a4:	9307      	str	r3, [sp, #28]
 80055a6:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80055aa:	931a      	str	r3, [sp, #104]	; 0x68
 80055ac:	4654      	mov	r4, sl
 80055ae:	2205      	movs	r2, #5
 80055b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80055b4:	4850      	ldr	r0, [pc, #320]	; (80056f8 <_svfiprintf_r+0x1e8>)
 80055b6:	f7fa fe0b 	bl	80001d0 <memchr>
 80055ba:	9a04      	ldr	r2, [sp, #16]
 80055bc:	b9d8      	cbnz	r0, 80055f6 <_svfiprintf_r+0xe6>
 80055be:	06d0      	lsls	r0, r2, #27
 80055c0:	bf44      	itt	mi
 80055c2:	2320      	movmi	r3, #32
 80055c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80055c8:	0711      	lsls	r1, r2, #28
 80055ca:	bf44      	itt	mi
 80055cc:	232b      	movmi	r3, #43	; 0x2b
 80055ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80055d2:	f89a 3000 	ldrb.w	r3, [sl]
 80055d6:	2b2a      	cmp	r3, #42	; 0x2a
 80055d8:	d015      	beq.n	8005606 <_svfiprintf_r+0xf6>
 80055da:	9a07      	ldr	r2, [sp, #28]
 80055dc:	4654      	mov	r4, sl
 80055de:	2000      	movs	r0, #0
 80055e0:	f04f 0c0a 	mov.w	ip, #10
 80055e4:	4621      	mov	r1, r4
 80055e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80055ea:	3b30      	subs	r3, #48	; 0x30
 80055ec:	2b09      	cmp	r3, #9
 80055ee:	d94d      	bls.n	800568c <_svfiprintf_r+0x17c>
 80055f0:	b1b0      	cbz	r0, 8005620 <_svfiprintf_r+0x110>
 80055f2:	9207      	str	r2, [sp, #28]
 80055f4:	e014      	b.n	8005620 <_svfiprintf_r+0x110>
 80055f6:	eba0 0308 	sub.w	r3, r0, r8
 80055fa:	fa09 f303 	lsl.w	r3, r9, r3
 80055fe:	4313      	orrs	r3, r2
 8005600:	9304      	str	r3, [sp, #16]
 8005602:	46a2      	mov	sl, r4
 8005604:	e7d2      	b.n	80055ac <_svfiprintf_r+0x9c>
 8005606:	9b03      	ldr	r3, [sp, #12]
 8005608:	1d19      	adds	r1, r3, #4
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	9103      	str	r1, [sp, #12]
 800560e:	2b00      	cmp	r3, #0
 8005610:	bfbb      	ittet	lt
 8005612:	425b      	neglt	r3, r3
 8005614:	f042 0202 	orrlt.w	r2, r2, #2
 8005618:	9307      	strge	r3, [sp, #28]
 800561a:	9307      	strlt	r3, [sp, #28]
 800561c:	bfb8      	it	lt
 800561e:	9204      	strlt	r2, [sp, #16]
 8005620:	7823      	ldrb	r3, [r4, #0]
 8005622:	2b2e      	cmp	r3, #46	; 0x2e
 8005624:	d10c      	bne.n	8005640 <_svfiprintf_r+0x130>
 8005626:	7863      	ldrb	r3, [r4, #1]
 8005628:	2b2a      	cmp	r3, #42	; 0x2a
 800562a:	d134      	bne.n	8005696 <_svfiprintf_r+0x186>
 800562c:	9b03      	ldr	r3, [sp, #12]
 800562e:	1d1a      	adds	r2, r3, #4
 8005630:	681b      	ldr	r3, [r3, #0]
 8005632:	9203      	str	r2, [sp, #12]
 8005634:	2b00      	cmp	r3, #0
 8005636:	bfb8      	it	lt
 8005638:	f04f 33ff 	movlt.w	r3, #4294967295
 800563c:	3402      	adds	r4, #2
 800563e:	9305      	str	r3, [sp, #20]
 8005640:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8005708 <_svfiprintf_r+0x1f8>
 8005644:	7821      	ldrb	r1, [r4, #0]
 8005646:	2203      	movs	r2, #3
 8005648:	4650      	mov	r0, sl
 800564a:	f7fa fdc1 	bl	80001d0 <memchr>
 800564e:	b138      	cbz	r0, 8005660 <_svfiprintf_r+0x150>
 8005650:	9b04      	ldr	r3, [sp, #16]
 8005652:	eba0 000a 	sub.w	r0, r0, sl
 8005656:	2240      	movs	r2, #64	; 0x40
 8005658:	4082      	lsls	r2, r0
 800565a:	4313      	orrs	r3, r2
 800565c:	3401      	adds	r4, #1
 800565e:	9304      	str	r3, [sp, #16]
 8005660:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005664:	4825      	ldr	r0, [pc, #148]	; (80056fc <_svfiprintf_r+0x1ec>)
 8005666:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800566a:	2206      	movs	r2, #6
 800566c:	f7fa fdb0 	bl	80001d0 <memchr>
 8005670:	2800      	cmp	r0, #0
 8005672:	d038      	beq.n	80056e6 <_svfiprintf_r+0x1d6>
 8005674:	4b22      	ldr	r3, [pc, #136]	; (8005700 <_svfiprintf_r+0x1f0>)
 8005676:	bb1b      	cbnz	r3, 80056c0 <_svfiprintf_r+0x1b0>
 8005678:	9b03      	ldr	r3, [sp, #12]
 800567a:	3307      	adds	r3, #7
 800567c:	f023 0307 	bic.w	r3, r3, #7
 8005680:	3308      	adds	r3, #8
 8005682:	9303      	str	r3, [sp, #12]
 8005684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005686:	4433      	add	r3, r6
 8005688:	9309      	str	r3, [sp, #36]	; 0x24
 800568a:	e768      	b.n	800555e <_svfiprintf_r+0x4e>
 800568c:	fb0c 3202 	mla	r2, ip, r2, r3
 8005690:	460c      	mov	r4, r1
 8005692:	2001      	movs	r0, #1
 8005694:	e7a6      	b.n	80055e4 <_svfiprintf_r+0xd4>
 8005696:	2300      	movs	r3, #0
 8005698:	3401      	adds	r4, #1
 800569a:	9305      	str	r3, [sp, #20]
 800569c:	4619      	mov	r1, r3
 800569e:	f04f 0c0a 	mov.w	ip, #10
 80056a2:	4620      	mov	r0, r4
 80056a4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80056a8:	3a30      	subs	r2, #48	; 0x30
 80056aa:	2a09      	cmp	r2, #9
 80056ac:	d903      	bls.n	80056b6 <_svfiprintf_r+0x1a6>
 80056ae:	2b00      	cmp	r3, #0
 80056b0:	d0c6      	beq.n	8005640 <_svfiprintf_r+0x130>
 80056b2:	9105      	str	r1, [sp, #20]
 80056b4:	e7c4      	b.n	8005640 <_svfiprintf_r+0x130>
 80056b6:	fb0c 2101 	mla	r1, ip, r1, r2
 80056ba:	4604      	mov	r4, r0
 80056bc:	2301      	movs	r3, #1
 80056be:	e7f0      	b.n	80056a2 <_svfiprintf_r+0x192>
 80056c0:	ab03      	add	r3, sp, #12
 80056c2:	9300      	str	r3, [sp, #0]
 80056c4:	462a      	mov	r2, r5
 80056c6:	4b0f      	ldr	r3, [pc, #60]	; (8005704 <_svfiprintf_r+0x1f4>)
 80056c8:	a904      	add	r1, sp, #16
 80056ca:	4638      	mov	r0, r7
 80056cc:	f7fc fc66 	bl	8001f9c <_printf_float>
 80056d0:	1c42      	adds	r2, r0, #1
 80056d2:	4606      	mov	r6, r0
 80056d4:	d1d6      	bne.n	8005684 <_svfiprintf_r+0x174>
 80056d6:	89ab      	ldrh	r3, [r5, #12]
 80056d8:	065b      	lsls	r3, r3, #25
 80056da:	f53f af2d 	bmi.w	8005538 <_svfiprintf_r+0x28>
 80056de:	9809      	ldr	r0, [sp, #36]	; 0x24
 80056e0:	b01d      	add	sp, #116	; 0x74
 80056e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80056e6:	ab03      	add	r3, sp, #12
 80056e8:	9300      	str	r3, [sp, #0]
 80056ea:	462a      	mov	r2, r5
 80056ec:	4b05      	ldr	r3, [pc, #20]	; (8005704 <_svfiprintf_r+0x1f4>)
 80056ee:	a904      	add	r1, sp, #16
 80056f0:	4638      	mov	r0, r7
 80056f2:	f7fc fef7 	bl	80024e4 <_printf_i>
 80056f6:	e7eb      	b.n	80056d0 <_svfiprintf_r+0x1c0>
 80056f8:	08006bf8 	.word	0x08006bf8
 80056fc:	08006c02 	.word	0x08006c02
 8005700:	08001f9d 	.word	0x08001f9d
 8005704:	0800545d 	.word	0x0800545d
 8005708:	08006bfe 	.word	0x08006bfe

0800570c <__sflush_r>:
 800570c:	898a      	ldrh	r2, [r1, #12]
 800570e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005712:	4605      	mov	r5, r0
 8005714:	0710      	lsls	r0, r2, #28
 8005716:	460c      	mov	r4, r1
 8005718:	d458      	bmi.n	80057cc <__sflush_r+0xc0>
 800571a:	684b      	ldr	r3, [r1, #4]
 800571c:	2b00      	cmp	r3, #0
 800571e:	dc05      	bgt.n	800572c <__sflush_r+0x20>
 8005720:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005722:	2b00      	cmp	r3, #0
 8005724:	dc02      	bgt.n	800572c <__sflush_r+0x20>
 8005726:	2000      	movs	r0, #0
 8005728:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800572c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800572e:	2e00      	cmp	r6, #0
 8005730:	d0f9      	beq.n	8005726 <__sflush_r+0x1a>
 8005732:	2300      	movs	r3, #0
 8005734:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005738:	682f      	ldr	r7, [r5, #0]
 800573a:	6a21      	ldr	r1, [r4, #32]
 800573c:	602b      	str	r3, [r5, #0]
 800573e:	d032      	beq.n	80057a6 <__sflush_r+0x9a>
 8005740:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005742:	89a3      	ldrh	r3, [r4, #12]
 8005744:	075a      	lsls	r2, r3, #29
 8005746:	d505      	bpl.n	8005754 <__sflush_r+0x48>
 8005748:	6863      	ldr	r3, [r4, #4]
 800574a:	1ac0      	subs	r0, r0, r3
 800574c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800574e:	b10b      	cbz	r3, 8005754 <__sflush_r+0x48>
 8005750:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005752:	1ac0      	subs	r0, r0, r3
 8005754:	2300      	movs	r3, #0
 8005756:	4602      	mov	r2, r0
 8005758:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800575a:	6a21      	ldr	r1, [r4, #32]
 800575c:	4628      	mov	r0, r5
 800575e:	47b0      	blx	r6
 8005760:	1c43      	adds	r3, r0, #1
 8005762:	89a3      	ldrh	r3, [r4, #12]
 8005764:	d106      	bne.n	8005774 <__sflush_r+0x68>
 8005766:	6829      	ldr	r1, [r5, #0]
 8005768:	291d      	cmp	r1, #29
 800576a:	d82b      	bhi.n	80057c4 <__sflush_r+0xb8>
 800576c:	4a29      	ldr	r2, [pc, #164]	; (8005814 <__sflush_r+0x108>)
 800576e:	410a      	asrs	r2, r1
 8005770:	07d6      	lsls	r6, r2, #31
 8005772:	d427      	bmi.n	80057c4 <__sflush_r+0xb8>
 8005774:	2200      	movs	r2, #0
 8005776:	6062      	str	r2, [r4, #4]
 8005778:	04d9      	lsls	r1, r3, #19
 800577a:	6922      	ldr	r2, [r4, #16]
 800577c:	6022      	str	r2, [r4, #0]
 800577e:	d504      	bpl.n	800578a <__sflush_r+0x7e>
 8005780:	1c42      	adds	r2, r0, #1
 8005782:	d101      	bne.n	8005788 <__sflush_r+0x7c>
 8005784:	682b      	ldr	r3, [r5, #0]
 8005786:	b903      	cbnz	r3, 800578a <__sflush_r+0x7e>
 8005788:	6560      	str	r0, [r4, #84]	; 0x54
 800578a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800578c:	602f      	str	r7, [r5, #0]
 800578e:	2900      	cmp	r1, #0
 8005790:	d0c9      	beq.n	8005726 <__sflush_r+0x1a>
 8005792:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005796:	4299      	cmp	r1, r3
 8005798:	d002      	beq.n	80057a0 <__sflush_r+0x94>
 800579a:	4628      	mov	r0, r5
 800579c:	f7fe fa1a 	bl	8003bd4 <_free_r>
 80057a0:	2000      	movs	r0, #0
 80057a2:	6360      	str	r0, [r4, #52]	; 0x34
 80057a4:	e7c0      	b.n	8005728 <__sflush_r+0x1c>
 80057a6:	2301      	movs	r3, #1
 80057a8:	4628      	mov	r0, r5
 80057aa:	47b0      	blx	r6
 80057ac:	1c41      	adds	r1, r0, #1
 80057ae:	d1c8      	bne.n	8005742 <__sflush_r+0x36>
 80057b0:	682b      	ldr	r3, [r5, #0]
 80057b2:	2b00      	cmp	r3, #0
 80057b4:	d0c5      	beq.n	8005742 <__sflush_r+0x36>
 80057b6:	2b1d      	cmp	r3, #29
 80057b8:	d001      	beq.n	80057be <__sflush_r+0xb2>
 80057ba:	2b16      	cmp	r3, #22
 80057bc:	d101      	bne.n	80057c2 <__sflush_r+0xb6>
 80057be:	602f      	str	r7, [r5, #0]
 80057c0:	e7b1      	b.n	8005726 <__sflush_r+0x1a>
 80057c2:	89a3      	ldrh	r3, [r4, #12]
 80057c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80057c8:	81a3      	strh	r3, [r4, #12]
 80057ca:	e7ad      	b.n	8005728 <__sflush_r+0x1c>
 80057cc:	690f      	ldr	r7, [r1, #16]
 80057ce:	2f00      	cmp	r7, #0
 80057d0:	d0a9      	beq.n	8005726 <__sflush_r+0x1a>
 80057d2:	0793      	lsls	r3, r2, #30
 80057d4:	680e      	ldr	r6, [r1, #0]
 80057d6:	bf08      	it	eq
 80057d8:	694b      	ldreq	r3, [r1, #20]
 80057da:	600f      	str	r7, [r1, #0]
 80057dc:	bf18      	it	ne
 80057de:	2300      	movne	r3, #0
 80057e0:	eba6 0807 	sub.w	r8, r6, r7
 80057e4:	608b      	str	r3, [r1, #8]
 80057e6:	f1b8 0f00 	cmp.w	r8, #0
 80057ea:	dd9c      	ble.n	8005726 <__sflush_r+0x1a>
 80057ec:	6a21      	ldr	r1, [r4, #32]
 80057ee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80057f0:	4643      	mov	r3, r8
 80057f2:	463a      	mov	r2, r7
 80057f4:	4628      	mov	r0, r5
 80057f6:	47b0      	blx	r6
 80057f8:	2800      	cmp	r0, #0
 80057fa:	dc06      	bgt.n	800580a <__sflush_r+0xfe>
 80057fc:	89a3      	ldrh	r3, [r4, #12]
 80057fe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005802:	81a3      	strh	r3, [r4, #12]
 8005804:	f04f 30ff 	mov.w	r0, #4294967295
 8005808:	e78e      	b.n	8005728 <__sflush_r+0x1c>
 800580a:	4407      	add	r7, r0
 800580c:	eba8 0800 	sub.w	r8, r8, r0
 8005810:	e7e9      	b.n	80057e6 <__sflush_r+0xda>
 8005812:	bf00      	nop
 8005814:	dfbffffe 	.word	0xdfbffffe

08005818 <_fflush_r>:
 8005818:	b538      	push	{r3, r4, r5, lr}
 800581a:	690b      	ldr	r3, [r1, #16]
 800581c:	4605      	mov	r5, r0
 800581e:	460c      	mov	r4, r1
 8005820:	b913      	cbnz	r3, 8005828 <_fflush_r+0x10>
 8005822:	2500      	movs	r5, #0
 8005824:	4628      	mov	r0, r5
 8005826:	bd38      	pop	{r3, r4, r5, pc}
 8005828:	b118      	cbz	r0, 8005832 <_fflush_r+0x1a>
 800582a:	6a03      	ldr	r3, [r0, #32]
 800582c:	b90b      	cbnz	r3, 8005832 <_fflush_r+0x1a>
 800582e:	f7fd fa17 	bl	8002c60 <__sinit>
 8005832:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005836:	2b00      	cmp	r3, #0
 8005838:	d0f3      	beq.n	8005822 <_fflush_r+0xa>
 800583a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800583c:	07d0      	lsls	r0, r2, #31
 800583e:	d404      	bmi.n	800584a <_fflush_r+0x32>
 8005840:	0599      	lsls	r1, r3, #22
 8005842:	d402      	bmi.n	800584a <_fflush_r+0x32>
 8005844:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005846:	f7fd fb42 	bl	8002ece <__retarget_lock_acquire_recursive>
 800584a:	4628      	mov	r0, r5
 800584c:	4621      	mov	r1, r4
 800584e:	f7ff ff5d 	bl	800570c <__sflush_r>
 8005852:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005854:	07da      	lsls	r2, r3, #31
 8005856:	4605      	mov	r5, r0
 8005858:	d4e4      	bmi.n	8005824 <_fflush_r+0xc>
 800585a:	89a3      	ldrh	r3, [r4, #12]
 800585c:	059b      	lsls	r3, r3, #22
 800585e:	d4e1      	bmi.n	8005824 <_fflush_r+0xc>
 8005860:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005862:	f7fd fb35 	bl	8002ed0 <__retarget_lock_release_recursive>
 8005866:	e7dd      	b.n	8005824 <_fflush_r+0xc>

08005868 <memmove>:
 8005868:	4288      	cmp	r0, r1
 800586a:	b510      	push	{r4, lr}
 800586c:	eb01 0402 	add.w	r4, r1, r2
 8005870:	d902      	bls.n	8005878 <memmove+0x10>
 8005872:	4284      	cmp	r4, r0
 8005874:	4623      	mov	r3, r4
 8005876:	d807      	bhi.n	8005888 <memmove+0x20>
 8005878:	1e43      	subs	r3, r0, #1
 800587a:	42a1      	cmp	r1, r4
 800587c:	d008      	beq.n	8005890 <memmove+0x28>
 800587e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005882:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005886:	e7f8      	b.n	800587a <memmove+0x12>
 8005888:	4402      	add	r2, r0
 800588a:	4601      	mov	r1, r0
 800588c:	428a      	cmp	r2, r1
 800588e:	d100      	bne.n	8005892 <memmove+0x2a>
 8005890:	bd10      	pop	{r4, pc}
 8005892:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005896:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800589a:	e7f7      	b.n	800588c <memmove+0x24>

0800589c <strncmp>:
 800589c:	b510      	push	{r4, lr}
 800589e:	b16a      	cbz	r2, 80058bc <strncmp+0x20>
 80058a0:	3901      	subs	r1, #1
 80058a2:	1884      	adds	r4, r0, r2
 80058a4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80058a8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80058ac:	429a      	cmp	r2, r3
 80058ae:	d103      	bne.n	80058b8 <strncmp+0x1c>
 80058b0:	42a0      	cmp	r0, r4
 80058b2:	d001      	beq.n	80058b8 <strncmp+0x1c>
 80058b4:	2a00      	cmp	r2, #0
 80058b6:	d1f5      	bne.n	80058a4 <strncmp+0x8>
 80058b8:	1ad0      	subs	r0, r2, r3
 80058ba:	bd10      	pop	{r4, pc}
 80058bc:	4610      	mov	r0, r2
 80058be:	e7fc      	b.n	80058ba <strncmp+0x1e>

080058c0 <_sbrk_r>:
 80058c0:	b538      	push	{r3, r4, r5, lr}
 80058c2:	4d06      	ldr	r5, [pc, #24]	; (80058dc <_sbrk_r+0x1c>)
 80058c4:	2300      	movs	r3, #0
 80058c6:	4604      	mov	r4, r0
 80058c8:	4608      	mov	r0, r1
 80058ca:	602b      	str	r3, [r5, #0]
 80058cc:	f7fc f886 	bl	80019dc <_sbrk>
 80058d0:	1c43      	adds	r3, r0, #1
 80058d2:	d102      	bne.n	80058da <_sbrk_r+0x1a>
 80058d4:	682b      	ldr	r3, [r5, #0]
 80058d6:	b103      	cbz	r3, 80058da <_sbrk_r+0x1a>
 80058d8:	6023      	str	r3, [r4, #0]
 80058da:	bd38      	pop	{r3, r4, r5, pc}
 80058dc:	20000740 	.word	0x20000740

080058e0 <memcpy>:
 80058e0:	440a      	add	r2, r1
 80058e2:	4291      	cmp	r1, r2
 80058e4:	f100 33ff 	add.w	r3, r0, #4294967295
 80058e8:	d100      	bne.n	80058ec <memcpy+0xc>
 80058ea:	4770      	bx	lr
 80058ec:	b510      	push	{r4, lr}
 80058ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 80058f2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80058f6:	4291      	cmp	r1, r2
 80058f8:	d1f9      	bne.n	80058ee <memcpy+0xe>
 80058fa:	bd10      	pop	{r4, pc}
 80058fc:	0000      	movs	r0, r0
	...

08005900 <nan>:
 8005900:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8005908 <nan+0x8>
 8005904:	4770      	bx	lr
 8005906:	bf00      	nop
 8005908:	00000000 	.word	0x00000000
 800590c:	7ff80000 	.word	0x7ff80000

08005910 <__assert_func>:
 8005910:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005912:	4614      	mov	r4, r2
 8005914:	461a      	mov	r2, r3
 8005916:	4b09      	ldr	r3, [pc, #36]	; (800593c <__assert_func+0x2c>)
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	4605      	mov	r5, r0
 800591c:	68d8      	ldr	r0, [r3, #12]
 800591e:	b14c      	cbz	r4, 8005934 <__assert_func+0x24>
 8005920:	4b07      	ldr	r3, [pc, #28]	; (8005940 <__assert_func+0x30>)
 8005922:	9100      	str	r1, [sp, #0]
 8005924:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005928:	4906      	ldr	r1, [pc, #24]	; (8005944 <__assert_func+0x34>)
 800592a:	462b      	mov	r3, r5
 800592c:	f000 fbca 	bl	80060c4 <fiprintf>
 8005930:	f000 fbda 	bl	80060e8 <abort>
 8005934:	4b04      	ldr	r3, [pc, #16]	; (8005948 <__assert_func+0x38>)
 8005936:	461c      	mov	r4, r3
 8005938:	e7f3      	b.n	8005922 <__assert_func+0x12>
 800593a:	bf00      	nop
 800593c:	20000060 	.word	0x20000060
 8005940:	08006c11 	.word	0x08006c11
 8005944:	08006c1e 	.word	0x08006c1e
 8005948:	08006c4c 	.word	0x08006c4c

0800594c <_calloc_r>:
 800594c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800594e:	fba1 2402 	umull	r2, r4, r1, r2
 8005952:	b94c      	cbnz	r4, 8005968 <_calloc_r+0x1c>
 8005954:	4611      	mov	r1, r2
 8005956:	9201      	str	r2, [sp, #4]
 8005958:	f7fe f9b0 	bl	8003cbc <_malloc_r>
 800595c:	9a01      	ldr	r2, [sp, #4]
 800595e:	4605      	mov	r5, r0
 8005960:	b930      	cbnz	r0, 8005970 <_calloc_r+0x24>
 8005962:	4628      	mov	r0, r5
 8005964:	b003      	add	sp, #12
 8005966:	bd30      	pop	{r4, r5, pc}
 8005968:	220c      	movs	r2, #12
 800596a:	6002      	str	r2, [r0, #0]
 800596c:	2500      	movs	r5, #0
 800596e:	e7f8      	b.n	8005962 <_calloc_r+0x16>
 8005970:	4621      	mov	r1, r4
 8005972:	f7fd fa2f 	bl	8002dd4 <memset>
 8005976:	e7f4      	b.n	8005962 <_calloc_r+0x16>

08005978 <rshift>:
 8005978:	6903      	ldr	r3, [r0, #16]
 800597a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800597e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005982:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005986:	f100 0414 	add.w	r4, r0, #20
 800598a:	dd45      	ble.n	8005a18 <rshift+0xa0>
 800598c:	f011 011f 	ands.w	r1, r1, #31
 8005990:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005994:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005998:	d10c      	bne.n	80059b4 <rshift+0x3c>
 800599a:	f100 0710 	add.w	r7, r0, #16
 800599e:	4629      	mov	r1, r5
 80059a0:	42b1      	cmp	r1, r6
 80059a2:	d334      	bcc.n	8005a0e <rshift+0x96>
 80059a4:	1a9b      	subs	r3, r3, r2
 80059a6:	009b      	lsls	r3, r3, #2
 80059a8:	1eea      	subs	r2, r5, #3
 80059aa:	4296      	cmp	r6, r2
 80059ac:	bf38      	it	cc
 80059ae:	2300      	movcc	r3, #0
 80059b0:	4423      	add	r3, r4
 80059b2:	e015      	b.n	80059e0 <rshift+0x68>
 80059b4:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80059b8:	f1c1 0820 	rsb	r8, r1, #32
 80059bc:	40cf      	lsrs	r7, r1
 80059be:	f105 0e04 	add.w	lr, r5, #4
 80059c2:	46a1      	mov	r9, r4
 80059c4:	4576      	cmp	r6, lr
 80059c6:	46f4      	mov	ip, lr
 80059c8:	d815      	bhi.n	80059f6 <rshift+0x7e>
 80059ca:	1a9a      	subs	r2, r3, r2
 80059cc:	0092      	lsls	r2, r2, #2
 80059ce:	3a04      	subs	r2, #4
 80059d0:	3501      	adds	r5, #1
 80059d2:	42ae      	cmp	r6, r5
 80059d4:	bf38      	it	cc
 80059d6:	2200      	movcc	r2, #0
 80059d8:	18a3      	adds	r3, r4, r2
 80059da:	50a7      	str	r7, [r4, r2]
 80059dc:	b107      	cbz	r7, 80059e0 <rshift+0x68>
 80059de:	3304      	adds	r3, #4
 80059e0:	1b1a      	subs	r2, r3, r4
 80059e2:	42a3      	cmp	r3, r4
 80059e4:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80059e8:	bf08      	it	eq
 80059ea:	2300      	moveq	r3, #0
 80059ec:	6102      	str	r2, [r0, #16]
 80059ee:	bf08      	it	eq
 80059f0:	6143      	streq	r3, [r0, #20]
 80059f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80059f6:	f8dc c000 	ldr.w	ip, [ip]
 80059fa:	fa0c fc08 	lsl.w	ip, ip, r8
 80059fe:	ea4c 0707 	orr.w	r7, ip, r7
 8005a02:	f849 7b04 	str.w	r7, [r9], #4
 8005a06:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005a0a:	40cf      	lsrs	r7, r1
 8005a0c:	e7da      	b.n	80059c4 <rshift+0x4c>
 8005a0e:	f851 cb04 	ldr.w	ip, [r1], #4
 8005a12:	f847 cf04 	str.w	ip, [r7, #4]!
 8005a16:	e7c3      	b.n	80059a0 <rshift+0x28>
 8005a18:	4623      	mov	r3, r4
 8005a1a:	e7e1      	b.n	80059e0 <rshift+0x68>

08005a1c <__hexdig_fun>:
 8005a1c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005a20:	2b09      	cmp	r3, #9
 8005a22:	d802      	bhi.n	8005a2a <__hexdig_fun+0xe>
 8005a24:	3820      	subs	r0, #32
 8005a26:	b2c0      	uxtb	r0, r0
 8005a28:	4770      	bx	lr
 8005a2a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005a2e:	2b05      	cmp	r3, #5
 8005a30:	d801      	bhi.n	8005a36 <__hexdig_fun+0x1a>
 8005a32:	3847      	subs	r0, #71	; 0x47
 8005a34:	e7f7      	b.n	8005a26 <__hexdig_fun+0xa>
 8005a36:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005a3a:	2b05      	cmp	r3, #5
 8005a3c:	d801      	bhi.n	8005a42 <__hexdig_fun+0x26>
 8005a3e:	3827      	subs	r0, #39	; 0x27
 8005a40:	e7f1      	b.n	8005a26 <__hexdig_fun+0xa>
 8005a42:	2000      	movs	r0, #0
 8005a44:	4770      	bx	lr
	...

08005a48 <__gethex>:
 8005a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a4c:	4617      	mov	r7, r2
 8005a4e:	680a      	ldr	r2, [r1, #0]
 8005a50:	b085      	sub	sp, #20
 8005a52:	f102 0b02 	add.w	fp, r2, #2
 8005a56:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005a5a:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005a5e:	4681      	mov	r9, r0
 8005a60:	468a      	mov	sl, r1
 8005a62:	9302      	str	r3, [sp, #8]
 8005a64:	32fe      	adds	r2, #254	; 0xfe
 8005a66:	eb02 030b 	add.w	r3, r2, fp
 8005a6a:	46d8      	mov	r8, fp
 8005a6c:	f81b 0b01 	ldrb.w	r0, [fp], #1
 8005a70:	9301      	str	r3, [sp, #4]
 8005a72:	2830      	cmp	r0, #48	; 0x30
 8005a74:	d0f7      	beq.n	8005a66 <__gethex+0x1e>
 8005a76:	f7ff ffd1 	bl	8005a1c <__hexdig_fun>
 8005a7a:	4604      	mov	r4, r0
 8005a7c:	2800      	cmp	r0, #0
 8005a7e:	d138      	bne.n	8005af2 <__gethex+0xaa>
 8005a80:	49a7      	ldr	r1, [pc, #668]	; (8005d20 <__gethex+0x2d8>)
 8005a82:	2201      	movs	r2, #1
 8005a84:	4640      	mov	r0, r8
 8005a86:	f7ff ff09 	bl	800589c <strncmp>
 8005a8a:	4606      	mov	r6, r0
 8005a8c:	2800      	cmp	r0, #0
 8005a8e:	d169      	bne.n	8005b64 <__gethex+0x11c>
 8005a90:	f898 0001 	ldrb.w	r0, [r8, #1]
 8005a94:	465d      	mov	r5, fp
 8005a96:	f7ff ffc1 	bl	8005a1c <__hexdig_fun>
 8005a9a:	2800      	cmp	r0, #0
 8005a9c:	d064      	beq.n	8005b68 <__gethex+0x120>
 8005a9e:	465a      	mov	r2, fp
 8005aa0:	7810      	ldrb	r0, [r2, #0]
 8005aa2:	2830      	cmp	r0, #48	; 0x30
 8005aa4:	4690      	mov	r8, r2
 8005aa6:	f102 0201 	add.w	r2, r2, #1
 8005aaa:	d0f9      	beq.n	8005aa0 <__gethex+0x58>
 8005aac:	f7ff ffb6 	bl	8005a1c <__hexdig_fun>
 8005ab0:	2301      	movs	r3, #1
 8005ab2:	fab0 f480 	clz	r4, r0
 8005ab6:	0964      	lsrs	r4, r4, #5
 8005ab8:	465e      	mov	r6, fp
 8005aba:	9301      	str	r3, [sp, #4]
 8005abc:	4642      	mov	r2, r8
 8005abe:	4615      	mov	r5, r2
 8005ac0:	3201      	adds	r2, #1
 8005ac2:	7828      	ldrb	r0, [r5, #0]
 8005ac4:	f7ff ffaa 	bl	8005a1c <__hexdig_fun>
 8005ac8:	2800      	cmp	r0, #0
 8005aca:	d1f8      	bne.n	8005abe <__gethex+0x76>
 8005acc:	4994      	ldr	r1, [pc, #592]	; (8005d20 <__gethex+0x2d8>)
 8005ace:	2201      	movs	r2, #1
 8005ad0:	4628      	mov	r0, r5
 8005ad2:	f7ff fee3 	bl	800589c <strncmp>
 8005ad6:	b978      	cbnz	r0, 8005af8 <__gethex+0xb0>
 8005ad8:	b946      	cbnz	r6, 8005aec <__gethex+0xa4>
 8005ada:	1c6e      	adds	r6, r5, #1
 8005adc:	4632      	mov	r2, r6
 8005ade:	4615      	mov	r5, r2
 8005ae0:	3201      	adds	r2, #1
 8005ae2:	7828      	ldrb	r0, [r5, #0]
 8005ae4:	f7ff ff9a 	bl	8005a1c <__hexdig_fun>
 8005ae8:	2800      	cmp	r0, #0
 8005aea:	d1f8      	bne.n	8005ade <__gethex+0x96>
 8005aec:	1b73      	subs	r3, r6, r5
 8005aee:	009e      	lsls	r6, r3, #2
 8005af0:	e004      	b.n	8005afc <__gethex+0xb4>
 8005af2:	2400      	movs	r4, #0
 8005af4:	4626      	mov	r6, r4
 8005af6:	e7e1      	b.n	8005abc <__gethex+0x74>
 8005af8:	2e00      	cmp	r6, #0
 8005afa:	d1f7      	bne.n	8005aec <__gethex+0xa4>
 8005afc:	782b      	ldrb	r3, [r5, #0]
 8005afe:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005b02:	2b50      	cmp	r3, #80	; 0x50
 8005b04:	d13d      	bne.n	8005b82 <__gethex+0x13a>
 8005b06:	786b      	ldrb	r3, [r5, #1]
 8005b08:	2b2b      	cmp	r3, #43	; 0x2b
 8005b0a:	d02f      	beq.n	8005b6c <__gethex+0x124>
 8005b0c:	2b2d      	cmp	r3, #45	; 0x2d
 8005b0e:	d031      	beq.n	8005b74 <__gethex+0x12c>
 8005b10:	1c69      	adds	r1, r5, #1
 8005b12:	f04f 0b00 	mov.w	fp, #0
 8005b16:	7808      	ldrb	r0, [r1, #0]
 8005b18:	f7ff ff80 	bl	8005a1c <__hexdig_fun>
 8005b1c:	1e42      	subs	r2, r0, #1
 8005b1e:	b2d2      	uxtb	r2, r2
 8005b20:	2a18      	cmp	r2, #24
 8005b22:	d82e      	bhi.n	8005b82 <__gethex+0x13a>
 8005b24:	f1a0 0210 	sub.w	r2, r0, #16
 8005b28:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005b2c:	f7ff ff76 	bl	8005a1c <__hexdig_fun>
 8005b30:	f100 3cff 	add.w	ip, r0, #4294967295
 8005b34:	fa5f fc8c 	uxtb.w	ip, ip
 8005b38:	f1bc 0f18 	cmp.w	ip, #24
 8005b3c:	d91d      	bls.n	8005b7a <__gethex+0x132>
 8005b3e:	f1bb 0f00 	cmp.w	fp, #0
 8005b42:	d000      	beq.n	8005b46 <__gethex+0xfe>
 8005b44:	4252      	negs	r2, r2
 8005b46:	4416      	add	r6, r2
 8005b48:	f8ca 1000 	str.w	r1, [sl]
 8005b4c:	b1dc      	cbz	r4, 8005b86 <__gethex+0x13e>
 8005b4e:	9b01      	ldr	r3, [sp, #4]
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	bf14      	ite	ne
 8005b54:	f04f 0800 	movne.w	r8, #0
 8005b58:	f04f 0806 	moveq.w	r8, #6
 8005b5c:	4640      	mov	r0, r8
 8005b5e:	b005      	add	sp, #20
 8005b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b64:	4645      	mov	r5, r8
 8005b66:	4626      	mov	r6, r4
 8005b68:	2401      	movs	r4, #1
 8005b6a:	e7c7      	b.n	8005afc <__gethex+0xb4>
 8005b6c:	f04f 0b00 	mov.w	fp, #0
 8005b70:	1ca9      	adds	r1, r5, #2
 8005b72:	e7d0      	b.n	8005b16 <__gethex+0xce>
 8005b74:	f04f 0b01 	mov.w	fp, #1
 8005b78:	e7fa      	b.n	8005b70 <__gethex+0x128>
 8005b7a:	230a      	movs	r3, #10
 8005b7c:	fb03 0002 	mla	r0, r3, r2, r0
 8005b80:	e7d0      	b.n	8005b24 <__gethex+0xdc>
 8005b82:	4629      	mov	r1, r5
 8005b84:	e7e0      	b.n	8005b48 <__gethex+0x100>
 8005b86:	eba5 0308 	sub.w	r3, r5, r8
 8005b8a:	3b01      	subs	r3, #1
 8005b8c:	4621      	mov	r1, r4
 8005b8e:	2b07      	cmp	r3, #7
 8005b90:	dc0a      	bgt.n	8005ba8 <__gethex+0x160>
 8005b92:	4648      	mov	r0, r9
 8005b94:	f7fe f91e 	bl	8003dd4 <_Balloc>
 8005b98:	4604      	mov	r4, r0
 8005b9a:	b940      	cbnz	r0, 8005bae <__gethex+0x166>
 8005b9c:	4b61      	ldr	r3, [pc, #388]	; (8005d24 <__gethex+0x2dc>)
 8005b9e:	4602      	mov	r2, r0
 8005ba0:	21e4      	movs	r1, #228	; 0xe4
 8005ba2:	4861      	ldr	r0, [pc, #388]	; (8005d28 <__gethex+0x2e0>)
 8005ba4:	f7ff feb4 	bl	8005910 <__assert_func>
 8005ba8:	3101      	adds	r1, #1
 8005baa:	105b      	asrs	r3, r3, #1
 8005bac:	e7ef      	b.n	8005b8e <__gethex+0x146>
 8005bae:	f100 0a14 	add.w	sl, r0, #20
 8005bb2:	2300      	movs	r3, #0
 8005bb4:	495a      	ldr	r1, [pc, #360]	; (8005d20 <__gethex+0x2d8>)
 8005bb6:	f8cd a004 	str.w	sl, [sp, #4]
 8005bba:	469b      	mov	fp, r3
 8005bbc:	45a8      	cmp	r8, r5
 8005bbe:	d342      	bcc.n	8005c46 <__gethex+0x1fe>
 8005bc0:	9801      	ldr	r0, [sp, #4]
 8005bc2:	f840 bb04 	str.w	fp, [r0], #4
 8005bc6:	eba0 000a 	sub.w	r0, r0, sl
 8005bca:	1080      	asrs	r0, r0, #2
 8005bcc:	6120      	str	r0, [r4, #16]
 8005bce:	ea4f 1840 	mov.w	r8, r0, lsl #5
 8005bd2:	4658      	mov	r0, fp
 8005bd4:	f7fe f9f0 	bl	8003fb8 <__hi0bits>
 8005bd8:	683d      	ldr	r5, [r7, #0]
 8005bda:	eba8 0000 	sub.w	r0, r8, r0
 8005bde:	42a8      	cmp	r0, r5
 8005be0:	dd59      	ble.n	8005c96 <__gethex+0x24e>
 8005be2:	eba0 0805 	sub.w	r8, r0, r5
 8005be6:	4641      	mov	r1, r8
 8005be8:	4620      	mov	r0, r4
 8005bea:	f7fe fd7f 	bl	80046ec <__any_on>
 8005bee:	4683      	mov	fp, r0
 8005bf0:	b1b8      	cbz	r0, 8005c22 <__gethex+0x1da>
 8005bf2:	f108 33ff 	add.w	r3, r8, #4294967295
 8005bf6:	1159      	asrs	r1, r3, #5
 8005bf8:	f003 021f 	and.w	r2, r3, #31
 8005bfc:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005c00:	f04f 0b01 	mov.w	fp, #1
 8005c04:	fa0b f202 	lsl.w	r2, fp, r2
 8005c08:	420a      	tst	r2, r1
 8005c0a:	d00a      	beq.n	8005c22 <__gethex+0x1da>
 8005c0c:	455b      	cmp	r3, fp
 8005c0e:	dd06      	ble.n	8005c1e <__gethex+0x1d6>
 8005c10:	f1a8 0102 	sub.w	r1, r8, #2
 8005c14:	4620      	mov	r0, r4
 8005c16:	f7fe fd69 	bl	80046ec <__any_on>
 8005c1a:	2800      	cmp	r0, #0
 8005c1c:	d138      	bne.n	8005c90 <__gethex+0x248>
 8005c1e:	f04f 0b02 	mov.w	fp, #2
 8005c22:	4641      	mov	r1, r8
 8005c24:	4620      	mov	r0, r4
 8005c26:	f7ff fea7 	bl	8005978 <rshift>
 8005c2a:	4446      	add	r6, r8
 8005c2c:	68bb      	ldr	r3, [r7, #8]
 8005c2e:	42b3      	cmp	r3, r6
 8005c30:	da41      	bge.n	8005cb6 <__gethex+0x26e>
 8005c32:	4621      	mov	r1, r4
 8005c34:	4648      	mov	r0, r9
 8005c36:	f7fe f90d 	bl	8003e54 <_Bfree>
 8005c3a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005c3c:	2300      	movs	r3, #0
 8005c3e:	6013      	str	r3, [r2, #0]
 8005c40:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 8005c44:	e78a      	b.n	8005b5c <__gethex+0x114>
 8005c46:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 8005c4a:	2a2e      	cmp	r2, #46	; 0x2e
 8005c4c:	d014      	beq.n	8005c78 <__gethex+0x230>
 8005c4e:	2b20      	cmp	r3, #32
 8005c50:	d106      	bne.n	8005c60 <__gethex+0x218>
 8005c52:	9b01      	ldr	r3, [sp, #4]
 8005c54:	f843 bb04 	str.w	fp, [r3], #4
 8005c58:	f04f 0b00 	mov.w	fp, #0
 8005c5c:	9301      	str	r3, [sp, #4]
 8005c5e:	465b      	mov	r3, fp
 8005c60:	7828      	ldrb	r0, [r5, #0]
 8005c62:	9303      	str	r3, [sp, #12]
 8005c64:	f7ff feda 	bl	8005a1c <__hexdig_fun>
 8005c68:	9b03      	ldr	r3, [sp, #12]
 8005c6a:	f000 000f 	and.w	r0, r0, #15
 8005c6e:	4098      	lsls	r0, r3
 8005c70:	ea4b 0b00 	orr.w	fp, fp, r0
 8005c74:	3304      	adds	r3, #4
 8005c76:	e7a1      	b.n	8005bbc <__gethex+0x174>
 8005c78:	45a8      	cmp	r8, r5
 8005c7a:	d8e8      	bhi.n	8005c4e <__gethex+0x206>
 8005c7c:	2201      	movs	r2, #1
 8005c7e:	4628      	mov	r0, r5
 8005c80:	9303      	str	r3, [sp, #12]
 8005c82:	f7ff fe0b 	bl	800589c <strncmp>
 8005c86:	4926      	ldr	r1, [pc, #152]	; (8005d20 <__gethex+0x2d8>)
 8005c88:	9b03      	ldr	r3, [sp, #12]
 8005c8a:	2800      	cmp	r0, #0
 8005c8c:	d1df      	bne.n	8005c4e <__gethex+0x206>
 8005c8e:	e795      	b.n	8005bbc <__gethex+0x174>
 8005c90:	f04f 0b03 	mov.w	fp, #3
 8005c94:	e7c5      	b.n	8005c22 <__gethex+0x1da>
 8005c96:	da0b      	bge.n	8005cb0 <__gethex+0x268>
 8005c98:	eba5 0800 	sub.w	r8, r5, r0
 8005c9c:	4621      	mov	r1, r4
 8005c9e:	4642      	mov	r2, r8
 8005ca0:	4648      	mov	r0, r9
 8005ca2:	f7fe faf1 	bl	8004288 <__lshift>
 8005ca6:	eba6 0608 	sub.w	r6, r6, r8
 8005caa:	4604      	mov	r4, r0
 8005cac:	f100 0a14 	add.w	sl, r0, #20
 8005cb0:	f04f 0b00 	mov.w	fp, #0
 8005cb4:	e7ba      	b.n	8005c2c <__gethex+0x1e4>
 8005cb6:	687b      	ldr	r3, [r7, #4]
 8005cb8:	42b3      	cmp	r3, r6
 8005cba:	dd73      	ble.n	8005da4 <__gethex+0x35c>
 8005cbc:	1b9e      	subs	r6, r3, r6
 8005cbe:	42b5      	cmp	r5, r6
 8005cc0:	dc34      	bgt.n	8005d2c <__gethex+0x2e4>
 8005cc2:	68fb      	ldr	r3, [r7, #12]
 8005cc4:	2b02      	cmp	r3, #2
 8005cc6:	d023      	beq.n	8005d10 <__gethex+0x2c8>
 8005cc8:	2b03      	cmp	r3, #3
 8005cca:	d025      	beq.n	8005d18 <__gethex+0x2d0>
 8005ccc:	2b01      	cmp	r3, #1
 8005cce:	d115      	bne.n	8005cfc <__gethex+0x2b4>
 8005cd0:	42b5      	cmp	r5, r6
 8005cd2:	d113      	bne.n	8005cfc <__gethex+0x2b4>
 8005cd4:	2d01      	cmp	r5, #1
 8005cd6:	d10b      	bne.n	8005cf0 <__gethex+0x2a8>
 8005cd8:	9a02      	ldr	r2, [sp, #8]
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	6013      	str	r3, [r2, #0]
 8005cde:	2301      	movs	r3, #1
 8005ce0:	6123      	str	r3, [r4, #16]
 8005ce2:	f8ca 3000 	str.w	r3, [sl]
 8005ce6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ce8:	f04f 0862 	mov.w	r8, #98	; 0x62
 8005cec:	601c      	str	r4, [r3, #0]
 8005cee:	e735      	b.n	8005b5c <__gethex+0x114>
 8005cf0:	1e69      	subs	r1, r5, #1
 8005cf2:	4620      	mov	r0, r4
 8005cf4:	f7fe fcfa 	bl	80046ec <__any_on>
 8005cf8:	2800      	cmp	r0, #0
 8005cfa:	d1ed      	bne.n	8005cd8 <__gethex+0x290>
 8005cfc:	4621      	mov	r1, r4
 8005cfe:	4648      	mov	r0, r9
 8005d00:	f7fe f8a8 	bl	8003e54 <_Bfree>
 8005d04:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005d06:	2300      	movs	r3, #0
 8005d08:	6013      	str	r3, [r2, #0]
 8005d0a:	f04f 0850 	mov.w	r8, #80	; 0x50
 8005d0e:	e725      	b.n	8005b5c <__gethex+0x114>
 8005d10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d12:	2b00      	cmp	r3, #0
 8005d14:	d1f2      	bne.n	8005cfc <__gethex+0x2b4>
 8005d16:	e7df      	b.n	8005cd8 <__gethex+0x290>
 8005d18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d1dc      	bne.n	8005cd8 <__gethex+0x290>
 8005d1e:	e7ed      	b.n	8005cfc <__gethex+0x2b4>
 8005d20:	08006ba4 	.word	0x08006ba4
 8005d24:	08006a38 	.word	0x08006a38
 8005d28:	08006c4d 	.word	0x08006c4d
 8005d2c:	f106 38ff 	add.w	r8, r6, #4294967295
 8005d30:	f1bb 0f00 	cmp.w	fp, #0
 8005d34:	d133      	bne.n	8005d9e <__gethex+0x356>
 8005d36:	f1b8 0f00 	cmp.w	r8, #0
 8005d3a:	d004      	beq.n	8005d46 <__gethex+0x2fe>
 8005d3c:	4641      	mov	r1, r8
 8005d3e:	4620      	mov	r0, r4
 8005d40:	f7fe fcd4 	bl	80046ec <__any_on>
 8005d44:	4683      	mov	fp, r0
 8005d46:	ea4f 1268 	mov.w	r2, r8, asr #5
 8005d4a:	2301      	movs	r3, #1
 8005d4c:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005d50:	f008 081f 	and.w	r8, r8, #31
 8005d54:	fa03 f308 	lsl.w	r3, r3, r8
 8005d58:	4213      	tst	r3, r2
 8005d5a:	4631      	mov	r1, r6
 8005d5c:	4620      	mov	r0, r4
 8005d5e:	bf18      	it	ne
 8005d60:	f04b 0b02 	orrne.w	fp, fp, #2
 8005d64:	1bad      	subs	r5, r5, r6
 8005d66:	f7ff fe07 	bl	8005978 <rshift>
 8005d6a:	687e      	ldr	r6, [r7, #4]
 8005d6c:	f04f 0802 	mov.w	r8, #2
 8005d70:	f1bb 0f00 	cmp.w	fp, #0
 8005d74:	d04a      	beq.n	8005e0c <__gethex+0x3c4>
 8005d76:	68fb      	ldr	r3, [r7, #12]
 8005d78:	2b02      	cmp	r3, #2
 8005d7a:	d016      	beq.n	8005daa <__gethex+0x362>
 8005d7c:	2b03      	cmp	r3, #3
 8005d7e:	d018      	beq.n	8005db2 <__gethex+0x36a>
 8005d80:	2b01      	cmp	r3, #1
 8005d82:	d109      	bne.n	8005d98 <__gethex+0x350>
 8005d84:	f01b 0f02 	tst.w	fp, #2
 8005d88:	d006      	beq.n	8005d98 <__gethex+0x350>
 8005d8a:	f8da 3000 	ldr.w	r3, [sl]
 8005d8e:	ea4b 0b03 	orr.w	fp, fp, r3
 8005d92:	f01b 0f01 	tst.w	fp, #1
 8005d96:	d10f      	bne.n	8005db8 <__gethex+0x370>
 8005d98:	f048 0810 	orr.w	r8, r8, #16
 8005d9c:	e036      	b.n	8005e0c <__gethex+0x3c4>
 8005d9e:	f04f 0b01 	mov.w	fp, #1
 8005da2:	e7d0      	b.n	8005d46 <__gethex+0x2fe>
 8005da4:	f04f 0801 	mov.w	r8, #1
 8005da8:	e7e2      	b.n	8005d70 <__gethex+0x328>
 8005daa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005dac:	f1c3 0301 	rsb	r3, r3, #1
 8005db0:	930f      	str	r3, [sp, #60]	; 0x3c
 8005db2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005db4:	2b00      	cmp	r3, #0
 8005db6:	d0ef      	beq.n	8005d98 <__gethex+0x350>
 8005db8:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005dbc:	f104 0214 	add.w	r2, r4, #20
 8005dc0:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8005dc4:	9301      	str	r3, [sp, #4]
 8005dc6:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 8005dca:	2300      	movs	r3, #0
 8005dcc:	4694      	mov	ip, r2
 8005dce:	f852 1b04 	ldr.w	r1, [r2], #4
 8005dd2:	f1b1 3fff 	cmp.w	r1, #4294967295
 8005dd6:	d01e      	beq.n	8005e16 <__gethex+0x3ce>
 8005dd8:	3101      	adds	r1, #1
 8005dda:	f8cc 1000 	str.w	r1, [ip]
 8005dde:	f1b8 0f02 	cmp.w	r8, #2
 8005de2:	f104 0214 	add.w	r2, r4, #20
 8005de6:	d13d      	bne.n	8005e64 <__gethex+0x41c>
 8005de8:	683b      	ldr	r3, [r7, #0]
 8005dea:	3b01      	subs	r3, #1
 8005dec:	42ab      	cmp	r3, r5
 8005dee:	d10b      	bne.n	8005e08 <__gethex+0x3c0>
 8005df0:	1169      	asrs	r1, r5, #5
 8005df2:	2301      	movs	r3, #1
 8005df4:	f005 051f 	and.w	r5, r5, #31
 8005df8:	fa03 f505 	lsl.w	r5, r3, r5
 8005dfc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005e00:	421d      	tst	r5, r3
 8005e02:	bf18      	it	ne
 8005e04:	f04f 0801 	movne.w	r8, #1
 8005e08:	f048 0820 	orr.w	r8, r8, #32
 8005e0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005e0e:	601c      	str	r4, [r3, #0]
 8005e10:	9b02      	ldr	r3, [sp, #8]
 8005e12:	601e      	str	r6, [r3, #0]
 8005e14:	e6a2      	b.n	8005b5c <__gethex+0x114>
 8005e16:	4290      	cmp	r0, r2
 8005e18:	f842 3c04 	str.w	r3, [r2, #-4]
 8005e1c:	d8d6      	bhi.n	8005dcc <__gethex+0x384>
 8005e1e:	68a2      	ldr	r2, [r4, #8]
 8005e20:	4593      	cmp	fp, r2
 8005e22:	db17      	blt.n	8005e54 <__gethex+0x40c>
 8005e24:	6861      	ldr	r1, [r4, #4]
 8005e26:	4648      	mov	r0, r9
 8005e28:	3101      	adds	r1, #1
 8005e2a:	f7fd ffd3 	bl	8003dd4 <_Balloc>
 8005e2e:	4682      	mov	sl, r0
 8005e30:	b918      	cbnz	r0, 8005e3a <__gethex+0x3f2>
 8005e32:	4b1b      	ldr	r3, [pc, #108]	; (8005ea0 <__gethex+0x458>)
 8005e34:	4602      	mov	r2, r0
 8005e36:	2184      	movs	r1, #132	; 0x84
 8005e38:	e6b3      	b.n	8005ba2 <__gethex+0x15a>
 8005e3a:	6922      	ldr	r2, [r4, #16]
 8005e3c:	3202      	adds	r2, #2
 8005e3e:	f104 010c 	add.w	r1, r4, #12
 8005e42:	0092      	lsls	r2, r2, #2
 8005e44:	300c      	adds	r0, #12
 8005e46:	f7ff fd4b 	bl	80058e0 <memcpy>
 8005e4a:	4621      	mov	r1, r4
 8005e4c:	4648      	mov	r0, r9
 8005e4e:	f7fe f801 	bl	8003e54 <_Bfree>
 8005e52:	4654      	mov	r4, sl
 8005e54:	6922      	ldr	r2, [r4, #16]
 8005e56:	1c51      	adds	r1, r2, #1
 8005e58:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8005e5c:	6121      	str	r1, [r4, #16]
 8005e5e:	2101      	movs	r1, #1
 8005e60:	6151      	str	r1, [r2, #20]
 8005e62:	e7bc      	b.n	8005dde <__gethex+0x396>
 8005e64:	6921      	ldr	r1, [r4, #16]
 8005e66:	4559      	cmp	r1, fp
 8005e68:	dd0b      	ble.n	8005e82 <__gethex+0x43a>
 8005e6a:	2101      	movs	r1, #1
 8005e6c:	4620      	mov	r0, r4
 8005e6e:	f7ff fd83 	bl	8005978 <rshift>
 8005e72:	68bb      	ldr	r3, [r7, #8]
 8005e74:	3601      	adds	r6, #1
 8005e76:	42b3      	cmp	r3, r6
 8005e78:	f6ff aedb 	blt.w	8005c32 <__gethex+0x1ea>
 8005e7c:	f04f 0801 	mov.w	r8, #1
 8005e80:	e7c2      	b.n	8005e08 <__gethex+0x3c0>
 8005e82:	f015 051f 	ands.w	r5, r5, #31
 8005e86:	d0f9      	beq.n	8005e7c <__gethex+0x434>
 8005e88:	9b01      	ldr	r3, [sp, #4]
 8005e8a:	441a      	add	r2, r3
 8005e8c:	f1c5 0520 	rsb	r5, r5, #32
 8005e90:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8005e94:	f7fe f890 	bl	8003fb8 <__hi0bits>
 8005e98:	42a8      	cmp	r0, r5
 8005e9a:	dbe6      	blt.n	8005e6a <__gethex+0x422>
 8005e9c:	e7ee      	b.n	8005e7c <__gethex+0x434>
 8005e9e:	bf00      	nop
 8005ea0:	08006a38 	.word	0x08006a38

08005ea4 <L_shift>:
 8005ea4:	f1c2 0208 	rsb	r2, r2, #8
 8005ea8:	0092      	lsls	r2, r2, #2
 8005eaa:	b570      	push	{r4, r5, r6, lr}
 8005eac:	f1c2 0620 	rsb	r6, r2, #32
 8005eb0:	6843      	ldr	r3, [r0, #4]
 8005eb2:	6804      	ldr	r4, [r0, #0]
 8005eb4:	fa03 f506 	lsl.w	r5, r3, r6
 8005eb8:	432c      	orrs	r4, r5
 8005eba:	40d3      	lsrs	r3, r2
 8005ebc:	6004      	str	r4, [r0, #0]
 8005ebe:	f840 3f04 	str.w	r3, [r0, #4]!
 8005ec2:	4288      	cmp	r0, r1
 8005ec4:	d3f4      	bcc.n	8005eb0 <L_shift+0xc>
 8005ec6:	bd70      	pop	{r4, r5, r6, pc}

08005ec8 <__match>:
 8005ec8:	b530      	push	{r4, r5, lr}
 8005eca:	6803      	ldr	r3, [r0, #0]
 8005ecc:	3301      	adds	r3, #1
 8005ece:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005ed2:	b914      	cbnz	r4, 8005eda <__match+0x12>
 8005ed4:	6003      	str	r3, [r0, #0]
 8005ed6:	2001      	movs	r0, #1
 8005ed8:	bd30      	pop	{r4, r5, pc}
 8005eda:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005ede:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8005ee2:	2d19      	cmp	r5, #25
 8005ee4:	bf98      	it	ls
 8005ee6:	3220      	addls	r2, #32
 8005ee8:	42a2      	cmp	r2, r4
 8005eea:	d0f0      	beq.n	8005ece <__match+0x6>
 8005eec:	2000      	movs	r0, #0
 8005eee:	e7f3      	b.n	8005ed8 <__match+0x10>

08005ef0 <__hexnan>:
 8005ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ef4:	680b      	ldr	r3, [r1, #0]
 8005ef6:	6801      	ldr	r1, [r0, #0]
 8005ef8:	115e      	asrs	r6, r3, #5
 8005efa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005efe:	f013 031f 	ands.w	r3, r3, #31
 8005f02:	b087      	sub	sp, #28
 8005f04:	bf18      	it	ne
 8005f06:	3604      	addne	r6, #4
 8005f08:	2500      	movs	r5, #0
 8005f0a:	1f37      	subs	r7, r6, #4
 8005f0c:	4682      	mov	sl, r0
 8005f0e:	4690      	mov	r8, r2
 8005f10:	9301      	str	r3, [sp, #4]
 8005f12:	f846 5c04 	str.w	r5, [r6, #-4]
 8005f16:	46b9      	mov	r9, r7
 8005f18:	463c      	mov	r4, r7
 8005f1a:	9502      	str	r5, [sp, #8]
 8005f1c:	46ab      	mov	fp, r5
 8005f1e:	784a      	ldrb	r2, [r1, #1]
 8005f20:	1c4b      	adds	r3, r1, #1
 8005f22:	9303      	str	r3, [sp, #12]
 8005f24:	b342      	cbz	r2, 8005f78 <__hexnan+0x88>
 8005f26:	4610      	mov	r0, r2
 8005f28:	9105      	str	r1, [sp, #20]
 8005f2a:	9204      	str	r2, [sp, #16]
 8005f2c:	f7ff fd76 	bl	8005a1c <__hexdig_fun>
 8005f30:	2800      	cmp	r0, #0
 8005f32:	d14f      	bne.n	8005fd4 <__hexnan+0xe4>
 8005f34:	9a04      	ldr	r2, [sp, #16]
 8005f36:	9905      	ldr	r1, [sp, #20]
 8005f38:	2a20      	cmp	r2, #32
 8005f3a:	d818      	bhi.n	8005f6e <__hexnan+0x7e>
 8005f3c:	9b02      	ldr	r3, [sp, #8]
 8005f3e:	459b      	cmp	fp, r3
 8005f40:	dd13      	ble.n	8005f6a <__hexnan+0x7a>
 8005f42:	454c      	cmp	r4, r9
 8005f44:	d206      	bcs.n	8005f54 <__hexnan+0x64>
 8005f46:	2d07      	cmp	r5, #7
 8005f48:	dc04      	bgt.n	8005f54 <__hexnan+0x64>
 8005f4a:	462a      	mov	r2, r5
 8005f4c:	4649      	mov	r1, r9
 8005f4e:	4620      	mov	r0, r4
 8005f50:	f7ff ffa8 	bl	8005ea4 <L_shift>
 8005f54:	4544      	cmp	r4, r8
 8005f56:	d950      	bls.n	8005ffa <__hexnan+0x10a>
 8005f58:	2300      	movs	r3, #0
 8005f5a:	f1a4 0904 	sub.w	r9, r4, #4
 8005f5e:	f844 3c04 	str.w	r3, [r4, #-4]
 8005f62:	f8cd b008 	str.w	fp, [sp, #8]
 8005f66:	464c      	mov	r4, r9
 8005f68:	461d      	mov	r5, r3
 8005f6a:	9903      	ldr	r1, [sp, #12]
 8005f6c:	e7d7      	b.n	8005f1e <__hexnan+0x2e>
 8005f6e:	2a29      	cmp	r2, #41	; 0x29
 8005f70:	d155      	bne.n	800601e <__hexnan+0x12e>
 8005f72:	3102      	adds	r1, #2
 8005f74:	f8ca 1000 	str.w	r1, [sl]
 8005f78:	f1bb 0f00 	cmp.w	fp, #0
 8005f7c:	d04f      	beq.n	800601e <__hexnan+0x12e>
 8005f7e:	454c      	cmp	r4, r9
 8005f80:	d206      	bcs.n	8005f90 <__hexnan+0xa0>
 8005f82:	2d07      	cmp	r5, #7
 8005f84:	dc04      	bgt.n	8005f90 <__hexnan+0xa0>
 8005f86:	462a      	mov	r2, r5
 8005f88:	4649      	mov	r1, r9
 8005f8a:	4620      	mov	r0, r4
 8005f8c:	f7ff ff8a 	bl	8005ea4 <L_shift>
 8005f90:	4544      	cmp	r4, r8
 8005f92:	d934      	bls.n	8005ffe <__hexnan+0x10e>
 8005f94:	f1a8 0204 	sub.w	r2, r8, #4
 8005f98:	4623      	mov	r3, r4
 8005f9a:	f853 1b04 	ldr.w	r1, [r3], #4
 8005f9e:	f842 1f04 	str.w	r1, [r2, #4]!
 8005fa2:	429f      	cmp	r7, r3
 8005fa4:	d2f9      	bcs.n	8005f9a <__hexnan+0xaa>
 8005fa6:	1b3b      	subs	r3, r7, r4
 8005fa8:	f023 0303 	bic.w	r3, r3, #3
 8005fac:	3304      	adds	r3, #4
 8005fae:	3e03      	subs	r6, #3
 8005fb0:	3401      	adds	r4, #1
 8005fb2:	42a6      	cmp	r6, r4
 8005fb4:	bf38      	it	cc
 8005fb6:	2304      	movcc	r3, #4
 8005fb8:	4443      	add	r3, r8
 8005fba:	2200      	movs	r2, #0
 8005fbc:	f843 2b04 	str.w	r2, [r3], #4
 8005fc0:	429f      	cmp	r7, r3
 8005fc2:	d2fb      	bcs.n	8005fbc <__hexnan+0xcc>
 8005fc4:	683b      	ldr	r3, [r7, #0]
 8005fc6:	b91b      	cbnz	r3, 8005fd0 <__hexnan+0xe0>
 8005fc8:	4547      	cmp	r7, r8
 8005fca:	d126      	bne.n	800601a <__hexnan+0x12a>
 8005fcc:	2301      	movs	r3, #1
 8005fce:	603b      	str	r3, [r7, #0]
 8005fd0:	2005      	movs	r0, #5
 8005fd2:	e025      	b.n	8006020 <__hexnan+0x130>
 8005fd4:	3501      	adds	r5, #1
 8005fd6:	2d08      	cmp	r5, #8
 8005fd8:	f10b 0b01 	add.w	fp, fp, #1
 8005fdc:	dd06      	ble.n	8005fec <__hexnan+0xfc>
 8005fde:	4544      	cmp	r4, r8
 8005fe0:	d9c3      	bls.n	8005f6a <__hexnan+0x7a>
 8005fe2:	2300      	movs	r3, #0
 8005fe4:	f844 3c04 	str.w	r3, [r4, #-4]
 8005fe8:	2501      	movs	r5, #1
 8005fea:	3c04      	subs	r4, #4
 8005fec:	6822      	ldr	r2, [r4, #0]
 8005fee:	f000 000f 	and.w	r0, r0, #15
 8005ff2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005ff6:	6020      	str	r0, [r4, #0]
 8005ff8:	e7b7      	b.n	8005f6a <__hexnan+0x7a>
 8005ffa:	2508      	movs	r5, #8
 8005ffc:	e7b5      	b.n	8005f6a <__hexnan+0x7a>
 8005ffe:	9b01      	ldr	r3, [sp, #4]
 8006000:	2b00      	cmp	r3, #0
 8006002:	d0df      	beq.n	8005fc4 <__hexnan+0xd4>
 8006004:	f1c3 0320 	rsb	r3, r3, #32
 8006008:	f04f 32ff 	mov.w	r2, #4294967295
 800600c:	40da      	lsrs	r2, r3
 800600e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8006012:	4013      	ands	r3, r2
 8006014:	f846 3c04 	str.w	r3, [r6, #-4]
 8006018:	e7d4      	b.n	8005fc4 <__hexnan+0xd4>
 800601a:	3f04      	subs	r7, #4
 800601c:	e7d2      	b.n	8005fc4 <__hexnan+0xd4>
 800601e:	2004      	movs	r0, #4
 8006020:	b007      	add	sp, #28
 8006022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08006026 <__ascii_mbtowc>:
 8006026:	b082      	sub	sp, #8
 8006028:	b901      	cbnz	r1, 800602c <__ascii_mbtowc+0x6>
 800602a:	a901      	add	r1, sp, #4
 800602c:	b142      	cbz	r2, 8006040 <__ascii_mbtowc+0x1a>
 800602e:	b14b      	cbz	r3, 8006044 <__ascii_mbtowc+0x1e>
 8006030:	7813      	ldrb	r3, [r2, #0]
 8006032:	600b      	str	r3, [r1, #0]
 8006034:	7812      	ldrb	r2, [r2, #0]
 8006036:	1e10      	subs	r0, r2, #0
 8006038:	bf18      	it	ne
 800603a:	2001      	movne	r0, #1
 800603c:	b002      	add	sp, #8
 800603e:	4770      	bx	lr
 8006040:	4610      	mov	r0, r2
 8006042:	e7fb      	b.n	800603c <__ascii_mbtowc+0x16>
 8006044:	f06f 0001 	mvn.w	r0, #1
 8006048:	e7f8      	b.n	800603c <__ascii_mbtowc+0x16>

0800604a <_realloc_r>:
 800604a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800604e:	4680      	mov	r8, r0
 8006050:	4614      	mov	r4, r2
 8006052:	460e      	mov	r6, r1
 8006054:	b921      	cbnz	r1, 8006060 <_realloc_r+0x16>
 8006056:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800605a:	4611      	mov	r1, r2
 800605c:	f7fd be2e 	b.w	8003cbc <_malloc_r>
 8006060:	b92a      	cbnz	r2, 800606e <_realloc_r+0x24>
 8006062:	f7fd fdb7 	bl	8003bd4 <_free_r>
 8006066:	4625      	mov	r5, r4
 8006068:	4628      	mov	r0, r5
 800606a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800606e:	f000 f842 	bl	80060f6 <_malloc_usable_size_r>
 8006072:	4284      	cmp	r4, r0
 8006074:	4607      	mov	r7, r0
 8006076:	d802      	bhi.n	800607e <_realloc_r+0x34>
 8006078:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800607c:	d812      	bhi.n	80060a4 <_realloc_r+0x5a>
 800607e:	4621      	mov	r1, r4
 8006080:	4640      	mov	r0, r8
 8006082:	f7fd fe1b 	bl	8003cbc <_malloc_r>
 8006086:	4605      	mov	r5, r0
 8006088:	2800      	cmp	r0, #0
 800608a:	d0ed      	beq.n	8006068 <_realloc_r+0x1e>
 800608c:	42bc      	cmp	r4, r7
 800608e:	4622      	mov	r2, r4
 8006090:	4631      	mov	r1, r6
 8006092:	bf28      	it	cs
 8006094:	463a      	movcs	r2, r7
 8006096:	f7ff fc23 	bl	80058e0 <memcpy>
 800609a:	4631      	mov	r1, r6
 800609c:	4640      	mov	r0, r8
 800609e:	f7fd fd99 	bl	8003bd4 <_free_r>
 80060a2:	e7e1      	b.n	8006068 <_realloc_r+0x1e>
 80060a4:	4635      	mov	r5, r6
 80060a6:	e7df      	b.n	8006068 <_realloc_r+0x1e>

080060a8 <__ascii_wctomb>:
 80060a8:	b149      	cbz	r1, 80060be <__ascii_wctomb+0x16>
 80060aa:	2aff      	cmp	r2, #255	; 0xff
 80060ac:	bf85      	ittet	hi
 80060ae:	238a      	movhi	r3, #138	; 0x8a
 80060b0:	6003      	strhi	r3, [r0, #0]
 80060b2:	700a      	strbls	r2, [r1, #0]
 80060b4:	f04f 30ff 	movhi.w	r0, #4294967295
 80060b8:	bf98      	it	ls
 80060ba:	2001      	movls	r0, #1
 80060bc:	4770      	bx	lr
 80060be:	4608      	mov	r0, r1
 80060c0:	4770      	bx	lr
	...

080060c4 <fiprintf>:
 80060c4:	b40e      	push	{r1, r2, r3}
 80060c6:	b503      	push	{r0, r1, lr}
 80060c8:	4601      	mov	r1, r0
 80060ca:	ab03      	add	r3, sp, #12
 80060cc:	4805      	ldr	r0, [pc, #20]	; (80060e4 <fiprintf+0x20>)
 80060ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80060d2:	6800      	ldr	r0, [r0, #0]
 80060d4:	9301      	str	r3, [sp, #4]
 80060d6:	f000 f83f 	bl	8006158 <_vfiprintf_r>
 80060da:	b002      	add	sp, #8
 80060dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80060e0:	b003      	add	sp, #12
 80060e2:	4770      	bx	lr
 80060e4:	20000060 	.word	0x20000060

080060e8 <abort>:
 80060e8:	b508      	push	{r3, lr}
 80060ea:	2006      	movs	r0, #6
 80060ec:	f000 fa0c 	bl	8006508 <raise>
 80060f0:	2001      	movs	r0, #1
 80060f2:	f7fb fbfb 	bl	80018ec <_exit>

080060f6 <_malloc_usable_size_r>:
 80060f6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80060fa:	1f18      	subs	r0, r3, #4
 80060fc:	2b00      	cmp	r3, #0
 80060fe:	bfbc      	itt	lt
 8006100:	580b      	ldrlt	r3, [r1, r0]
 8006102:	18c0      	addlt	r0, r0, r3
 8006104:	4770      	bx	lr

08006106 <__sfputc_r>:
 8006106:	6893      	ldr	r3, [r2, #8]
 8006108:	3b01      	subs	r3, #1
 800610a:	2b00      	cmp	r3, #0
 800610c:	b410      	push	{r4}
 800610e:	6093      	str	r3, [r2, #8]
 8006110:	da08      	bge.n	8006124 <__sfputc_r+0x1e>
 8006112:	6994      	ldr	r4, [r2, #24]
 8006114:	42a3      	cmp	r3, r4
 8006116:	db01      	blt.n	800611c <__sfputc_r+0x16>
 8006118:	290a      	cmp	r1, #10
 800611a:	d103      	bne.n	8006124 <__sfputc_r+0x1e>
 800611c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006120:	f000 b934 	b.w	800638c <__swbuf_r>
 8006124:	6813      	ldr	r3, [r2, #0]
 8006126:	1c58      	adds	r0, r3, #1
 8006128:	6010      	str	r0, [r2, #0]
 800612a:	7019      	strb	r1, [r3, #0]
 800612c:	4608      	mov	r0, r1
 800612e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006132:	4770      	bx	lr

08006134 <__sfputs_r>:
 8006134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006136:	4606      	mov	r6, r0
 8006138:	460f      	mov	r7, r1
 800613a:	4614      	mov	r4, r2
 800613c:	18d5      	adds	r5, r2, r3
 800613e:	42ac      	cmp	r4, r5
 8006140:	d101      	bne.n	8006146 <__sfputs_r+0x12>
 8006142:	2000      	movs	r0, #0
 8006144:	e007      	b.n	8006156 <__sfputs_r+0x22>
 8006146:	f814 1b01 	ldrb.w	r1, [r4], #1
 800614a:	463a      	mov	r2, r7
 800614c:	4630      	mov	r0, r6
 800614e:	f7ff ffda 	bl	8006106 <__sfputc_r>
 8006152:	1c43      	adds	r3, r0, #1
 8006154:	d1f3      	bne.n	800613e <__sfputs_r+0xa>
 8006156:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006158 <_vfiprintf_r>:
 8006158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800615c:	460d      	mov	r5, r1
 800615e:	b09d      	sub	sp, #116	; 0x74
 8006160:	4614      	mov	r4, r2
 8006162:	4698      	mov	r8, r3
 8006164:	4606      	mov	r6, r0
 8006166:	b118      	cbz	r0, 8006170 <_vfiprintf_r+0x18>
 8006168:	6a03      	ldr	r3, [r0, #32]
 800616a:	b90b      	cbnz	r3, 8006170 <_vfiprintf_r+0x18>
 800616c:	f7fc fd78 	bl	8002c60 <__sinit>
 8006170:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006172:	07d9      	lsls	r1, r3, #31
 8006174:	d405      	bmi.n	8006182 <_vfiprintf_r+0x2a>
 8006176:	89ab      	ldrh	r3, [r5, #12]
 8006178:	059a      	lsls	r2, r3, #22
 800617a:	d402      	bmi.n	8006182 <_vfiprintf_r+0x2a>
 800617c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800617e:	f7fc fea6 	bl	8002ece <__retarget_lock_acquire_recursive>
 8006182:	89ab      	ldrh	r3, [r5, #12]
 8006184:	071b      	lsls	r3, r3, #28
 8006186:	d501      	bpl.n	800618c <_vfiprintf_r+0x34>
 8006188:	692b      	ldr	r3, [r5, #16]
 800618a:	b99b      	cbnz	r3, 80061b4 <_vfiprintf_r+0x5c>
 800618c:	4629      	mov	r1, r5
 800618e:	4630      	mov	r0, r6
 8006190:	f000 f93a 	bl	8006408 <__swsetup_r>
 8006194:	b170      	cbz	r0, 80061b4 <_vfiprintf_r+0x5c>
 8006196:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006198:	07dc      	lsls	r4, r3, #31
 800619a:	d504      	bpl.n	80061a6 <_vfiprintf_r+0x4e>
 800619c:	f04f 30ff 	mov.w	r0, #4294967295
 80061a0:	b01d      	add	sp, #116	; 0x74
 80061a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061a6:	89ab      	ldrh	r3, [r5, #12]
 80061a8:	0598      	lsls	r0, r3, #22
 80061aa:	d4f7      	bmi.n	800619c <_vfiprintf_r+0x44>
 80061ac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80061ae:	f7fc fe8f 	bl	8002ed0 <__retarget_lock_release_recursive>
 80061b2:	e7f3      	b.n	800619c <_vfiprintf_r+0x44>
 80061b4:	2300      	movs	r3, #0
 80061b6:	9309      	str	r3, [sp, #36]	; 0x24
 80061b8:	2320      	movs	r3, #32
 80061ba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80061be:	f8cd 800c 	str.w	r8, [sp, #12]
 80061c2:	2330      	movs	r3, #48	; 0x30
 80061c4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8006378 <_vfiprintf_r+0x220>
 80061c8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80061cc:	f04f 0901 	mov.w	r9, #1
 80061d0:	4623      	mov	r3, r4
 80061d2:	469a      	mov	sl, r3
 80061d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80061d8:	b10a      	cbz	r2, 80061de <_vfiprintf_r+0x86>
 80061da:	2a25      	cmp	r2, #37	; 0x25
 80061dc:	d1f9      	bne.n	80061d2 <_vfiprintf_r+0x7a>
 80061de:	ebba 0b04 	subs.w	fp, sl, r4
 80061e2:	d00b      	beq.n	80061fc <_vfiprintf_r+0xa4>
 80061e4:	465b      	mov	r3, fp
 80061e6:	4622      	mov	r2, r4
 80061e8:	4629      	mov	r1, r5
 80061ea:	4630      	mov	r0, r6
 80061ec:	f7ff ffa2 	bl	8006134 <__sfputs_r>
 80061f0:	3001      	adds	r0, #1
 80061f2:	f000 80a9 	beq.w	8006348 <_vfiprintf_r+0x1f0>
 80061f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80061f8:	445a      	add	r2, fp
 80061fa:	9209      	str	r2, [sp, #36]	; 0x24
 80061fc:	f89a 3000 	ldrb.w	r3, [sl]
 8006200:	2b00      	cmp	r3, #0
 8006202:	f000 80a1 	beq.w	8006348 <_vfiprintf_r+0x1f0>
 8006206:	2300      	movs	r3, #0
 8006208:	f04f 32ff 	mov.w	r2, #4294967295
 800620c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006210:	f10a 0a01 	add.w	sl, sl, #1
 8006214:	9304      	str	r3, [sp, #16]
 8006216:	9307      	str	r3, [sp, #28]
 8006218:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800621c:	931a      	str	r3, [sp, #104]	; 0x68
 800621e:	4654      	mov	r4, sl
 8006220:	2205      	movs	r2, #5
 8006222:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006226:	4854      	ldr	r0, [pc, #336]	; (8006378 <_vfiprintf_r+0x220>)
 8006228:	f7f9 ffd2 	bl	80001d0 <memchr>
 800622c:	9a04      	ldr	r2, [sp, #16]
 800622e:	b9d8      	cbnz	r0, 8006268 <_vfiprintf_r+0x110>
 8006230:	06d1      	lsls	r1, r2, #27
 8006232:	bf44      	itt	mi
 8006234:	2320      	movmi	r3, #32
 8006236:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800623a:	0713      	lsls	r3, r2, #28
 800623c:	bf44      	itt	mi
 800623e:	232b      	movmi	r3, #43	; 0x2b
 8006240:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006244:	f89a 3000 	ldrb.w	r3, [sl]
 8006248:	2b2a      	cmp	r3, #42	; 0x2a
 800624a:	d015      	beq.n	8006278 <_vfiprintf_r+0x120>
 800624c:	9a07      	ldr	r2, [sp, #28]
 800624e:	4654      	mov	r4, sl
 8006250:	2000      	movs	r0, #0
 8006252:	f04f 0c0a 	mov.w	ip, #10
 8006256:	4621      	mov	r1, r4
 8006258:	f811 3b01 	ldrb.w	r3, [r1], #1
 800625c:	3b30      	subs	r3, #48	; 0x30
 800625e:	2b09      	cmp	r3, #9
 8006260:	d94d      	bls.n	80062fe <_vfiprintf_r+0x1a6>
 8006262:	b1b0      	cbz	r0, 8006292 <_vfiprintf_r+0x13a>
 8006264:	9207      	str	r2, [sp, #28]
 8006266:	e014      	b.n	8006292 <_vfiprintf_r+0x13a>
 8006268:	eba0 0308 	sub.w	r3, r0, r8
 800626c:	fa09 f303 	lsl.w	r3, r9, r3
 8006270:	4313      	orrs	r3, r2
 8006272:	9304      	str	r3, [sp, #16]
 8006274:	46a2      	mov	sl, r4
 8006276:	e7d2      	b.n	800621e <_vfiprintf_r+0xc6>
 8006278:	9b03      	ldr	r3, [sp, #12]
 800627a:	1d19      	adds	r1, r3, #4
 800627c:	681b      	ldr	r3, [r3, #0]
 800627e:	9103      	str	r1, [sp, #12]
 8006280:	2b00      	cmp	r3, #0
 8006282:	bfbb      	ittet	lt
 8006284:	425b      	neglt	r3, r3
 8006286:	f042 0202 	orrlt.w	r2, r2, #2
 800628a:	9307      	strge	r3, [sp, #28]
 800628c:	9307      	strlt	r3, [sp, #28]
 800628e:	bfb8      	it	lt
 8006290:	9204      	strlt	r2, [sp, #16]
 8006292:	7823      	ldrb	r3, [r4, #0]
 8006294:	2b2e      	cmp	r3, #46	; 0x2e
 8006296:	d10c      	bne.n	80062b2 <_vfiprintf_r+0x15a>
 8006298:	7863      	ldrb	r3, [r4, #1]
 800629a:	2b2a      	cmp	r3, #42	; 0x2a
 800629c:	d134      	bne.n	8006308 <_vfiprintf_r+0x1b0>
 800629e:	9b03      	ldr	r3, [sp, #12]
 80062a0:	1d1a      	adds	r2, r3, #4
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	9203      	str	r2, [sp, #12]
 80062a6:	2b00      	cmp	r3, #0
 80062a8:	bfb8      	it	lt
 80062aa:	f04f 33ff 	movlt.w	r3, #4294967295
 80062ae:	3402      	adds	r4, #2
 80062b0:	9305      	str	r3, [sp, #20]
 80062b2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8006388 <_vfiprintf_r+0x230>
 80062b6:	7821      	ldrb	r1, [r4, #0]
 80062b8:	2203      	movs	r2, #3
 80062ba:	4650      	mov	r0, sl
 80062bc:	f7f9 ff88 	bl	80001d0 <memchr>
 80062c0:	b138      	cbz	r0, 80062d2 <_vfiprintf_r+0x17a>
 80062c2:	9b04      	ldr	r3, [sp, #16]
 80062c4:	eba0 000a 	sub.w	r0, r0, sl
 80062c8:	2240      	movs	r2, #64	; 0x40
 80062ca:	4082      	lsls	r2, r0
 80062cc:	4313      	orrs	r3, r2
 80062ce:	3401      	adds	r4, #1
 80062d0:	9304      	str	r3, [sp, #16]
 80062d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80062d6:	4829      	ldr	r0, [pc, #164]	; (800637c <_vfiprintf_r+0x224>)
 80062d8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80062dc:	2206      	movs	r2, #6
 80062de:	f7f9 ff77 	bl	80001d0 <memchr>
 80062e2:	2800      	cmp	r0, #0
 80062e4:	d03f      	beq.n	8006366 <_vfiprintf_r+0x20e>
 80062e6:	4b26      	ldr	r3, [pc, #152]	; (8006380 <_vfiprintf_r+0x228>)
 80062e8:	bb1b      	cbnz	r3, 8006332 <_vfiprintf_r+0x1da>
 80062ea:	9b03      	ldr	r3, [sp, #12]
 80062ec:	3307      	adds	r3, #7
 80062ee:	f023 0307 	bic.w	r3, r3, #7
 80062f2:	3308      	adds	r3, #8
 80062f4:	9303      	str	r3, [sp, #12]
 80062f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80062f8:	443b      	add	r3, r7
 80062fa:	9309      	str	r3, [sp, #36]	; 0x24
 80062fc:	e768      	b.n	80061d0 <_vfiprintf_r+0x78>
 80062fe:	fb0c 3202 	mla	r2, ip, r2, r3
 8006302:	460c      	mov	r4, r1
 8006304:	2001      	movs	r0, #1
 8006306:	e7a6      	b.n	8006256 <_vfiprintf_r+0xfe>
 8006308:	2300      	movs	r3, #0
 800630a:	3401      	adds	r4, #1
 800630c:	9305      	str	r3, [sp, #20]
 800630e:	4619      	mov	r1, r3
 8006310:	f04f 0c0a 	mov.w	ip, #10
 8006314:	4620      	mov	r0, r4
 8006316:	f810 2b01 	ldrb.w	r2, [r0], #1
 800631a:	3a30      	subs	r2, #48	; 0x30
 800631c:	2a09      	cmp	r2, #9
 800631e:	d903      	bls.n	8006328 <_vfiprintf_r+0x1d0>
 8006320:	2b00      	cmp	r3, #0
 8006322:	d0c6      	beq.n	80062b2 <_vfiprintf_r+0x15a>
 8006324:	9105      	str	r1, [sp, #20]
 8006326:	e7c4      	b.n	80062b2 <_vfiprintf_r+0x15a>
 8006328:	fb0c 2101 	mla	r1, ip, r1, r2
 800632c:	4604      	mov	r4, r0
 800632e:	2301      	movs	r3, #1
 8006330:	e7f0      	b.n	8006314 <_vfiprintf_r+0x1bc>
 8006332:	ab03      	add	r3, sp, #12
 8006334:	9300      	str	r3, [sp, #0]
 8006336:	462a      	mov	r2, r5
 8006338:	4b12      	ldr	r3, [pc, #72]	; (8006384 <_vfiprintf_r+0x22c>)
 800633a:	a904      	add	r1, sp, #16
 800633c:	4630      	mov	r0, r6
 800633e:	f7fb fe2d 	bl	8001f9c <_printf_float>
 8006342:	4607      	mov	r7, r0
 8006344:	1c78      	adds	r0, r7, #1
 8006346:	d1d6      	bne.n	80062f6 <_vfiprintf_r+0x19e>
 8006348:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800634a:	07d9      	lsls	r1, r3, #31
 800634c:	d405      	bmi.n	800635a <_vfiprintf_r+0x202>
 800634e:	89ab      	ldrh	r3, [r5, #12]
 8006350:	059a      	lsls	r2, r3, #22
 8006352:	d402      	bmi.n	800635a <_vfiprintf_r+0x202>
 8006354:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006356:	f7fc fdbb 	bl	8002ed0 <__retarget_lock_release_recursive>
 800635a:	89ab      	ldrh	r3, [r5, #12]
 800635c:	065b      	lsls	r3, r3, #25
 800635e:	f53f af1d 	bmi.w	800619c <_vfiprintf_r+0x44>
 8006362:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006364:	e71c      	b.n	80061a0 <_vfiprintf_r+0x48>
 8006366:	ab03      	add	r3, sp, #12
 8006368:	9300      	str	r3, [sp, #0]
 800636a:	462a      	mov	r2, r5
 800636c:	4b05      	ldr	r3, [pc, #20]	; (8006384 <_vfiprintf_r+0x22c>)
 800636e:	a904      	add	r1, sp, #16
 8006370:	4630      	mov	r0, r6
 8006372:	f7fc f8b7 	bl	80024e4 <_printf_i>
 8006376:	e7e4      	b.n	8006342 <_vfiprintf_r+0x1ea>
 8006378:	08006bf8 	.word	0x08006bf8
 800637c:	08006c02 	.word	0x08006c02
 8006380:	08001f9d 	.word	0x08001f9d
 8006384:	08006135 	.word	0x08006135
 8006388:	08006bfe 	.word	0x08006bfe

0800638c <__swbuf_r>:
 800638c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800638e:	460e      	mov	r6, r1
 8006390:	4614      	mov	r4, r2
 8006392:	4605      	mov	r5, r0
 8006394:	b118      	cbz	r0, 800639e <__swbuf_r+0x12>
 8006396:	6a03      	ldr	r3, [r0, #32]
 8006398:	b90b      	cbnz	r3, 800639e <__swbuf_r+0x12>
 800639a:	f7fc fc61 	bl	8002c60 <__sinit>
 800639e:	69a3      	ldr	r3, [r4, #24]
 80063a0:	60a3      	str	r3, [r4, #8]
 80063a2:	89a3      	ldrh	r3, [r4, #12]
 80063a4:	071a      	lsls	r2, r3, #28
 80063a6:	d525      	bpl.n	80063f4 <__swbuf_r+0x68>
 80063a8:	6923      	ldr	r3, [r4, #16]
 80063aa:	b31b      	cbz	r3, 80063f4 <__swbuf_r+0x68>
 80063ac:	6823      	ldr	r3, [r4, #0]
 80063ae:	6922      	ldr	r2, [r4, #16]
 80063b0:	1a98      	subs	r0, r3, r2
 80063b2:	6963      	ldr	r3, [r4, #20]
 80063b4:	b2f6      	uxtb	r6, r6
 80063b6:	4283      	cmp	r3, r0
 80063b8:	4637      	mov	r7, r6
 80063ba:	dc04      	bgt.n	80063c6 <__swbuf_r+0x3a>
 80063bc:	4621      	mov	r1, r4
 80063be:	4628      	mov	r0, r5
 80063c0:	f7ff fa2a 	bl	8005818 <_fflush_r>
 80063c4:	b9e0      	cbnz	r0, 8006400 <__swbuf_r+0x74>
 80063c6:	68a3      	ldr	r3, [r4, #8]
 80063c8:	3b01      	subs	r3, #1
 80063ca:	60a3      	str	r3, [r4, #8]
 80063cc:	6823      	ldr	r3, [r4, #0]
 80063ce:	1c5a      	adds	r2, r3, #1
 80063d0:	6022      	str	r2, [r4, #0]
 80063d2:	701e      	strb	r6, [r3, #0]
 80063d4:	6962      	ldr	r2, [r4, #20]
 80063d6:	1c43      	adds	r3, r0, #1
 80063d8:	429a      	cmp	r2, r3
 80063da:	d004      	beq.n	80063e6 <__swbuf_r+0x5a>
 80063dc:	89a3      	ldrh	r3, [r4, #12]
 80063de:	07db      	lsls	r3, r3, #31
 80063e0:	d506      	bpl.n	80063f0 <__swbuf_r+0x64>
 80063e2:	2e0a      	cmp	r6, #10
 80063e4:	d104      	bne.n	80063f0 <__swbuf_r+0x64>
 80063e6:	4621      	mov	r1, r4
 80063e8:	4628      	mov	r0, r5
 80063ea:	f7ff fa15 	bl	8005818 <_fflush_r>
 80063ee:	b938      	cbnz	r0, 8006400 <__swbuf_r+0x74>
 80063f0:	4638      	mov	r0, r7
 80063f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80063f4:	4621      	mov	r1, r4
 80063f6:	4628      	mov	r0, r5
 80063f8:	f000 f806 	bl	8006408 <__swsetup_r>
 80063fc:	2800      	cmp	r0, #0
 80063fe:	d0d5      	beq.n	80063ac <__swbuf_r+0x20>
 8006400:	f04f 37ff 	mov.w	r7, #4294967295
 8006404:	e7f4      	b.n	80063f0 <__swbuf_r+0x64>
	...

08006408 <__swsetup_r>:
 8006408:	b538      	push	{r3, r4, r5, lr}
 800640a:	4b2a      	ldr	r3, [pc, #168]	; (80064b4 <__swsetup_r+0xac>)
 800640c:	4605      	mov	r5, r0
 800640e:	6818      	ldr	r0, [r3, #0]
 8006410:	460c      	mov	r4, r1
 8006412:	b118      	cbz	r0, 800641c <__swsetup_r+0x14>
 8006414:	6a03      	ldr	r3, [r0, #32]
 8006416:	b90b      	cbnz	r3, 800641c <__swsetup_r+0x14>
 8006418:	f7fc fc22 	bl	8002c60 <__sinit>
 800641c:	89a3      	ldrh	r3, [r4, #12]
 800641e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006422:	0718      	lsls	r0, r3, #28
 8006424:	d422      	bmi.n	800646c <__swsetup_r+0x64>
 8006426:	06d9      	lsls	r1, r3, #27
 8006428:	d407      	bmi.n	800643a <__swsetup_r+0x32>
 800642a:	2309      	movs	r3, #9
 800642c:	602b      	str	r3, [r5, #0]
 800642e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8006432:	81a3      	strh	r3, [r4, #12]
 8006434:	f04f 30ff 	mov.w	r0, #4294967295
 8006438:	e034      	b.n	80064a4 <__swsetup_r+0x9c>
 800643a:	0758      	lsls	r0, r3, #29
 800643c:	d512      	bpl.n	8006464 <__swsetup_r+0x5c>
 800643e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006440:	b141      	cbz	r1, 8006454 <__swsetup_r+0x4c>
 8006442:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006446:	4299      	cmp	r1, r3
 8006448:	d002      	beq.n	8006450 <__swsetup_r+0x48>
 800644a:	4628      	mov	r0, r5
 800644c:	f7fd fbc2 	bl	8003bd4 <_free_r>
 8006450:	2300      	movs	r3, #0
 8006452:	6363      	str	r3, [r4, #52]	; 0x34
 8006454:	89a3      	ldrh	r3, [r4, #12]
 8006456:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800645a:	81a3      	strh	r3, [r4, #12]
 800645c:	2300      	movs	r3, #0
 800645e:	6063      	str	r3, [r4, #4]
 8006460:	6923      	ldr	r3, [r4, #16]
 8006462:	6023      	str	r3, [r4, #0]
 8006464:	89a3      	ldrh	r3, [r4, #12]
 8006466:	f043 0308 	orr.w	r3, r3, #8
 800646a:	81a3      	strh	r3, [r4, #12]
 800646c:	6923      	ldr	r3, [r4, #16]
 800646e:	b94b      	cbnz	r3, 8006484 <__swsetup_r+0x7c>
 8006470:	89a3      	ldrh	r3, [r4, #12]
 8006472:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8006476:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800647a:	d003      	beq.n	8006484 <__swsetup_r+0x7c>
 800647c:	4621      	mov	r1, r4
 800647e:	4628      	mov	r0, r5
 8006480:	f000 f884 	bl	800658c <__smakebuf_r>
 8006484:	89a0      	ldrh	r0, [r4, #12]
 8006486:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800648a:	f010 0301 	ands.w	r3, r0, #1
 800648e:	d00a      	beq.n	80064a6 <__swsetup_r+0x9e>
 8006490:	2300      	movs	r3, #0
 8006492:	60a3      	str	r3, [r4, #8]
 8006494:	6963      	ldr	r3, [r4, #20]
 8006496:	425b      	negs	r3, r3
 8006498:	61a3      	str	r3, [r4, #24]
 800649a:	6923      	ldr	r3, [r4, #16]
 800649c:	b943      	cbnz	r3, 80064b0 <__swsetup_r+0xa8>
 800649e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80064a2:	d1c4      	bne.n	800642e <__swsetup_r+0x26>
 80064a4:	bd38      	pop	{r3, r4, r5, pc}
 80064a6:	0781      	lsls	r1, r0, #30
 80064a8:	bf58      	it	pl
 80064aa:	6963      	ldrpl	r3, [r4, #20]
 80064ac:	60a3      	str	r3, [r4, #8]
 80064ae:	e7f4      	b.n	800649a <__swsetup_r+0x92>
 80064b0:	2000      	movs	r0, #0
 80064b2:	e7f7      	b.n	80064a4 <__swsetup_r+0x9c>
 80064b4:	20000060 	.word	0x20000060

080064b8 <_raise_r>:
 80064b8:	291f      	cmp	r1, #31
 80064ba:	b538      	push	{r3, r4, r5, lr}
 80064bc:	4604      	mov	r4, r0
 80064be:	460d      	mov	r5, r1
 80064c0:	d904      	bls.n	80064cc <_raise_r+0x14>
 80064c2:	2316      	movs	r3, #22
 80064c4:	6003      	str	r3, [r0, #0]
 80064c6:	f04f 30ff 	mov.w	r0, #4294967295
 80064ca:	bd38      	pop	{r3, r4, r5, pc}
 80064cc:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80064ce:	b112      	cbz	r2, 80064d6 <_raise_r+0x1e>
 80064d0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80064d4:	b94b      	cbnz	r3, 80064ea <_raise_r+0x32>
 80064d6:	4620      	mov	r0, r4
 80064d8:	f000 f830 	bl	800653c <_getpid_r>
 80064dc:	462a      	mov	r2, r5
 80064de:	4601      	mov	r1, r0
 80064e0:	4620      	mov	r0, r4
 80064e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80064e6:	f000 b817 	b.w	8006518 <_kill_r>
 80064ea:	2b01      	cmp	r3, #1
 80064ec:	d00a      	beq.n	8006504 <_raise_r+0x4c>
 80064ee:	1c59      	adds	r1, r3, #1
 80064f0:	d103      	bne.n	80064fa <_raise_r+0x42>
 80064f2:	2316      	movs	r3, #22
 80064f4:	6003      	str	r3, [r0, #0]
 80064f6:	2001      	movs	r0, #1
 80064f8:	e7e7      	b.n	80064ca <_raise_r+0x12>
 80064fa:	2400      	movs	r4, #0
 80064fc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006500:	4628      	mov	r0, r5
 8006502:	4798      	blx	r3
 8006504:	2000      	movs	r0, #0
 8006506:	e7e0      	b.n	80064ca <_raise_r+0x12>

08006508 <raise>:
 8006508:	4b02      	ldr	r3, [pc, #8]	; (8006514 <raise+0xc>)
 800650a:	4601      	mov	r1, r0
 800650c:	6818      	ldr	r0, [r3, #0]
 800650e:	f7ff bfd3 	b.w	80064b8 <_raise_r>
 8006512:	bf00      	nop
 8006514:	20000060 	.word	0x20000060

08006518 <_kill_r>:
 8006518:	b538      	push	{r3, r4, r5, lr}
 800651a:	4d07      	ldr	r5, [pc, #28]	; (8006538 <_kill_r+0x20>)
 800651c:	2300      	movs	r3, #0
 800651e:	4604      	mov	r4, r0
 8006520:	4608      	mov	r0, r1
 8006522:	4611      	mov	r1, r2
 8006524:	602b      	str	r3, [r5, #0]
 8006526:	f7fb f9d1 	bl	80018cc <_kill>
 800652a:	1c43      	adds	r3, r0, #1
 800652c:	d102      	bne.n	8006534 <_kill_r+0x1c>
 800652e:	682b      	ldr	r3, [r5, #0]
 8006530:	b103      	cbz	r3, 8006534 <_kill_r+0x1c>
 8006532:	6023      	str	r3, [r4, #0]
 8006534:	bd38      	pop	{r3, r4, r5, pc}
 8006536:	bf00      	nop
 8006538:	20000740 	.word	0x20000740

0800653c <_getpid_r>:
 800653c:	f7fb b9be 	b.w	80018bc <_getpid>

08006540 <__swhatbuf_r>:
 8006540:	b570      	push	{r4, r5, r6, lr}
 8006542:	460c      	mov	r4, r1
 8006544:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006548:	2900      	cmp	r1, #0
 800654a:	b096      	sub	sp, #88	; 0x58
 800654c:	4615      	mov	r5, r2
 800654e:	461e      	mov	r6, r3
 8006550:	da0d      	bge.n	800656e <__swhatbuf_r+0x2e>
 8006552:	89a3      	ldrh	r3, [r4, #12]
 8006554:	f013 0f80 	tst.w	r3, #128	; 0x80
 8006558:	f04f 0100 	mov.w	r1, #0
 800655c:	bf0c      	ite	eq
 800655e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8006562:	2340      	movne	r3, #64	; 0x40
 8006564:	2000      	movs	r0, #0
 8006566:	6031      	str	r1, [r6, #0]
 8006568:	602b      	str	r3, [r5, #0]
 800656a:	b016      	add	sp, #88	; 0x58
 800656c:	bd70      	pop	{r4, r5, r6, pc}
 800656e:	466a      	mov	r2, sp
 8006570:	f000 f848 	bl	8006604 <_fstat_r>
 8006574:	2800      	cmp	r0, #0
 8006576:	dbec      	blt.n	8006552 <__swhatbuf_r+0x12>
 8006578:	9901      	ldr	r1, [sp, #4]
 800657a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800657e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8006582:	4259      	negs	r1, r3
 8006584:	4159      	adcs	r1, r3
 8006586:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800658a:	e7eb      	b.n	8006564 <__swhatbuf_r+0x24>

0800658c <__smakebuf_r>:
 800658c:	898b      	ldrh	r3, [r1, #12]
 800658e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006590:	079d      	lsls	r5, r3, #30
 8006592:	4606      	mov	r6, r0
 8006594:	460c      	mov	r4, r1
 8006596:	d507      	bpl.n	80065a8 <__smakebuf_r+0x1c>
 8006598:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800659c:	6023      	str	r3, [r4, #0]
 800659e:	6123      	str	r3, [r4, #16]
 80065a0:	2301      	movs	r3, #1
 80065a2:	6163      	str	r3, [r4, #20]
 80065a4:	b002      	add	sp, #8
 80065a6:	bd70      	pop	{r4, r5, r6, pc}
 80065a8:	ab01      	add	r3, sp, #4
 80065aa:	466a      	mov	r2, sp
 80065ac:	f7ff ffc8 	bl	8006540 <__swhatbuf_r>
 80065b0:	9900      	ldr	r1, [sp, #0]
 80065b2:	4605      	mov	r5, r0
 80065b4:	4630      	mov	r0, r6
 80065b6:	f7fd fb81 	bl	8003cbc <_malloc_r>
 80065ba:	b948      	cbnz	r0, 80065d0 <__smakebuf_r+0x44>
 80065bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80065c0:	059a      	lsls	r2, r3, #22
 80065c2:	d4ef      	bmi.n	80065a4 <__smakebuf_r+0x18>
 80065c4:	f023 0303 	bic.w	r3, r3, #3
 80065c8:	f043 0302 	orr.w	r3, r3, #2
 80065cc:	81a3      	strh	r3, [r4, #12]
 80065ce:	e7e3      	b.n	8006598 <__smakebuf_r+0xc>
 80065d0:	89a3      	ldrh	r3, [r4, #12]
 80065d2:	6020      	str	r0, [r4, #0]
 80065d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80065d8:	81a3      	strh	r3, [r4, #12]
 80065da:	9b00      	ldr	r3, [sp, #0]
 80065dc:	6163      	str	r3, [r4, #20]
 80065de:	9b01      	ldr	r3, [sp, #4]
 80065e0:	6120      	str	r0, [r4, #16]
 80065e2:	b15b      	cbz	r3, 80065fc <__smakebuf_r+0x70>
 80065e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80065e8:	4630      	mov	r0, r6
 80065ea:	f000 f81d 	bl	8006628 <_isatty_r>
 80065ee:	b128      	cbz	r0, 80065fc <__smakebuf_r+0x70>
 80065f0:	89a3      	ldrh	r3, [r4, #12]
 80065f2:	f023 0303 	bic.w	r3, r3, #3
 80065f6:	f043 0301 	orr.w	r3, r3, #1
 80065fa:	81a3      	strh	r3, [r4, #12]
 80065fc:	89a3      	ldrh	r3, [r4, #12]
 80065fe:	431d      	orrs	r5, r3
 8006600:	81a5      	strh	r5, [r4, #12]
 8006602:	e7cf      	b.n	80065a4 <__smakebuf_r+0x18>

08006604 <_fstat_r>:
 8006604:	b538      	push	{r3, r4, r5, lr}
 8006606:	4d07      	ldr	r5, [pc, #28]	; (8006624 <_fstat_r+0x20>)
 8006608:	2300      	movs	r3, #0
 800660a:	4604      	mov	r4, r0
 800660c:	4608      	mov	r0, r1
 800660e:	4611      	mov	r1, r2
 8006610:	602b      	str	r3, [r5, #0]
 8006612:	f7fb f9ba 	bl	800198a <_fstat>
 8006616:	1c43      	adds	r3, r0, #1
 8006618:	d102      	bne.n	8006620 <_fstat_r+0x1c>
 800661a:	682b      	ldr	r3, [r5, #0]
 800661c:	b103      	cbz	r3, 8006620 <_fstat_r+0x1c>
 800661e:	6023      	str	r3, [r4, #0]
 8006620:	bd38      	pop	{r3, r4, r5, pc}
 8006622:	bf00      	nop
 8006624:	20000740 	.word	0x20000740

08006628 <_isatty_r>:
 8006628:	b538      	push	{r3, r4, r5, lr}
 800662a:	4d06      	ldr	r5, [pc, #24]	; (8006644 <_isatty_r+0x1c>)
 800662c:	2300      	movs	r3, #0
 800662e:	4604      	mov	r4, r0
 8006630:	4608      	mov	r0, r1
 8006632:	602b      	str	r3, [r5, #0]
 8006634:	f7fb f9b9 	bl	80019aa <_isatty>
 8006638:	1c43      	adds	r3, r0, #1
 800663a:	d102      	bne.n	8006642 <_isatty_r+0x1a>
 800663c:	682b      	ldr	r3, [r5, #0]
 800663e:	b103      	cbz	r3, 8006642 <_isatty_r+0x1a>
 8006640:	6023      	str	r3, [r4, #0]
 8006642:	bd38      	pop	{r3, r4, r5, pc}
 8006644:	20000740 	.word	0x20000740

08006648 <_init>:
 8006648:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800664a:	bf00      	nop
 800664c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800664e:	bc08      	pop	{r3}
 8006650:	469e      	mov	lr, r3
 8006652:	4770      	bx	lr

08006654 <_fini>:
 8006654:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006656:	bf00      	nop
 8006658:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800665a:	bc08      	pop	{r3}
 800665c:	469e      	mov	lr, r3
 800665e:	4770      	bx	lr
