
Project-1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000064f8  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000670  08006688  08006688  00016688  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006cf8  08006cf8  000201d0  2**0
                  CONTENTS
  4 .ARM          00000000  08006cf8  08006cf8  000201d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006cf8  08006cf8  000201d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006cf8  08006cf8  00016cf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006cfc  08006cfc  00016cfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d0  20000000  08006d00  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000580  200001d0  08006ed0  000201d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000750  08006ed0  00020750  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002de6  00000000  00000000  00020243  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000c6d  00000000  00000000  00023029  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000270  00000000  00000000  00023c98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001ac  00000000  00000000  00023f08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00027551  00000000  00000000  000240b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000045dc  00000000  00000000  0004b605  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000f6432  00000000  00000000  0004fbe1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001d38  00000000  00000000  00146014  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  00147d4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001d0 	.word	0x200001d0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08006670 	.word	0x08006670

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001d4 	.word	0x200001d4
 80001cc:	08006670 	.word	0x08006670

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_d2lz>:
 8000c88:	b538      	push	{r3, r4, r5, lr}
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	4604      	mov	r4, r0
 8000c90:	460d      	mov	r5, r1
 8000c92:	f7ff ff23 	bl	8000adc <__aeabi_dcmplt>
 8000c96:	b928      	cbnz	r0, 8000ca4 <__aeabi_d2lz+0x1c>
 8000c98:	4620      	mov	r0, r4
 8000c9a:	4629      	mov	r1, r5
 8000c9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ca0:	f000 b80a 	b.w	8000cb8 <__aeabi_d2ulz>
 8000ca4:	4620      	mov	r0, r4
 8000ca6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000caa:	f000 f805 	bl	8000cb8 <__aeabi_d2ulz>
 8000cae:	4240      	negs	r0, r0
 8000cb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cb4:	bd38      	pop	{r3, r4, r5, pc}
 8000cb6:	bf00      	nop

08000cb8 <__aeabi_d2ulz>:
 8000cb8:	b5d0      	push	{r4, r6, r7, lr}
 8000cba:	4b0c      	ldr	r3, [pc, #48]	; (8000cec <__aeabi_d2ulz+0x34>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	4606      	mov	r6, r0
 8000cc0:	460f      	mov	r7, r1
 8000cc2:	f7ff fc99 	bl	80005f8 <__aeabi_dmul>
 8000cc6:	f7ff ff6f 	bl	8000ba8 <__aeabi_d2uiz>
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f7ff fc1a 	bl	8000504 <__aeabi_ui2d>
 8000cd0:	4b07      	ldr	r3, [pc, #28]	; (8000cf0 <__aeabi_d2ulz+0x38>)
 8000cd2:	2200      	movs	r2, #0
 8000cd4:	f7ff fc90 	bl	80005f8 <__aeabi_dmul>
 8000cd8:	4602      	mov	r2, r0
 8000cda:	460b      	mov	r3, r1
 8000cdc:	4630      	mov	r0, r6
 8000cde:	4639      	mov	r1, r7
 8000ce0:	f7ff fad2 	bl	8000288 <__aeabi_dsub>
 8000ce4:	f7ff ff60 	bl	8000ba8 <__aeabi_d2uiz>
 8000ce8:	4621      	mov	r1, r4
 8000cea:	bdd0      	pop	{r4, r6, r7, pc}
 8000cec:	3df00000 	.word	0x3df00000
 8000cf0:	41f00000 	.word	0x41f00000

08000cf4 <GPIO_Init>:

/*----------------------------------------------------------------------------*/
/* Configure GPIO                                                             */
/*----------------------------------------------------------------------------*/
void GPIO_Init(void)
{
 8000cf4:	b580      	push	{r7, lr}
 8000cf6:	b08e      	sub	sp, #56	; 0x38
 8000cf8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cfa:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000cfe:	2200      	movs	r2, #0
 8000d00:	601a      	str	r2, [r3, #0]
 8000d02:	605a      	str	r2, [r3, #4]
 8000d04:	609a      	str	r2, [r3, #8]
 8000d06:	60da      	str	r2, [r3, #12]
 8000d08:	611a      	str	r2, [r3, #16]

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8000d0a:	4b49      	ldr	r3, [pc, #292]	; (8000e30 <GPIO_Init+0x13c>)
 8000d0c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d0e:	4a48      	ldr	r2, [pc, #288]	; (8000e30 <GPIO_Init+0x13c>)
 8000d10:	f043 0304 	orr.w	r3, r3, #4
 8000d14:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d16:	4b46      	ldr	r3, [pc, #280]	; (8000e30 <GPIO_Init+0x13c>)
 8000d18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d1a:	f003 0304 	and.w	r3, r3, #4
 8000d1e:	623b      	str	r3, [r7, #32]
 8000d20:	6a3b      	ldr	r3, [r7, #32]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8000d22:	4b43      	ldr	r3, [pc, #268]	; (8000e30 <GPIO_Init+0x13c>)
 8000d24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d26:	4a42      	ldr	r2, [pc, #264]	; (8000e30 <GPIO_Init+0x13c>)
 8000d28:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000d2c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d2e:	4b40      	ldr	r3, [pc, #256]	; (8000e30 <GPIO_Init+0x13c>)
 8000d30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000d36:	61fb      	str	r3, [r7, #28]
 8000d38:	69fb      	ldr	r3, [r7, #28]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8000d3a:	4b3d      	ldr	r3, [pc, #244]	; (8000e30 <GPIO_Init+0x13c>)
 8000d3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d3e:	4a3c      	ldr	r2, [pc, #240]	; (8000e30 <GPIO_Init+0x13c>)
 8000d40:	f043 0301 	orr.w	r3, r3, #1
 8000d44:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d46:	4b3a      	ldr	r3, [pc, #232]	; (8000e30 <GPIO_Init+0x13c>)
 8000d48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d4a:	f003 0301 	and.w	r3, r3, #1
 8000d4e:	61bb      	str	r3, [r7, #24]
 8000d50:	69bb      	ldr	r3, [r7, #24]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8000d52:	4b37      	ldr	r3, [pc, #220]	; (8000e30 <GPIO_Init+0x13c>)
 8000d54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d56:	4a36      	ldr	r2, [pc, #216]	; (8000e30 <GPIO_Init+0x13c>)
 8000d58:	f043 0302 	orr.w	r3, r3, #2
 8000d5c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d5e:	4b34      	ldr	r3, [pc, #208]	; (8000e30 <GPIO_Init+0x13c>)
 8000d60:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d62:	f003 0302 	and.w	r3, r3, #2
 8000d66:	617b      	str	r3, [r7, #20]
 8000d68:	697b      	ldr	r3, [r7, #20]
	__HAL_RCC_GPIOA_CLK_ENABLE(); // Enable GPIOA clock
 8000d6a:	4b31      	ldr	r3, [pc, #196]	; (8000e30 <GPIO_Init+0x13c>)
 8000d6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d6e:	4a30      	ldr	r2, [pc, #192]	; (8000e30 <GPIO_Init+0x13c>)
 8000d70:	f043 0301 	orr.w	r3, r3, #1
 8000d74:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d76:	4b2e      	ldr	r3, [pc, #184]	; (8000e30 <GPIO_Init+0x13c>)
 8000d78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d7a:	f003 0301 	and.w	r3, r3, #1
 8000d7e:	613b      	str	r3, [r7, #16]
 8000d80:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOA_CLK_ENABLE(); // Enable GPIOA clock
 8000d82:	4b2b      	ldr	r3, [pc, #172]	; (8000e30 <GPIO_Init+0x13c>)
 8000d84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d86:	4a2a      	ldr	r2, [pc, #168]	; (8000e30 <GPIO_Init+0x13c>)
 8000d88:	f043 0301 	orr.w	r3, r3, #1
 8000d8c:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000d8e:	4b28      	ldr	r3, [pc, #160]	; (8000e30 <GPIO_Init+0x13c>)
 8000d90:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d92:	f003 0301 	and.w	r3, r3, #1
 8000d96:	60fb      	str	r3, [r7, #12]
 8000d98:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOA_CLK_ENABLE(); // Enable GPIOA clock
 8000d9a:	4b25      	ldr	r3, [pc, #148]	; (8000e30 <GPIO_Init+0x13c>)
 8000d9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000d9e:	4a24      	ldr	r2, [pc, #144]	; (8000e30 <GPIO_Init+0x13c>)
 8000da0:	f043 0301 	orr.w	r3, r3, #1
 8000da4:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000da6:	4b22      	ldr	r3, [pc, #136]	; (8000e30 <GPIO_Init+0x13c>)
 8000da8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000daa:	f003 0301 	and.w	r3, r3, #1
 8000dae:	60bb      	str	r3, [r7, #8]
 8000db0:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_TIM2_CLK_ENABLE();  // Enable TIM2 clock	/*Configure GPIO pin : PtPin */
 8000db2:	4b1f      	ldr	r3, [pc, #124]	; (8000e30 <GPIO_Init+0x13c>)
 8000db4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000db6:	4a1e      	ldr	r2, [pc, #120]	; (8000e30 <GPIO_Init+0x13c>)
 8000db8:	f043 0301 	orr.w	r3, r3, #1
 8000dbc:	6593      	str	r3, [r2, #88]	; 0x58
 8000dbe:	4b1c      	ldr	r3, [pc, #112]	; (8000e30 <GPIO_Init+0x13c>)
 8000dc0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000dc2:	f003 0301 	and.w	r3, r3, #1
 8000dc6:	607b      	str	r3, [r7, #4]
 8000dc8:	687b      	ldr	r3, [r7, #4]
	GPIO_InitStruct.Pin = B1_Pin;
 8000dca:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000dce:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000dd0:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8000dd4:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	62fb      	str	r3, [r7, #44]	; 0x2c
	HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000dda:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dde:	4619      	mov	r1, r3
 8000de0:	4814      	ldr	r0, [pc, #80]	; (8000e34 <GPIO_Init+0x140>)
 8000de2:	f000 fea5 	bl	8001b30 <HAL_GPIO_Init>

	GPIO_InitStruct.Pin = S1_Pin;
 8000de6:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000dea:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8000dec:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 8000df0:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000df2:	2302      	movs	r3, #2
 8000df4:	62fb      	str	r3, [r7, #44]	; 0x2c
	HAL_GPIO_Init(S1_GPIO_Port, &GPIO_InitStruct);
 8000df6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dfa:	4619      	mov	r1, r3
 8000dfc:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e00:	f000 fe96 	bl	8001b30 <HAL_GPIO_Init>

	GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000e04:	2301      	movs	r3, #1
 8000e06:	627b      	str	r3, [r7, #36]	; 0x24
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e08:	2302      	movs	r3, #2
 8000e0a:	62bb      	str	r3, [r7, #40]	; 0x28
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e0c:	2300      	movs	r3, #0
 8000e0e:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e10:	2300      	movs	r3, #0
 8000e12:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8000e14:	2301      	movs	r3, #1
 8000e16:	637b      	str	r3, [r7, #52]	; 0x34

	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e18:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e1c:	4619      	mov	r1, r3
 8000e1e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000e22:	f000 fe85 	bl	8001b30 <HAL_GPIO_Init>


}
 8000e26:	bf00      	nop
 8000e28:	3738      	adds	r7, #56	; 0x38
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	bd80      	pop	{r7, pc}
 8000e2e:	bf00      	nop
 8000e30:	40021000 	.word	0x40021000
 8000e34:	48000800 	.word	0x48000800

08000e38 <UART2_Init>:
// PA.3 = USART2_RX (AF7)

#define TX_PIN 2
#define RX_PIN 3

void UART2_Init(void) {
 8000e38:	b580      	push	{r7, lr}
 8000e3a:	af00      	add	r7, sp, #0
	// Enable the clock of USART 1 & 2
	RCC->APB1ENR1 |= RCC_APB1ENR1_USART2EN;  // Enable USART 2 clock		
 8000e3c:	4b0e      	ldr	r3, [pc, #56]	; (8000e78 <UART2_Init+0x40>)
 8000e3e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000e40:	4a0d      	ldr	r2, [pc, #52]	; (8000e78 <UART2_Init+0x40>)
 8000e42:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000e46:	6593      	str	r3, [r2, #88]	; 0x58
	// Select the USART1 clock source
	// 00: PCLK selected as USART2 clock
	// 01: System clock (SYSCLK) selected as USART2 clock
	// 10: HSI16 clock selected as USART2 clock
	// 11: LSE clock selected as USART2 clock
	RCC->CCIPR &= ~RCC_CCIPR_USART2SEL;
 8000e48:	4b0b      	ldr	r3, [pc, #44]	; (8000e78 <UART2_Init+0x40>)
 8000e4a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e4e:	4a0a      	ldr	r2, [pc, #40]	; (8000e78 <UART2_Init+0x40>)
 8000e50:	f023 030c 	bic.w	r3, r3, #12
 8000e54:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	RCC->CCIPR |=  RCC_CCIPR_USART2SEL_0;
 8000e58:	4b07      	ldr	r3, [pc, #28]	; (8000e78 <UART2_Init+0x40>)
 8000e5a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000e5e:	4a06      	ldr	r2, [pc, #24]	; (8000e78 <UART2_Init+0x40>)
 8000e60:	f043 0304 	orr.w	r3, r3, #4
 8000e64:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	
	UART2_GPIO_Init();
 8000e68:	f000 f80a 	bl	8000e80 <UART2_GPIO_Init>
	USART_Init(USART2);
 8000e6c:	4803      	ldr	r0, [pc, #12]	; (8000e7c <UART2_Init+0x44>)
 8000e6e:	f000 f84f 	bl	8000f10 <USART_Init>
	
	//NVIC_SetPriority(USART2_IRQn, 0);			// Set Priority to 1
	//NVIC_EnableIRQ(USART2_IRQn);					// Enable interrupt of USART1 peripheral
}
 8000e72:	bf00      	nop
 8000e74:	bd80      	pop	{r7, pc}
 8000e76:	bf00      	nop
 8000e78:	40021000 	.word	0x40021000
 8000e7c:	40004400 	.word	0x40004400

08000e80 <UART2_GPIO_Init>:

void UART2_GPIO_Init(void) {
 8000e80:	b480      	push	{r7}
 8000e82:	af00      	add	r7, sp, #0
	
	// Enable the peripheral clock of GPIO Port
	RCC->AHB2ENR |=   RCC_AHB2ENR_GPIOAEN;
 8000e84:	4b21      	ldr	r3, [pc, #132]	; (8000f0c <UART2_GPIO_Init+0x8c>)
 8000e86:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000e88:	4a20      	ldr	r2, [pc, #128]	; (8000f0c <UART2_GPIO_Init+0x8c>)
 8000e8a:	f043 0301 	orr.w	r3, r3, #1
 8000e8e:	64d3      	str	r3, [r2, #76]	; 0x4c
	// PA2 = USART2_TX (AF7)
	// PA3 = USART2_RX (AF7)
	// Alternate function, High Speed, Push pull, Pull up
	// **********************************************************
	// Input(00), Output(01), AlterFunc(10), Analog(11)
	GPIOA->MODER   &= ~(3<<(2*TX_PIN) | 3<<(2*RX_PIN));	// Clear bits
 8000e90:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000e9a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000e9e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER   |=   2<<(2*TX_PIN) | 2<<(2*RX_PIN); 
 8000ea0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eaa:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000eae:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0]  &= ~(0xF<<(4*TX_PIN) | 0xF<<(4*RX_PIN));	
 8000eb0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000eb4:	6a1b      	ldr	r3, [r3, #32]
 8000eb6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eba:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8000ebe:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0]  |=   7<<(4*TX_PIN) | 7<<(4*RX_PIN);       	
 8000ec0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ec4:	6a1b      	ldr	r3, [r3, #32]
 8000ec6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eca:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000ece:	6213      	str	r3, [r2, #32]
	// GPIO Speed: Low speed (00), Medium speed (01), Fast speed (10), High speed (11)
	GPIOA->OSPEEDR |=   3<<(2*TX_PIN) | 3<<(2*RX_PIN); 					 	
 8000ed0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ed4:	689b      	ldr	r3, [r3, #8]
 8000ed6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eda:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8000ede:	6093      	str	r3, [r2, #8]
	// GPIO Push-Pull: No pull-up, pull-down (00), Pull-up (01), Pull-down (10), Reserved (11)
	GPIOA->PUPDR   &= ~(3<<(2*TX_PIN) | 3<<(2*RX_PIN));
 8000ee0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ee4:	68db      	ldr	r3, [r3, #12]
 8000ee6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000eea:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000eee:	60d3      	str	r3, [r2, #12]
	// GPIO Output Type: Output push-pull (0, reset), Output open drain (1) 
	GPIOA->OTYPER  &=  ~(1<<TX_PIN | 1<<RX_PIN);       	
 8000ef0:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000ef4:	685b      	ldr	r3, [r3, #4]
 8000ef6:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 8000efa:	f023 030c 	bic.w	r3, r3, #12
 8000efe:	6053      	str	r3, [r2, #4]
}
 8000f00:	bf00      	nop
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	40021000 	.word	0x40021000

08000f10 <USART_Init>:


void USART_Init (USART_TypeDef * USARTx) {
 8000f10:	b480      	push	{r7}
 8000f12:	b083      	sub	sp, #12
 8000f14:	af00      	add	r7, sp, #0
 8000f16:	6078      	str	r0, [r7, #4]
	// Default setting: 
	//     No hardware flow control, 8 data bits, no parity, 1 start bit and 1 stop bit		
	USARTx->CR1 &= ~USART_CR1_UE;  // Disable USART
 8000f18:	687b      	ldr	r3, [r7, #4]
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	f023 0201 	bic.w	r2, r3, #1
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	601a      	str	r2, [r3, #0]
	
	// Configure word length to 8 bit
	USARTx->CR1 &= ~USART_CR1_M;   // M: 00 = 8 data bits, 01 = 9 data bits, 10 = 7 data bits
 8000f24:	687b      	ldr	r3, [r7, #4]
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	f023 2210 	bic.w	r2, r3, #268439552	; 0x10001000
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	601a      	str	r2, [r3, #0]
	
	// Configure oversampling mode: Oversampling by 16 
	USARTx->CR1 &= ~USART_CR1_OVER8;  // 0 = oversampling by 16, 1 = oversampling by 8
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	601a      	str	r2, [r3, #0]
	
	// Configure stop bits to 1 stop bit
	//   00: 1 Stop bit;      01: 0.5 Stop bit
	//   10: 2 Stop bits;     11: 1.5 Stop bit
	USARTx->CR2 &= ~USART_CR2_STOP;   
 8000f3c:	687b      	ldr	r3, [r7, #4]
 8000f3e:	685b      	ldr	r3, [r3, #4]
 8000f40:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	605a      	str	r2, [r3, #4]
	// CSet Baudrate to 9600 using APB frequency (80,000,000 Hz)
	// If oversampling by 16, Tx/Rx baud = f_CK / USARTDIV,  
	// If oversampling by 8,  Tx/Rx baud = 2*f_CK / USARTDIV
  // When OVER8 = 0, BRR = USARTDIV
	// USARTDIV = 80MHz/9600 = 8333 = 0x208D
	USARTx->BRR  = 0x208D; // Limited to 16 bits
 8000f48:	687b      	ldr	r3, [r7, #4]
 8000f4a:	f242 028d 	movw	r2, #8333	; 0x208d
 8000f4e:	60da      	str	r2, [r3, #12]

	USARTx->CR1  |= (USART_CR1_RE | USART_CR1_TE);  	// Transmitter and Receiver enable
 8000f50:	687b      	ldr	r3, [r7, #4]
 8000f52:	681b      	ldr	r3, [r3, #0]
 8000f54:	f043 020c 	orr.w	r2, r3, #12
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	601a      	str	r2, [r3, #0]
	
  if (USARTx == UART4){	
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	4a2c      	ldr	r2, [pc, #176]	; (8001010 <USART_Init+0x100>)
 8000f60:	4293      	cmp	r3, r2
 8000f62:	d129      	bne.n	8000fb8 <USART_Init+0xa8>
		USARTx->CR1 |= USART_CR1_RXNEIE;  			// Received Data Ready to be Read Interrupt  
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	f043 0220 	orr.w	r2, r3, #32
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_TCIE;    			// Transmission Complete Interrupt 
 8000f70:	687b      	ldr	r3, [r7, #4]
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_IDLEIE;  			// Idle Line Detected Interrupt 
 8000f7c:	687b      	ldr	r3, [r7, #4]
 8000f7e:	681b      	ldr	r3, [r3, #0]
 8000f80:	f023 0210 	bic.w	r2, r3, #16
 8000f84:	687b      	ldr	r3, [r7, #4]
 8000f86:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_TXEIE;   			// Transmit Data Register Empty Interrupt 
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR1_PEIE;    			// Parity Error Interrupt 
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	681b      	ldr	r3, [r3, #0]
 8000f98:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR2_LBDIE;				// LIN Break Detection Interrupt Enable
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	681b      	ldr	r3, [r3, #0]
 8000fa4:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	601a      	str	r2, [r3, #0]
		USARTx->CR1 &= ~USART_CR3_EIE;					// Error Interrupt Enable (Frame error, noise error, overrun error) 
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	681b      	ldr	r3, [r3, #0]
 8000fb0:	f023 0201 	bic.w	r2, r3, #1
 8000fb4:	687b      	ldr	r3, [r7, #4]
 8000fb6:	601a      	str	r2, [r3, #0]
		//USARTx->CR3 &= ~USART_CR3_CTSIE;				// CTS Interrupt
	}

	if (USARTx == USART2){
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	4a16      	ldr	r2, [pc, #88]	; (8001014 <USART_Init+0x104>)
 8000fbc:	4293      	cmp	r3, r2
 8000fbe:	d10b      	bne.n	8000fd8 <USART_Init+0xc8>
		USARTx->ICR |= USART_ICR_TCCF;
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	6a1b      	ldr	r3, [r3, #32]
 8000fc4:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000fc8:	687b      	ldr	r3, [r7, #4]
 8000fca:	621a      	str	r2, [r3, #32]
		USART1->CR3 |= USART_CR3_DMAT | USART_CR3_DMAR;
 8000fcc:	4b12      	ldr	r3, [pc, #72]	; (8001018 <USART_Init+0x108>)
 8000fce:	689b      	ldr	r3, [r3, #8]
 8000fd0:	4a11      	ldr	r2, [pc, #68]	; (8001018 <USART_Init+0x108>)
 8000fd2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8000fd6:	6093      	str	r3, [r2, #8]
	}
	
	USARTx->CR1  |= USART_CR1_UE; // USART enable                 
 8000fd8:	687b      	ldr	r3, [r7, #4]
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	f043 0201 	orr.w	r2, r3, #1
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	601a      	str	r2, [r3, #0]
	
	while ( (USARTx->ISR & USART_ISR_TEACK) == 0); // Verify that the USART is ready for reception
 8000fe4:	bf00      	nop
 8000fe6:	687b      	ldr	r3, [r7, #4]
 8000fe8:	69db      	ldr	r3, [r3, #28]
 8000fea:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	d0f9      	beq.n	8000fe6 <USART_Init+0xd6>
	while ( (USARTx->ISR & USART_ISR_REACK) == 0); // Verify that the USART is ready for transmission
 8000ff2:	bf00      	nop
 8000ff4:	687b      	ldr	r3, [r7, #4]
 8000ff6:	69db      	ldr	r3, [r3, #28]
 8000ff8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000ffc:	2b00      	cmp	r3, #0
 8000ffe:	d0f9      	beq.n	8000ff4 <USART_Init+0xe4>
}
 8001000:	bf00      	nop
 8001002:	bf00      	nop
 8001004:	370c      	adds	r7, #12
 8001006:	46bd      	mov	sp, r7
 8001008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800100c:	4770      	bx	lr
 800100e:	bf00      	nop
 8001010:	40004c00 	.word	0x40004c00
 8001014:	40004400 	.word	0x40004400
 8001018:	40013800 	.word	0x40013800

0800101c <USART_Read>:


uint8_t USART_Read (USART_TypeDef * USARTx) {
 800101c:	b480      	push	{r7}
 800101e:	b083      	sub	sp, #12
 8001020:	af00      	add	r7, sp, #0
 8001022:	6078      	str	r0, [r7, #4]
	// SR_RXNE (Read data register not empty) bit is set by hardware
	while (!(USARTx->ISR & USART_ISR_RXNE));  // Wait until RXNE (RX not empty) bit is set
 8001024:	bf00      	nop
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	69db      	ldr	r3, [r3, #28]
 800102a:	f003 0320 	and.w	r3, r3, #32
 800102e:	2b00      	cmp	r3, #0
 8001030:	d0f9      	beq.n	8001026 <USART_Read+0xa>
	// USART resets the RXNE flag automatically after reading DR
	return ((uint8_t)(USARTx->RDR & 0xFF));
 8001032:	687b      	ldr	r3, [r7, #4]
 8001034:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8001036:	b29b      	uxth	r3, r3
 8001038:	b2db      	uxtb	r3, r3
	// Reading USART_DR automatically clears the RXNE flag 
}
 800103a:	4618      	mov	r0, r3
 800103c:	370c      	adds	r7, #12
 800103e:	46bd      	mov	sp, r7
 8001040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001044:	4770      	bx	lr

08001046 <USART_Write>:

void USART_Write(USART_TypeDef * USARTx, uint8_t *buffer, uint32_t nBytes) {
 8001046:	b580      	push	{r7, lr}
 8001048:	b086      	sub	sp, #24
 800104a:	af00      	add	r7, sp, #0
 800104c:	60f8      	str	r0, [r7, #12]
 800104e:	60b9      	str	r1, [r7, #8]
 8001050:	607a      	str	r2, [r7, #4]
	int i;
	// TXE is cleared by a write to the USART_DR register.
	// TXE is set by hardware when the content of the TDR 
	// register has been transferred into the shift register.
	for (i = 0; i < nBytes; i++) {
 8001052:	2300      	movs	r3, #0
 8001054:	617b      	str	r3, [r7, #20]
 8001056:	e014      	b.n	8001082 <USART_Write+0x3c>
		while (!(USARTx->ISR & USART_ISR_TXE));   	// wait until TXE (TX empty) bit is set
 8001058:	bf00      	nop
 800105a:	68fb      	ldr	r3, [r7, #12]
 800105c:	69db      	ldr	r3, [r3, #28]
 800105e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001062:	2b00      	cmp	r3, #0
 8001064:	d0f9      	beq.n	800105a <USART_Write+0x14>
		// Writing USART_DR automatically clears the TXE flag 	
		USARTx->TDR = buffer[i] & 0xFF;
 8001066:	697b      	ldr	r3, [r7, #20]
 8001068:	68ba      	ldr	r2, [r7, #8]
 800106a:	4413      	add	r3, r2
 800106c:	781b      	ldrb	r3, [r3, #0]
 800106e:	b29a      	uxth	r2, r3
 8001070:	68fb      	ldr	r3, [r7, #12]
 8001072:	851a      	strh	r2, [r3, #40]	; 0x28
		USART_Delay(300);
 8001074:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001078:	f000 f818 	bl	80010ac <USART_Delay>
	for (i = 0; i < nBytes; i++) {
 800107c:	697b      	ldr	r3, [r7, #20]
 800107e:	3301      	adds	r3, #1
 8001080:	617b      	str	r3, [r7, #20]
 8001082:	697b      	ldr	r3, [r7, #20]
 8001084:	687a      	ldr	r2, [r7, #4]
 8001086:	429a      	cmp	r2, r3
 8001088:	d8e6      	bhi.n	8001058 <USART_Write+0x12>
	}
	while (!(USARTx->ISR & USART_ISR_TC));   		  // wait until TC bit is set
 800108a:	bf00      	nop
 800108c:	68fb      	ldr	r3, [r7, #12]
 800108e:	69db      	ldr	r3, [r3, #28]
 8001090:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001094:	2b00      	cmp	r3, #0
 8001096:	d0f9      	beq.n	800108c <USART_Write+0x46>
	USARTx->ISR &= ~USART_ISR_TC;
 8001098:	68fb      	ldr	r3, [r7, #12]
 800109a:	69db      	ldr	r3, [r3, #28]
 800109c:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 80010a0:	68fb      	ldr	r3, [r7, #12]
 80010a2:	61da      	str	r2, [r3, #28]
}   
 80010a4:	bf00      	nop
 80010a6:	3718      	adds	r7, #24
 80010a8:	46bd      	mov	sp, r7
 80010aa:	bd80      	pop	{r7, pc}

080010ac <USART_Delay>:
 

void USART_Delay(uint32_t us) {
 80010ac:	b480      	push	{r7}
 80010ae:	b085      	sub	sp, #20
 80010b0:	af00      	add	r7, sp, #0
 80010b2:	6078      	str	r0, [r7, #4]
	uint32_t time = 100*us/7;    
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	2264      	movs	r2, #100	; 0x64
 80010b8:	fb03 f202 	mul.w	r2, r3, r2
 80010bc:	4b0a      	ldr	r3, [pc, #40]	; (80010e8 <USART_Delay+0x3c>)
 80010be:	fba3 1302 	umull	r1, r3, r3, r2
 80010c2:	1ad2      	subs	r2, r2, r3
 80010c4:	0852      	lsrs	r2, r2, #1
 80010c6:	4413      	add	r3, r2
 80010c8:	089b      	lsrs	r3, r3, #2
 80010ca:	60fb      	str	r3, [r7, #12]
	while(--time);   
 80010cc:	bf00      	nop
 80010ce:	68fb      	ldr	r3, [r7, #12]
 80010d0:	3b01      	subs	r3, #1
 80010d2:	60fb      	str	r3, [r7, #12]
 80010d4:	68fb      	ldr	r3, [r7, #12]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d1f9      	bne.n	80010ce <USART_Delay+0x22>
}
 80010da:	bf00      	nop
 80010dc:	bf00      	nop
 80010de:	3714      	adds	r7, #20
 80010e0:	46bd      	mov	sp, r7
 80010e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e6:	4770      	bx	lr
 80010e8:	24924925 	.word	0x24924925

080010ec <Clock_Init>:
#include "clock.h"
void Clock_Init(void){
 80010ec:	b480      	push	{r7}
 80010ee:	b083      	sub	sp, #12
 80010f0:	af00      	add	r7, sp, #0
	// Disable input capture to configure
	TIM2->CCER &= ~(TIM_CCER_CC1E);
 80010f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010f6:	6a1b      	ldr	r3, [r3, #32]
 80010f8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80010fc:	f023 0301 	bic.w	r3, r3, #1
 8001100:	6213      	str	r3, [r2, #32]

	TIM2->EGR |= TIM_EGR_UG;
 8001102:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001106:	695b      	ldr	r3, [r3, #20]
 8001108:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800110c:	f043 0301 	orr.w	r3, r3, #1
 8001110:	6153      	str	r3, [r2, #20]

	//Enable clock for TIM2
	RCC->AHB1ENR |= RCC_AHB2ENR_GPIOAEN;
 8001112:	4ba4      	ldr	r3, [pc, #656]	; (80013a4 <Clock_Init+0x2b8>)
 8001114:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001116:	4aa3      	ldr	r2, [pc, #652]	; (80013a4 <Clock_Init+0x2b8>)
 8001118:	f043 0301 	orr.w	r3, r3, #1
 800111c:	6493      	str	r3, [r2, #72]	; 0x48
	RCC->APB1ENR1 |= RCC_APB1ENR1_TIM2EN;
 800111e:	4ba1      	ldr	r3, [pc, #644]	; (80013a4 <Clock_Init+0x2b8>)
 8001120:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001122:	4aa0      	ldr	r2, [pc, #640]	; (80013a4 <Clock_Init+0x2b8>)
 8001124:	f043 0301 	orr.w	r3, r3, #1
 8001128:	6593      	str	r3, [r2, #88]	; 0x58
	//Load the prescaler value into the TIM2->PSC register
	TIM2->PSC = 79;
 800112a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800112e:	224f      	movs	r2, #79	; 0x4f
 8001130:	629a      	str	r2, [r3, #40]	; 0x28

	// configure input capture for channel 1 for rising edge
	TIM2->CCMR1 &= ~(TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC1S_1);
 8001132:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001136:	699b      	ldr	r3, [r3, #24]
 8001138:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800113c:	f023 0303 	bic.w	r3, r3, #3
 8001140:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 |= TIM_CCMR1_CC1S_0;
 8001142:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001146:	699b      	ldr	r3, [r3, #24]
 8001148:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800114c:	f043 0301 	orr.w	r3, r3, #1
 8001150:	6193      	str	r3, [r2, #24]
	TIM2->CCMR1 &= ~TIM_CCMR1_IC1F;
 8001152:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001156:	699b      	ldr	r3, [r3, #24]
 8001158:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800115c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001160:	6193      	str	r3, [r2, #24]

	// Set input capture for rising edge
	TIM2->CCER &= ~TIM_CCER_CC1P; // Clear CC1P bit for rising edge detection on channel 1
 8001162:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001166:	6a1b      	ldr	r3, [r3, #32]
 8001168:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800116c:	f023 0302 	bic.w	r3, r3, #2
 8001170:	6213      	str	r3, [r2, #32]

	TIM2->CCER |= TIM_CCER_CC1E;
 8001172:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001176:	6a1b      	ldr	r3, [r3, #32]
 8001178:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800117c:	f043 0301 	orr.w	r3, r3, #1
 8001180:	6213      	str	r3, [r2, #32]
	// Set it for alternative channel
	GPIOA->MODER &= ~(3UL << (0 * 2));
 8001182:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800118c:	f023 0303 	bic.w	r3, r3, #3
 8001190:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (2 << (0 * 2));
 8001192:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 800119c:	f043 0302 	orr.w	r3, r3, #2
 80011a0:	6013      	str	r3, [r2, #0]
	GPIOA->AFR[0] &= ~(0xF << (0 * 4));
 80011a2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011a6:	6a1b      	ldr	r3, [r3, #32]
 80011a8:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011ac:	f023 030f 	bic.w	r3, r3, #15
 80011b0:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1 << (0 * 4));
 80011b2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80011b6:	6a1b      	ldr	r3, [r3, #32]
 80011b8:	f04f 4290 	mov.w	r2, #1207959552	; 0x48000000
 80011bc:	f043 0301 	orr.w	r3, r3, #1
 80011c0:	6213      	str	r3, [r2, #32]

	// Enable timer counter

	TIM2->CR1 |= TIM_CR1_CEN;
 80011c2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80011cc:	f043 0301 	orr.w	r3, r3, #1
 80011d0:	6013      	str	r3, [r2, #0]

	// Clear all pending interrupts
	TIM2->SR = 0;
 80011d2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80011d6:	2200      	movs	r2, #0
 80011d8:	611a      	str	r2, [r3, #16]


	// Generate an update event to immediately update the prescaler value
	TIM2->CR1 |= TIM_CR1_CEN;
 80011da:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80011de:	681b      	ldr	r3, [r3, #0]
 80011e0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80011e4:	f043 0301 	orr.w	r3, r3, #1
 80011e8:	6013      	str	r3, [r2, #0]

	RCC->CR |= ((uint32_t)RCC_CR_HSION);
 80011ea:	4b6e      	ldr	r3, [pc, #440]	; (80013a4 <Clock_Init+0x2b8>)
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	4a6d      	ldr	r2, [pc, #436]	; (80013a4 <Clock_Init+0x2b8>)
 80011f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80011f4:	6013      	str	r3, [r2, #0]
	uint32_t HSITrim;

	// To correctly read data from FLASH memory, the number of wait states (LATENCY)
	//must be correctly programmed according to the frequency of the CPU clock
	//(HCLK) and the supply voltage of the device.
	FLASH->ACR &= ~FLASH_ACR_LATENCY;
 80011f6:	4b6c      	ldr	r3, [pc, #432]	; (80013a8 <Clock_Init+0x2bc>)
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	4a6b      	ldr	r2, [pc, #428]	; (80013a8 <Clock_Init+0x2bc>)
 80011fc:	f023 0307 	bic.w	r3, r3, #7
 8001200:	6013      	str	r3, [r2, #0]
	FLASH->ACR |=  FLASH_ACR_LATENCY_2WS;
 8001202:	4b69      	ldr	r3, [pc, #420]	; (80013a8 <Clock_Init+0x2bc>)
 8001204:	681b      	ldr	r3, [r3, #0]
 8001206:	4a68      	ldr	r2, [pc, #416]	; (80013a8 <Clock_Init+0x2bc>)
 8001208:	f043 0302 	orr.w	r3, r3, #2
 800120c:	6013      	str	r3, [r2, #0]
		
	// Enable the Internal High Speed oscillator (HSI
	RCC->CR |= RCC_CR_HSION;
 800120e:	4b65      	ldr	r3, [pc, #404]	; (80013a4 <Clock_Init+0x2b8>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	4a64      	ldr	r2, [pc, #400]	; (80013a4 <Clock_Init+0x2b8>)
 8001214:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001218:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_HSIRDY) == 0);
 800121a:	bf00      	nop
 800121c:	4b61      	ldr	r3, [pc, #388]	; (80013a4 <Clock_Init+0x2b8>)
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001224:	2b00      	cmp	r3, #0
 8001226:	d0f9      	beq.n	800121c <Clock_Init+0x130>
	// Adjusts the Internal High Speed oscillator (HSI) calibration value
	// RC oscillator frequencies are factory calibrated by ST for 1 % accuracy at 25oC
	// After reset, the factory calibration value is loaded in HSICAL[7:0] of RCC_ICSCR	
	HSITrim = 16;
 8001228:	2310      	movs	r3, #16
 800122a:	607b      	str	r3, [r7, #4]
	RCC->ICSCR &= ~RCC_ICSCR_HSITRIM;
 800122c:	4b5d      	ldr	r3, [pc, #372]	; (80013a4 <Clock_Init+0x2b8>)
 800122e:	685b      	ldr	r3, [r3, #4]
 8001230:	4a5c      	ldr	r2, [pc, #368]	; (80013a4 <Clock_Init+0x2b8>)
 8001232:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 8001236:	6053      	str	r3, [r2, #4]
	RCC->ICSCR |= HSITrim << 24;
 8001238:	4b5a      	ldr	r3, [pc, #360]	; (80013a4 <Clock_Init+0x2b8>)
 800123a:	685a      	ldr	r2, [r3, #4]
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	061b      	lsls	r3, r3, #24
 8001240:	4958      	ldr	r1, [pc, #352]	; (80013a4 <Clock_Init+0x2b8>)
 8001242:	4313      	orrs	r3, r2
 8001244:	604b      	str	r3, [r1, #4]
	
	RCC->CR    &= ~RCC_CR_PLLON; 
 8001246:	4b57      	ldr	r3, [pc, #348]	; (80013a4 <Clock_Init+0x2b8>)
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	4a56      	ldr	r2, [pc, #344]	; (80013a4 <Clock_Init+0x2b8>)
 800124c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001250:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == RCC_CR_PLLRDY);
 8001252:	bf00      	nop
 8001254:	4b53      	ldr	r3, [pc, #332]	; (80013a4 <Clock_Init+0x2b8>)
 8001256:	681b      	ldr	r3, [r3, #0]
 8001258:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800125c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8001260:	d0f8      	beq.n	8001254 <Clock_Init+0x168>
	
	// Select clock source to PLL
	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLSRC;
 8001262:	4b50      	ldr	r3, [pc, #320]	; (80013a4 <Clock_Init+0x2b8>)
 8001264:	68db      	ldr	r3, [r3, #12]
 8001266:	4a4f      	ldr	r2, [pc, #316]	; (80013a4 <Clock_Init+0x2b8>)
 8001268:	f023 0303 	bic.w	r3, r3, #3
 800126c:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC_HSI; // 00 = No clock, 01 = MSI, 10 = HSI, 11 = HSE
 800126e:	4b4d      	ldr	r3, [pc, #308]	; (80013a4 <Clock_Init+0x2b8>)
 8001270:	68db      	ldr	r3, [r3, #12]
 8001272:	4a4c      	ldr	r2, [pc, #304]	; (80013a4 <Clock_Init+0x2b8>)
 8001274:	f043 0302 	orr.w	r3, r3, #2
 8001278:	60d3      	str	r3, [r2, #12]
	
	// Make PLL as 80 MHz
	// f(VCO clock) = f(PLL clock input) * (PLLN / PLLM) = 16MHz * 20/2 = 160 MHz
	// f(PLL_R) = f(VCO clock) / PLLR = 160MHz/2 = 80MHz
	RCC->PLLCFGR = (RCC->PLLCFGR & ~RCC_PLLCFGR_PLLN) | 20U << 8;
 800127a:	4b4a      	ldr	r3, [pc, #296]	; (80013a4 <Clock_Init+0x2b8>)
 800127c:	68db      	ldr	r3, [r3, #12]
 800127e:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8001282:	4a48      	ldr	r2, [pc, #288]	; (80013a4 <Clock_Init+0x2b8>)
 8001284:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8001288:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR = (RCC->PLLCFGR & ~RCC_PLLCFGR_PLLM) | 1U << 4; // 000: PLLM = 1, 001: PLLM = 2, 010: PLLM = 3, 011: PLLM = 4, 100: PLLM = 5, 101: PLLM = 6, 110: PLLM = 7, 111: PLLM = 8
 800128a:	4b46      	ldr	r3, [pc, #280]	; (80013a4 <Clock_Init+0x2b8>)
 800128c:	68db      	ldr	r3, [r3, #12]
 800128e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001292:	4a44      	ldr	r2, [pc, #272]	; (80013a4 <Clock_Init+0x2b8>)
 8001294:	f043 0310 	orr.w	r3, r3, #16
 8001298:	60d3      	str	r3, [r2, #12]

	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLR;  // 00: PLLR = 2, 01: PLLR = 4, 10: PLLR = 6, 11: PLLR = 8	
 800129a:	4b42      	ldr	r3, [pc, #264]	; (80013a4 <Clock_Init+0x2b8>)
 800129c:	68db      	ldr	r3, [r3, #12]
 800129e:	4a41      	ldr	r2, [pc, #260]	; (80013a4 <Clock_Init+0x2b8>)
 80012a0:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 80012a4:	60d3      	str	r3, [r2, #12]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLREN; // Enable Main PLL PLLCLK output 
 80012a6:	4b3f      	ldr	r3, [pc, #252]	; (80013a4 <Clock_Init+0x2b8>)
 80012a8:	68db      	ldr	r3, [r3, #12]
 80012aa:	4a3e      	ldr	r2, [pc, #248]	; (80013a4 <Clock_Init+0x2b8>)
 80012ac:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80012b0:	60d3      	str	r3, [r2, #12]

	RCC->CR   |= RCC_CR_PLLON; 
 80012b2:	4b3c      	ldr	r3, [pc, #240]	; (80013a4 <Clock_Init+0x2b8>)
 80012b4:	681b      	ldr	r3, [r3, #0]
 80012b6:	4a3b      	ldr	r2, [pc, #236]	; (80013a4 <Clock_Init+0x2b8>)
 80012b8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80012bc:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == 0);
 80012be:	bf00      	nop
 80012c0:	4b38      	ldr	r3, [pc, #224]	; (80013a4 <Clock_Init+0x2b8>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80012c8:	2b00      	cmp	r3, #0
 80012ca:	d0f9      	beq.n	80012c0 <Clock_Init+0x1d4>
	
	// Select PLL selected as system clock
	RCC->CFGR &= ~RCC_CFGR_SW;
 80012cc:	4b35      	ldr	r3, [pc, #212]	; (80013a4 <Clock_Init+0x2b8>)
 80012ce:	689b      	ldr	r3, [r3, #8]
 80012d0:	4a34      	ldr	r2, [pc, #208]	; (80013a4 <Clock_Init+0x2b8>)
 80012d2:	f023 0303 	bic.w	r3, r3, #3
 80012d6:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= RCC_CFGR_SW_PLL; // 00: MSI, 01:HSI, 10: HSE, 11: PLL
 80012d8:	4b32      	ldr	r3, [pc, #200]	; (80013a4 <Clock_Init+0x2b8>)
 80012da:	689b      	ldr	r3, [r3, #8]
 80012dc:	4a31      	ldr	r2, [pc, #196]	; (80013a4 <Clock_Init+0x2b8>)
 80012de:	f043 0303 	orr.w	r3, r3, #3
 80012e2:	6093      	str	r3, [r2, #8]
	
	// Wait until System Clock has been selected
	while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 80012e4:	bf00      	nop
 80012e6:	4b2f      	ldr	r3, [pc, #188]	; (80013a4 <Clock_Init+0x2b8>)
 80012e8:	689b      	ldr	r3, [r3, #8]
 80012ea:	f003 030c 	and.w	r3, r3, #12
 80012ee:	2b0c      	cmp	r3, #12
 80012f0:	d1f9      	bne.n	80012e6 <Clock_Init+0x1fa>
	
	// The maximum frequency of the AHB, the APB1 and the APB2 domains is 80 MHz.
	RCC->CFGR &= ~RCC_CFGR_HPRE;  // AHB prescaler = 1; SYSCLK not divided
 80012f2:	4b2c      	ldr	r3, [pc, #176]	; (80013a4 <Clock_Init+0x2b8>)
 80012f4:	689b      	ldr	r3, [r3, #8]
 80012f6:	4a2b      	ldr	r2, [pc, #172]	; (80013a4 <Clock_Init+0x2b8>)
 80012f8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80012fc:	6093      	str	r3, [r2, #8]
	RCC->CFGR &= ~RCC_CFGR_PPRE1; // APB high-speed prescaler (APB1) = 1, HCLK not divided
 80012fe:	4b29      	ldr	r3, [pc, #164]	; (80013a4 <Clock_Init+0x2b8>)
 8001300:	689b      	ldr	r3, [r3, #8]
 8001302:	4a28      	ldr	r2, [pc, #160]	; (80013a4 <Clock_Init+0x2b8>)
 8001304:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001308:	6093      	str	r3, [r2, #8]
	RCC->CFGR &= ~RCC_CFGR_PPRE2; // APB high-speed prescaler (APB2) = 1, HCLK not divided
 800130a:	4b26      	ldr	r3, [pc, #152]	; (80013a4 <Clock_Init+0x2b8>)
 800130c:	689b      	ldr	r3, [r3, #8]
 800130e:	4a25      	ldr	r2, [pc, #148]	; (80013a4 <Clock_Init+0x2b8>)
 8001310:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8001314:	6093      	str	r3, [r2, #8]
	// RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLP; 
	// RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLQ;	
	// RCC->PLLCFGR |= RCC_PLLCFGR_PLLPEN; // Enable Main PLL PLLSAI3CLK output enable
	// RCC->PLLCFGR |= RCC_PLLCFGR_PLLQEN; // Enable Main PLL PLL48M1CLK output enable
	
	RCC->CR &= ~RCC_CR_PLLSAI1ON;  // SAI1 PLL enable
 8001316:	4b23      	ldr	r3, [pc, #140]	; (80013a4 <Clock_Init+0x2b8>)
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	4a22      	ldr	r2, [pc, #136]	; (80013a4 <Clock_Init+0x2b8>)
 800131c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8001320:	6013      	str	r3, [r2, #0]
	while ( (RCC->CR & RCC_CR_PLLSAI1ON) == RCC_CR_PLLSAI1ON );
 8001322:	bf00      	nop
 8001324:	4b1f      	ldr	r3, [pc, #124]	; (80013a4 <Clock_Init+0x2b8>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800132c:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8001330:	d0f8      	beq.n	8001324 <Clock_Init+0x238>
	// 8 MHz * 24 / 17 = 11.294MHz
	// f(VCOSAI1 clock) = f(PLL clock input) *  (PLLSAI1N / PLLM)
	// PLLSAI1CLK: f(PLLSAI1_P) = f(VCOSAI1 clock) / PLLSAI1P
	// PLLUSB2CLK: f(PLLSAI1_Q) = f(VCOSAI1 clock) / PLLSAI1Q
	// PLLADC1CLK: f(PLLSAI1_R) = f(VCOSAI1 clock) / PLLSAI1R
	RCC->PLLSAI1CFGR &= ~RCC_PLLSAI1CFGR_PLLSAI1N;
 8001332:	4b1c      	ldr	r3, [pc, #112]	; (80013a4 <Clock_Init+0x2b8>)
 8001334:	691b      	ldr	r3, [r3, #16]
 8001336:	4a1b      	ldr	r2, [pc, #108]	; (80013a4 <Clock_Init+0x2b8>)
 8001338:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 800133c:	6113      	str	r3, [r2, #16]
	RCC->PLLSAI1CFGR |= 24U<<8;
 800133e:	4b19      	ldr	r3, [pc, #100]	; (80013a4 <Clock_Init+0x2b8>)
 8001340:	691b      	ldr	r3, [r3, #16]
 8001342:	4a18      	ldr	r2, [pc, #96]	; (80013a4 <Clock_Init+0x2b8>)
 8001344:	f443 53c0 	orr.w	r3, r3, #6144	; 0x1800
 8001348:	6113      	str	r3, [r2, #16]
	
	// SAI1PLL division factor for PLLSAI1CLK
	// 0: PLLSAI1P = 7, 1: PLLSAI1P = 17
	RCC->PLLSAI1CFGR |= RCC_PLLSAI1CFGR_PLLSAI1P;
 800134a:	4b16      	ldr	r3, [pc, #88]	; (80013a4 <Clock_Init+0x2b8>)
 800134c:	691b      	ldr	r3, [r3, #16]
 800134e:	4a15      	ldr	r2, [pc, #84]	; (80013a4 <Clock_Init+0x2b8>)
 8001350:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001354:	6113      	str	r3, [r2, #16]
	RCC->PLLSAI1CFGR |= RCC_PLLSAI1CFGR_PLLSAI1PEN;
 8001356:	4b13      	ldr	r3, [pc, #76]	; (80013a4 <Clock_Init+0x2b8>)
 8001358:	691b      	ldr	r3, [r3, #16]
 800135a:	4a12      	ldr	r2, [pc, #72]	; (80013a4 <Clock_Init+0x2b8>)
 800135c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001360:	6113      	str	r3, [r2, #16]
	
	
	RCC->CR |= RCC_CR_PLLSAI1ON;  // SAI1 PLL enable
 8001362:	4b10      	ldr	r3, [pc, #64]	; (80013a4 <Clock_Init+0x2b8>)
 8001364:	681b      	ldr	r3, [r3, #0]
 8001366:	4a0f      	ldr	r2, [pc, #60]	; (80013a4 <Clock_Init+0x2b8>)
 8001368:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800136c:	6013      	str	r3, [r2, #0]
	while ( (RCC->CR & RCC_CR_PLLSAI1ON) == 0);
 800136e:	bf00      	nop
 8001370:	4b0c      	ldr	r3, [pc, #48]	; (80013a4 <Clock_Init+0x2b8>)
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001378:	2b00      	cmp	r3, #0
 800137a:	d0f9      	beq.n	8001370 <Clock_Init+0x284>
	
	RCC->CCIPR &= ~RCC_CCIPR_SAI1SEL;
 800137c:	4b09      	ldr	r3, [pc, #36]	; (80013a4 <Clock_Init+0x2b8>)
 800137e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001382:	4a08      	ldr	r2, [pc, #32]	; (80013a4 <Clock_Init+0x2b8>)
 8001384:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8001388:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

	RCC->APB2ENR |= RCC_APB2ENR_SAI1EN;
 800138c:	4b05      	ldr	r3, [pc, #20]	; (80013a4 <Clock_Init+0x2b8>)
 800138e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001390:	4a04      	ldr	r2, [pc, #16]	; (80013a4 <Clock_Init+0x2b8>)
 8001392:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001396:	6613      	str	r3, [r2, #96]	; 0x60
}
 8001398:	bf00      	nop
 800139a:	370c      	adds	r7, #12
 800139c:	46bd      	mov	sp, r7
 800139e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013a2:	4770      	bx	lr
 80013a4:	40021000 	.word	0x40021000
 80013a8:	40022000 	.word	0x40022000

080013ac <power_on_self_test>:
struct bucket {
  int bucket_num;
  int count;
};

int power_on_self_test(void){
 80013ac:	b480      	push	{r7}
 80013ae:	b085      	sub	sp, #20
 80013b0:	af00      	add	r7, sp, #0
	 uint32_t start_time = TIM2->CNT;
 80013b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80013b8:	60bb      	str	r3, [r7, #8]
	 //100 milliseconds in microseconds
	 uint32_t timeout = 100000;
 80013ba:	4b13      	ldr	r3, [pc, #76]	; (8001408 <power_on_self_test+0x5c>)
 80013bc:	607b      	str	r3, [r7, #4]
	 int pulse_detected = 0;
 80013be:	2300      	movs	r3, #0
 80013c0:	60fb      	str	r3, [r7, #12]

	 //Wait for a pulse or timeout
	 while ((TIM2->CNT - start_time) < timeout) {
 80013c2:	e011      	b.n	80013e8 <power_on_self_test+0x3c>
		//Check if the capture/compare interrupt flag is set
	    if (TIM2->SR & TIM_SR_CC1IF) {
 80013c4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013c8:	691b      	ldr	r3, [r3, #16]
 80013ca:	f003 0302 	and.w	r3, r3, #2
 80013ce:	2b00      	cmp	r3, #0
 80013d0:	d00a      	beq.n	80013e8 <power_on_self_test+0x3c>
	    	pulse_detected = 1;
 80013d2:	2301      	movs	r3, #1
 80013d4:	60fb      	str	r3, [r7, #12]
	    	//Clear the interrupt flag
	        TIM2->SR &= ~TIM_SR_CC1IF;
 80013d6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013da:	691b      	ldr	r3, [r3, #16]
 80013dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80013e0:	f023 0302 	bic.w	r3, r3, #2
 80013e4:	6113      	str	r3, [r2, #16]
	        //Exit the loop if a pulse is detected
	        break;
 80013e6:	e007      	b.n	80013f8 <power_on_self_test+0x4c>
	 while ((TIM2->CNT - start_time) < timeout) {
 80013e8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80013ec:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80013ee:	68bb      	ldr	r3, [r7, #8]
 80013f0:	1ad3      	subs	r3, r2, r3
 80013f2:	687a      	ldr	r2, [r7, #4]
 80013f4:	429a      	cmp	r2, r3
 80013f6:	d8e5      	bhi.n	80013c4 <power_on_self_test+0x18>
	    }
	 }
	 return pulse_detected;
 80013f8:	68fb      	ldr	r3, [r7, #12]
}
 80013fa:	4618      	mov	r0, r3
 80013fc:	3714      	adds	r7, #20
 80013fe:	46bd      	mov	sp, r7
 8001400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001404:	4770      	bx	lr
 8001406:	bf00      	nop
 8001408:	000186a0 	.word	0x000186a0

0800140c <init_buckets>:

//Initialize the buckets according to the limits the user set
struct bucket buckets[101];
void init_buckets(){
 800140c:	b480      	push	{r7}
 800140e:	b083      	sub	sp, #12
 8001410:	af00      	add	r7, sp, #0
	for(int i = 0;i<=100;i++){
 8001412:	2300      	movs	r3, #0
 8001414:	607b      	str	r3, [r7, #4]
 8001416:	e010      	b.n	800143a <init_buckets+0x2e>
		buckets[i].bucket_num = i+lower_limit;
 8001418:	4b0d      	ldr	r3, [pc, #52]	; (8001450 <init_buckets+0x44>)
 800141a:	681a      	ldr	r2, [r3, #0]
 800141c:	687b      	ldr	r3, [r7, #4]
 800141e:	441a      	add	r2, r3
 8001420:	490c      	ldr	r1, [pc, #48]	; (8001454 <init_buckets+0x48>)
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
		buckets[i].count = 0;
 8001428:	4a0a      	ldr	r2, [pc, #40]	; (8001454 <init_buckets+0x48>)
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	00db      	lsls	r3, r3, #3
 800142e:	4413      	add	r3, r2
 8001430:	2200      	movs	r2, #0
 8001432:	605a      	str	r2, [r3, #4]
	for(int i = 0;i<=100;i++){
 8001434:	687b      	ldr	r3, [r7, #4]
 8001436:	3301      	adds	r3, #1
 8001438:	607b      	str	r3, [r7, #4]
 800143a:	687b      	ldr	r3, [r7, #4]
 800143c:	2b64      	cmp	r3, #100	; 0x64
 800143e:	ddeb      	ble.n	8001418 <init_buckets+0xc>
	}
}
 8001440:	bf00      	nop
 8001442:	bf00      	nop
 8001444:	370c      	adds	r7, #12
 8001446:	46bd      	mov	sp, r7
 8001448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144c:	4770      	bx	lr
 800144e:	bf00      	nop
 8001450:	20000000 	.word	0x20000000
 8001454:	20000258 	.word	0x20000258

08001458 <get_limit>:

//This function gtes the numbers from the user USARt input. It also checks if they are digits
//and in the range
void get_limit(void *buff, int max_length){
 8001458:	b580      	push	{r7, lr}
 800145a:	b086      	sub	sp, #24
 800145c:	af00      	add	r7, sp, #0
 800145e:	6078      	str	r0, [r7, #4]
 8001460:	6039      	str	r1, [r7, #0]
	printf("\033[0;37m");
 8001462:	483b      	ldr	r0, [pc, #236]	; (8001550 <get_limit+0xf8>)
 8001464:	f000 fa22 	bl	80018ac <printf>
	int count = 0;
 8001468:	2300      	movs	r3, #0
 800146a:	617b      	str	r3, [r7, #20]
	char read_byte = 0;
 800146c:	2300      	movs	r3, #0
 800146e:	74fb      	strb	r3, [r7, #19]
	while(read_byte != '\r'){
 8001470:	e02b      	b.n	80014ca <get_limit+0x72>
		read_byte = USART_Read(USART2);
 8001472:	4838      	ldr	r0, [pc, #224]	; (8001554 <get_limit+0xfc>)
 8001474:	f7ff fdd2 	bl	800101c <USART_Read>
 8001478:	4603      	mov	r3, r0
 800147a:	74fb      	strb	r3, [r7, #19]

		if(read_byte!= '\r'){
 800147c:	7cfb      	ldrb	r3, [r7, #19]
 800147e:	2b0d      	cmp	r3, #13
 8001480:	d023      	beq.n	80014ca <get_limit+0x72>
			buffer[count] = read_byte;
 8001482:	4a35      	ldr	r2, [pc, #212]	; (8001558 <get_limit+0x100>)
 8001484:	697b      	ldr	r3, [r7, #20]
 8001486:	4413      	add	r3, r2
 8001488:	7cfa      	ldrb	r2, [r7, #19]
 800148a:	701a      	strb	r2, [r3, #0]
			if(!isdigit(buffer[count])){
 800148c:	4a32      	ldr	r2, [pc, #200]	; (8001558 <get_limit+0x100>)
 800148e:	697b      	ldr	r3, [r7, #20]
 8001490:	4413      	add	r3, r2
 8001492:	781b      	ldrb	r3, [r3, #0]
 8001494:	3301      	adds	r3, #1
 8001496:	4a31      	ldr	r2, [pc, #196]	; (800155c <get_limit+0x104>)
 8001498:	4413      	add	r3, r2
 800149a:	781b      	ldrb	r3, [r3, #0]
 800149c:	f003 0304 	and.w	r3, r3, #4
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d10b      	bne.n	80014bc <get_limit+0x64>
				printf("\033[0;31m");
 80014a4:	482e      	ldr	r0, [pc, #184]	; (8001560 <get_limit+0x108>)
 80014a6:	f000 fa01 	bl	80018ac <printf>
				printf("\r\n%s\r\n","Please input only digits");
 80014aa:	492e      	ldr	r1, [pc, #184]	; (8001564 <get_limit+0x10c>)
 80014ac:	482e      	ldr	r0, [pc, #184]	; (8001568 <get_limit+0x110>)
 80014ae:	f000 f9fd 	bl	80018ac <printf>
				get_limit(buffer,sizeof(buffer));
 80014b2:	2164      	movs	r1, #100	; 0x64
 80014b4:	4828      	ldr	r0, [pc, #160]	; (8001558 <get_limit+0x100>)
 80014b6:	f7ff ffcf 	bl	8001458 <get_limit>
				break;
 80014ba:	e009      	b.n	80014d0 <get_limit+0x78>
			}
			count++;
 80014bc:	697b      	ldr	r3, [r7, #20]
 80014be:	3301      	adds	r3, #1
 80014c0:	617b      	str	r3, [r7, #20]
			printf("%c",read_byte);
 80014c2:	7cfb      	ldrb	r3, [r7, #19]
 80014c4:	4618      	mov	r0, r3
 80014c6:	f000 f9e3 	bl	8001890 <putchar>
	while(read_byte != '\r'){
 80014ca:	7cfb      	ldrb	r3, [r7, #19]
 80014cc:	2b0d      	cmp	r3, #13
 80014ce:	d1d0      	bne.n	8001472 <get_limit+0x1a>
		}
	}

	printf("\r\n");
 80014d0:	4826      	ldr	r0, [pc, #152]	; (800156c <get_limit+0x114>)
 80014d2:	f000 f9c5 	bl	8001860 <puts>
    int result = 0;
 80014d6:	2300      	movs	r3, #0
 80014d8:	60fb      	str	r3, [r7, #12]
    for (int i = 0;i<count; i++) {
 80014da:	2300      	movs	r3, #0
 80014dc:	60bb      	str	r3, [r7, #8]
 80014de:	e00f      	b.n	8001500 <get_limit+0xa8>
        result = result * 10 + (buffer[i] - '0');
 80014e0:	68fa      	ldr	r2, [r7, #12]
 80014e2:	4613      	mov	r3, r2
 80014e4:	009b      	lsls	r3, r3, #2
 80014e6:	4413      	add	r3, r2
 80014e8:	005b      	lsls	r3, r3, #1
 80014ea:	4619      	mov	r1, r3
 80014ec:	4a1a      	ldr	r2, [pc, #104]	; (8001558 <get_limit+0x100>)
 80014ee:	68bb      	ldr	r3, [r7, #8]
 80014f0:	4413      	add	r3, r2
 80014f2:	781b      	ldrb	r3, [r3, #0]
 80014f4:	3b30      	subs	r3, #48	; 0x30
 80014f6:	440b      	add	r3, r1
 80014f8:	60fb      	str	r3, [r7, #12]
    for (int i = 0;i<count; i++) {
 80014fa:	68bb      	ldr	r3, [r7, #8]
 80014fc:	3301      	adds	r3, #1
 80014fe:	60bb      	str	r3, [r7, #8]
 8001500:	68ba      	ldr	r2, [r7, #8]
 8001502:	697b      	ldr	r3, [r7, #20]
 8001504:	429a      	cmp	r2, r3
 8001506:	dbeb      	blt.n	80014e0 <get_limit+0x88>
    }
    if(result >= 50 && result <= 9950){
 8001508:	68fb      	ldr	r3, [r7, #12]
 800150a:	2b31      	cmp	r3, #49	; 0x31
 800150c:	dd08      	ble.n	8001520 <get_limit+0xc8>
 800150e:	68fb      	ldr	r3, [r7, #12]
 8001510:	f242 62de 	movw	r2, #9950	; 0x26de
 8001514:	4293      	cmp	r3, r2
 8001516:	dc03      	bgt.n	8001520 <get_limit+0xc8>
    	lower_limit = result;
 8001518:	4a15      	ldr	r2, [pc, #84]	; (8001570 <get_limit+0x118>)
 800151a:	68fb      	ldr	r3, [r7, #12]
 800151c:	6013      	str	r3, [r2, #0]
 800151e:	e012      	b.n	8001546 <get_limit+0xee>
    }
    else{
    	printf("\033[0;31m");
 8001520:	480f      	ldr	r0, [pc, #60]	; (8001560 <get_limit+0x108>)
 8001522:	f000 f9c3 	bl	80018ac <printf>
    	printf("%s\r\n","Input should be between [50-9950]");
 8001526:	4913      	ldr	r1, [pc, #76]	; (8001574 <get_limit+0x11c>)
 8001528:	4813      	ldr	r0, [pc, #76]	; (8001578 <get_limit+0x120>)
 800152a:	f000 f9bf 	bl	80018ac <printf>
    	printf("\033[0;35m");
 800152e:	4813      	ldr	r0, [pc, #76]	; (800157c <get_limit+0x124>)
 8001530:	f000 f9bc 	bl	80018ac <printf>
    	printf("%s","Enter new limit between [50-9950]: ");
 8001534:	4912      	ldr	r1, [pc, #72]	; (8001580 <get_limit+0x128>)
 8001536:	4813      	ldr	r0, [pc, #76]	; (8001584 <get_limit+0x12c>)
 8001538:	f000 f9b8 	bl	80018ac <printf>
    	get_limit(buffer,sizeof(buffer));
 800153c:	2164      	movs	r1, #100	; 0x64
 800153e:	4806      	ldr	r0, [pc, #24]	; (8001558 <get_limit+0x100>)
 8001540:	f7ff ff8a 	bl	8001458 <get_limit>
    }
}
 8001544:	bf00      	nop
 8001546:	bf00      	nop
 8001548:	3718      	adds	r7, #24
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}
 800154e:	bf00      	nop
 8001550:	08006688 	.word	0x08006688
 8001554:	40004400 	.word	0x40004400
 8001558:	200001ec 	.word	0x200001ec
 800155c:	080068ce 	.word	0x080068ce
 8001560:	08006690 	.word	0x08006690
 8001564:	08006698 	.word	0x08006698
 8001568:	080066b4 	.word	0x080066b4
 800156c:	080066bc 	.word	0x080066bc
 8001570:	20000000 	.word	0x20000000
 8001574:	080066c0 	.word	0x080066c0
 8001578:	080066e4 	.word	0x080066e4
 800157c:	080066ec 	.word	0x080066ec
 8001580:	080066f4 	.word	0x080066f4
 8001584:	08006718 	.word	0x08006718

08001588 <main>:

int main(void){
 8001588:	b580      	push	{r7, lr}
 800158a:	b08a      	sub	sp, #40	; 0x28
 800158c:	af02      	add	r7, sp, #8
    // Initialization executed once at startup

	Clock_Init();
 800158e:	f7ff fdad 	bl	80010ec <Clock_Init>
    UART2_Init();
 8001592:	f7ff fc51 	bl	8000e38 <UART2_Init>
    GPIO_Init();
 8001596:	f7ff fbad 	bl	8000cf4 <GPIO_Init>
    int post_success = 0;
 800159a:	2300      	movs	r3, #0
 800159c:	61fb      	str	r3, [r7, #28]
       do {
           printf("\033[0;35m\r\n%s","Performing Power On Self Test (POST)");
 800159e:	4986      	ldr	r1, [pc, #536]	; (80017b8 <main+0x230>)
 80015a0:	4886      	ldr	r0, [pc, #536]	; (80017bc <main+0x234>)
 80015a2:	f000 f983 	bl	80018ac <printf>
           if (power_on_self_test() == 1) {
 80015a6:	f7ff ff01 	bl	80013ac <power_on_self_test>
 80015aa:	4603      	mov	r3, r0
 80015ac:	2b01      	cmp	r3, #1
 80015ae:	d106      	bne.n	80015be <main+0x36>
               printf("\r\n%s","POST successful. Proceeding to the program");
 80015b0:	4983      	ldr	r1, [pc, #524]	; (80017c0 <main+0x238>)
 80015b2:	4884      	ldr	r0, [pc, #528]	; (80017c4 <main+0x23c>)
 80015b4:	f000 f97a 	bl	80018ac <printf>
               post_success = 1;
 80015b8:	2301      	movs	r3, #1
 80015ba:	61fb      	str	r3, [r7, #28]
 80015bc:	e00d      	b.n	80015da <main+0x52>
           } else {
               printf("\r\n%s","POST failed. No pulse detected within 100 milliseconds.");
 80015be:	4982      	ldr	r1, [pc, #520]	; (80017c8 <main+0x240>)
 80015c0:	4880      	ldr	r0, [pc, #512]	; (80017c4 <main+0x23c>)
 80015c2:	f000 f973 	bl	80018ac <printf>
               printf("\r\n%s","Press key to retry POST");
 80015c6:	4981      	ldr	r1, [pc, #516]	; (80017cc <main+0x244>)
 80015c8:	487e      	ldr	r0, [pc, #504]	; (80017c4 <main+0x23c>)
 80015ca:	f000 f96f 	bl	80018ac <printf>
               printf("\033[0;37m");
 80015ce:	4880      	ldr	r0, [pc, #512]	; (80017d0 <main+0x248>)
 80015d0:	f000 f96c 	bl	80018ac <printf>
               USART_Read(USART2);
 80015d4:	487f      	ldr	r0, [pc, #508]	; (80017d4 <main+0x24c>)
 80015d6:	f7ff fd21 	bl	800101c <USART_Read>
           }
       } while (!post_success);
 80015da:	69fb      	ldr	r3, [r7, #28]
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d0de      	beq.n	800159e <main+0x16>
    // Main loop runs forever
    while(1)
    {
    	int pulse_count = 0;
 80015e0:	2300      	movs	r3, #0
 80015e2:	61bb      	str	r3, [r7, #24]
    	//Prompt user for limits
    	strcpy(buffer,"");
 80015e4:	4b7c      	ldr	r3, [pc, #496]	; (80017d8 <main+0x250>)
 80015e6:	2200      	movs	r2, #0
 80015e8:	701a      	strb	r2, [r3, #0]
    	printf("\033[0;35m");
 80015ea:	487c      	ldr	r0, [pc, #496]	; (80017dc <main+0x254>)
 80015ec:	f000 f95e 	bl	80018ac <printf>
    	printf("\r\n%s%d%s%d%s\r\n","The current limits are [", lower_limit,"-",upper_limit,"]");
 80015f0:	4b7b      	ldr	r3, [pc, #492]	; (80017e0 <main+0x258>)
 80015f2:	681a      	ldr	r2, [r3, #0]
 80015f4:	4b7b      	ldr	r3, [pc, #492]	; (80017e4 <main+0x25c>)
 80015f6:	681b      	ldr	r3, [r3, #0]
 80015f8:	497b      	ldr	r1, [pc, #492]	; (80017e8 <main+0x260>)
 80015fa:	9101      	str	r1, [sp, #4]
 80015fc:	9300      	str	r3, [sp, #0]
 80015fe:	4b7b      	ldr	r3, [pc, #492]	; (80017ec <main+0x264>)
 8001600:	497b      	ldr	r1, [pc, #492]	; (80017f0 <main+0x268>)
 8001602:	487c      	ldr	r0, [pc, #496]	; (80017f4 <main+0x26c>)
 8001604:	f000 f952 	bl	80018ac <printf>
    	printf("%s\r\n","Press 'Y' if you would like to adjust.");
 8001608:	497b      	ldr	r1, [pc, #492]	; (80017f8 <main+0x270>)
 800160a:	487c      	ldr	r0, [pc, #496]	; (80017fc <main+0x274>)
 800160c:	f000 f94e 	bl	80018ac <printf>
    	printf("\033[0;37m");
 8001610:	486f      	ldr	r0, [pc, #444]	; (80017d0 <main+0x248>)
 8001612:	f000 f94b 	bl	80018ac <printf>
    	char answer = USART_Read(USART2);
 8001616:	486f      	ldr	r0, [pc, #444]	; (80017d4 <main+0x24c>)
 8001618:	f7ff fd00 	bl	800101c <USART_Read>
 800161c:	4603      	mov	r3, r0
 800161e:	72fb      	strb	r3, [r7, #11]
    	if(answer == 'Y' || 'y'){
    		printf("\033[0;35m");
 8001620:	486e      	ldr	r0, [pc, #440]	; (80017dc <main+0x254>)
 8001622:	f000 f943 	bl	80018ac <printf>
    		printf("%s","Enter new limit between [50-9950]: ");
 8001626:	4976      	ldr	r1, [pc, #472]	; (8001800 <main+0x278>)
 8001628:	4876      	ldr	r0, [pc, #472]	; (8001804 <main+0x27c>)
 800162a:	f000 f93f 	bl	80018ac <printf>
    		printf("\033[0;37m");
 800162e:	4868      	ldr	r0, [pc, #416]	; (80017d0 <main+0x248>)
 8001630:	f000 f93c 	bl	80018ac <printf>
    		get_limit(buffer,sizeof(buffer));
 8001634:	2164      	movs	r1, #100	; 0x64
 8001636:	4868      	ldr	r0, [pc, #416]	; (80017d8 <main+0x250>)
 8001638:	f7ff ff0e 	bl	8001458 <get_limit>
    	}
    	upper_limit = lower_limit + 100;
 800163c:	4b68      	ldr	r3, [pc, #416]	; (80017e0 <main+0x258>)
 800163e:	681b      	ldr	r3, [r3, #0]
 8001640:	3364      	adds	r3, #100	; 0x64
 8001642:	4a68      	ldr	r2, [pc, #416]	; (80017e4 <main+0x25c>)
 8001644:	6013      	str	r3, [r2, #0]
    	printf("\033[0;35m");
 8001646:	4865      	ldr	r0, [pc, #404]	; (80017dc <main+0x254>)
 8001648:	f000 f930 	bl	80018ac <printf>
    	printf("\r\n%s%d%s%d%s","Your program will run with limits of [",lower_limit,"-",upper_limit,"]");
 800164c:	4b64      	ldr	r3, [pc, #400]	; (80017e0 <main+0x258>)
 800164e:	681a      	ldr	r2, [r3, #0]
 8001650:	4b64      	ldr	r3, [pc, #400]	; (80017e4 <main+0x25c>)
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	4964      	ldr	r1, [pc, #400]	; (80017e8 <main+0x260>)
 8001656:	9101      	str	r1, [sp, #4]
 8001658:	9300      	str	r3, [sp, #0]
 800165a:	4b64      	ldr	r3, [pc, #400]	; (80017ec <main+0x264>)
 800165c:	496a      	ldr	r1, [pc, #424]	; (8001808 <main+0x280>)
 800165e:	486b      	ldr	r0, [pc, #428]	; (800180c <main+0x284>)
 8001660:	f000 f924 	bl	80018ac <printf>
    	printf("\r\n%s\r\n","Press any key to continue");
 8001664:	496a      	ldr	r1, [pc, #424]	; (8001810 <main+0x288>)
 8001666:	486b      	ldr	r0, [pc, #428]	; (8001814 <main+0x28c>)
 8001668:	f000 f920 	bl	80018ac <printf>
    	USART_Read(USART2);
 800166c:	4859      	ldr	r0, [pc, #356]	; (80017d4 <main+0x24c>)
 800166e:	f7ff fcd5 	bl	800101c <USART_Read>
    	init_buckets();
 8001672:	f7ff fecb 	bl	800140c <init_buckets>
    	TIM2->CNT = 0;
 8001676:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800167a:	2200      	movs	r2, #0
 800167c:	625a      	str	r2, [r3, #36]	; 0x24
    	while(pulse_count<1001){
 800167e:	e064      	b.n	800174a <main+0x1c2>
    		if (TIM2->SR & TIM_SR_CC1IF){// Check if the capture/compare interrupt flag is set
 8001680:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001684:	691b      	ldr	r3, [r3, #16]
 8001686:	f003 0302 	and.w	r3, r3, #2
 800168a:	2b00      	cmp	r3, #0
 800168c:	d05d      	beq.n	800174a <main+0x1c2>
    			uint32_t current_capture = TIM2->CCR1;
 800168e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001692:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001694:	607b      	str	r3, [r7, #4]

    			if (current_capture >= last_capture){
 8001696:	4b60      	ldr	r3, [pc, #384]	; (8001818 <main+0x290>)
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	687a      	ldr	r2, [r7, #4]
 800169c:	429a      	cmp	r2, r3
 800169e:	d33e      	bcc.n	800171e <main+0x196>
    				pulse_duration = (current_capture - last_capture) * 1.2 *  0.01;
 80016a0:	4b5d      	ldr	r3, [pc, #372]	; (8001818 <main+0x290>)
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	687a      	ldr	r2, [r7, #4]
 80016a6:	1ad3      	subs	r3, r2, r3
 80016a8:	4618      	mov	r0, r3
 80016aa:	f7fe ff2b 	bl	8000504 <__aeabi_ui2d>
 80016ae:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 80016b2:	4b5a      	ldr	r3, [pc, #360]	; (800181c <main+0x294>)
 80016b4:	f7fe ffa0 	bl	80005f8 <__aeabi_dmul>
 80016b8:	4602      	mov	r2, r0
 80016ba:	460b      	mov	r3, r1
 80016bc:	4610      	mov	r0, r2
 80016be:	4619      	mov	r1, r3
 80016c0:	a33b      	add	r3, pc, #236	; (adr r3, 80017b0 <main+0x228>)
 80016c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80016c6:	f7fe ff97 	bl	80005f8 <__aeabi_dmul>
 80016ca:	4602      	mov	r2, r0
 80016cc:	460b      	mov	r3, r1
 80016ce:	4610      	mov	r0, r2
 80016d0:	4619      	mov	r1, r3
 80016d2:	f7ff fa69 	bl	8000ba8 <__aeabi_d2uiz>
 80016d6:	4603      	mov	r3, r0
 80016d8:	4a51      	ldr	r2, [pc, #324]	; (8001820 <main+0x298>)
 80016da:	6013      	str	r3, [r2, #0]
    			    for(int i = 0;i<100;i++){
 80016dc:	2300      	movs	r3, #0
 80016de:	617b      	str	r3, [r7, #20]
 80016e0:	e016      	b.n	8001710 <main+0x188>
    			    	if(buckets[i].bucket_num == pulse_duration){
 80016e2:	4a50      	ldr	r2, [pc, #320]	; (8001824 <main+0x29c>)
 80016e4:	697b      	ldr	r3, [r7, #20]
 80016e6:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 80016ea:	4a4d      	ldr	r2, [pc, #308]	; (8001820 <main+0x298>)
 80016ec:	6812      	ldr	r2, [r2, #0]
 80016ee:	4293      	cmp	r3, r2
 80016f0:	d10b      	bne.n	800170a <main+0x182>
    			    		buckets[i].count++;
 80016f2:	4a4c      	ldr	r2, [pc, #304]	; (8001824 <main+0x29c>)
 80016f4:	697b      	ldr	r3, [r7, #20]
 80016f6:	00db      	lsls	r3, r3, #3
 80016f8:	4413      	add	r3, r2
 80016fa:	685b      	ldr	r3, [r3, #4]
 80016fc:	1c5a      	adds	r2, r3, #1
 80016fe:	4949      	ldr	r1, [pc, #292]	; (8001824 <main+0x29c>)
 8001700:	697b      	ldr	r3, [r7, #20]
 8001702:	00db      	lsls	r3, r3, #3
 8001704:	440b      	add	r3, r1
 8001706:	605a      	str	r2, [r3, #4]
    			            break;
 8001708:	e005      	b.n	8001716 <main+0x18e>
    			    for(int i = 0;i<100;i++){
 800170a:	697b      	ldr	r3, [r7, #20]
 800170c:	3301      	adds	r3, #1
 800170e:	617b      	str	r3, [r7, #20]
 8001710:	697b      	ldr	r3, [r7, #20]
 8001712:	2b63      	cmp	r3, #99	; 0x63
 8001714:	dde5      	ble.n	80016e2 <main+0x15a>
    			         }
    			    }
    			    pulse_count++;
 8001716:	69bb      	ldr	r3, [r7, #24]
 8001718:	3301      	adds	r3, #1
 800171a:	61bb      	str	r3, [r7, #24]
 800171c:	e00a      	b.n	8001734 <main+0x1ac>
    			    }else if(current_capture < last_capture) {
 800171e:	4b3e      	ldr	r3, [pc, #248]	; (8001818 <main+0x290>)
 8001720:	681b      	ldr	r3, [r3, #0]
 8001722:	687a      	ldr	r2, [r7, #4]
 8001724:	429a      	cmp	r2, r3
 8001726:	d205      	bcs.n	8001734 <main+0x1ac>
    			     // Overflow occurred
    			    	pulse_duration = (0XFFFFFFFF - last_capture) + current_capture + 1;
 8001728:	4b3b      	ldr	r3, [pc, #236]	; (8001818 <main+0x290>)
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	687a      	ldr	r2, [r7, #4]
 800172e:	1ad3      	subs	r3, r2, r3
 8001730:	4a3b      	ldr	r2, [pc, #236]	; (8001820 <main+0x298>)
 8001732:	6013      	str	r3, [r2, #0]
    			    }
    			    last_capture = current_capture;
 8001734:	4a38      	ldr	r2, [pc, #224]	; (8001818 <main+0x290>)
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	6013      	str	r3, [r2, #0]
    			    TIM2->SR &= ~TIM_SR_CC1IF;
 800173a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800173e:	691b      	ldr	r3, [r3, #16]
 8001740:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001744:	f023 0302 	bic.w	r3, r3, #2
 8001748:	6113      	str	r3, [r2, #16]
    	while(pulse_count<1001){
 800174a:	69bb      	ldr	r3, [r7, #24]
 800174c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001750:	dd96      	ble.n	8001680 <main+0xf8>
    			    }
    	}
    	int is_buckets = 0;
 8001752:	2300      	movs	r3, #0
 8001754:	613b      	str	r3, [r7, #16]
    	//Print out all buckets that had a count grater than 0
    	for(int i = 0;i<100;i++){
 8001756:	2300      	movs	r3, #0
 8001758:	60fb      	str	r3, [r7, #12]
 800175a:	e01b      	b.n	8001794 <main+0x20c>
    			printf("\033[0;32m");
 800175c:	4832      	ldr	r0, [pc, #200]	; (8001828 <main+0x2a0>)
 800175e:	f000 f8a5 	bl	80018ac <printf>
    			if(buckets[i].count != 0){
 8001762:	4a30      	ldr	r2, [pc, #192]	; (8001824 <main+0x29c>)
 8001764:	68fb      	ldr	r3, [r7, #12]
 8001766:	00db      	lsls	r3, r3, #3
 8001768:	4413      	add	r3, r2
 800176a:	685b      	ldr	r3, [r3, #4]
 800176c:	2b00      	cmp	r3, #0
 800176e:	d00e      	beq.n	800178e <main+0x206>
    				is_buckets = 1;
 8001770:	2301      	movs	r3, #1
 8001772:	613b      	str	r3, [r7, #16]
    			printf("\r\n%d%s%d\r\n",buckets[i].bucket_num," ",buckets[i].count);
 8001774:	4a2b      	ldr	r2, [pc, #172]	; (8001824 <main+0x29c>)
 8001776:	68fb      	ldr	r3, [r7, #12]
 8001778:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 800177c:	4a29      	ldr	r2, [pc, #164]	; (8001824 <main+0x29c>)
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	00db      	lsls	r3, r3, #3
 8001782:	4413      	add	r3, r2
 8001784:	685b      	ldr	r3, [r3, #4]
 8001786:	4a29      	ldr	r2, [pc, #164]	; (800182c <main+0x2a4>)
 8001788:	4829      	ldr	r0, [pc, #164]	; (8001830 <main+0x2a8>)
 800178a:	f000 f88f 	bl	80018ac <printf>
    	for(int i = 0;i<100;i++){
 800178e:	68fb      	ldr	r3, [r7, #12]
 8001790:	3301      	adds	r3, #1
 8001792:	60fb      	str	r3, [r7, #12]
 8001794:	68fb      	ldr	r3, [r7, #12]
 8001796:	2b63      	cmp	r3, #99	; 0x63
 8001798:	dde0      	ble.n	800175c <main+0x1d4>

    			}
    	}
    	//If no buckers exist within the range print error
    	if(is_buckets == 0){
 800179a:	693b      	ldr	r3, [r7, #16]
 800179c:	2b00      	cmp	r3, #0
 800179e:	f47f af1f 	bne.w	80015e0 <main+0x58>
    		printf("\033[0;31m");
 80017a2:	4824      	ldr	r0, [pc, #144]	; (8001834 <main+0x2ac>)
 80017a4:	f000 f882 	bl	80018ac <printf>
    		printf("No buckets detected within the entered range");
 80017a8:	4823      	ldr	r0, [pc, #140]	; (8001838 <main+0x2b0>)
 80017aa:	f000 f87f 	bl	80018ac <printf>
    {
 80017ae:	e717      	b.n	80015e0 <main+0x58>
 80017b0:	47ae147b 	.word	0x47ae147b
 80017b4:	3f847ae1 	.word	0x3f847ae1
 80017b8:	0800671c 	.word	0x0800671c
 80017bc:	08006744 	.word	0x08006744
 80017c0:	08006750 	.word	0x08006750
 80017c4:	0800677c 	.word	0x0800677c
 80017c8:	08006784 	.word	0x08006784
 80017cc:	080067bc 	.word	0x080067bc
 80017d0:	08006688 	.word	0x08006688
 80017d4:	40004400 	.word	0x40004400
 80017d8:	200001ec 	.word	0x200001ec
 80017dc:	080066ec 	.word	0x080066ec
 80017e0:	20000000 	.word	0x20000000
 80017e4:	20000004 	.word	0x20000004
 80017e8:	08006804 	.word	0x08006804
 80017ec:	080067d4 	.word	0x080067d4
 80017f0:	080067d8 	.word	0x080067d8
 80017f4:	080067f4 	.word	0x080067f4
 80017f8:	08006808 	.word	0x08006808
 80017fc:	080066e4 	.word	0x080066e4
 8001800:	080066f4 	.word	0x080066f4
 8001804:	08006718 	.word	0x08006718
 8001808:	08006830 	.word	0x08006830
 800180c:	08006858 	.word	0x08006858
 8001810:	08006868 	.word	0x08006868
 8001814:	080066b4 	.word	0x080066b4
 8001818:	20000250 	.word	0x20000250
 800181c:	3ff33333 	.word	0x3ff33333
 8001820:	20000254 	.word	0x20000254
 8001824:	20000258 	.word	0x20000258
 8001828:	08006884 	.word	0x08006884
 800182c:	0800688c 	.word	0x0800688c
 8001830:	08006890 	.word	0x08006890
 8001834:	08006690 	.word	0x08006690
 8001838:	0800689c 	.word	0x0800689c

0800183c <print_string>:
#include <stdio.h>
#include <stdarg.h>

static char buffer[128];

static void print_string (const char* string, int len) {
 800183c:	b580      	push	{r7, lr}
 800183e:	b082      	sub	sp, #8
 8001840:	af00      	add	r7, sp, #0
 8001842:	6078      	str	r0, [r7, #4]
 8001844:	6039      	str	r1, [r7, #0]
    USART_Write (USART2, (unsigned char*) string, len);
 8001846:	683b      	ldr	r3, [r7, #0]
 8001848:	461a      	mov	r2, r3
 800184a:	6879      	ldr	r1, [r7, #4]
 800184c:	4803      	ldr	r0, [pc, #12]	; (800185c <print_string+0x20>)
 800184e:	f7ff fbfa 	bl	8001046 <USART_Write>
}
 8001852:	bf00      	nop
 8001854:	3708      	adds	r7, #8
 8001856:	46bd      	mov	sp, r7
 8001858:	bd80      	pop	{r7, pc}
 800185a:	bf00      	nop
 800185c:	40004400 	.word	0x40004400

08001860 <puts>:

int puts (const char* string){
 8001860:	b580      	push	{r7, lr}
 8001862:	b084      	sub	sp, #16
 8001864:	af00      	add	r7, sp, #0
 8001866:	6078      	str	r0, [r7, #4]
    int len = strlen (string);
 8001868:	6878      	ldr	r0, [r7, #4]
 800186a:	f7fe fd01 	bl	8000270 <strlen>
 800186e:	4603      	mov	r3, r0
 8001870:	60fb      	str	r3, [r7, #12]
    print_string (string, len);
 8001872:	68f9      	ldr	r1, [r7, #12]
 8001874:	6878      	ldr	r0, [r7, #4]
 8001876:	f7ff ffe1 	bl	800183c <print_string>
    print_string ("\n", 1);
 800187a:	2101      	movs	r1, #1
 800187c:	4803      	ldr	r0, [pc, #12]	; (800188c <puts+0x2c>)
 800187e:	f7ff ffdd 	bl	800183c <print_string>
    return len;
 8001882:	68fb      	ldr	r3, [r7, #12]
}
 8001884:	4618      	mov	r0, r3
 8001886:	3710      	adds	r7, #16
 8001888:	46bd      	mov	sp, r7
 800188a:	bd80      	pop	{r7, pc}
 800188c:	080068cc 	.word	0x080068cc

08001890 <putchar>:

int putchar (int chr){
 8001890:	b580      	push	{r7, lr}
 8001892:	b082      	sub	sp, #8
 8001894:	af00      	add	r7, sp, #0
 8001896:	6078      	str	r0, [r7, #4]
    print_string ((char*)&chr, 1);
 8001898:	1d3b      	adds	r3, r7, #4
 800189a:	2101      	movs	r1, #1
 800189c:	4618      	mov	r0, r3
 800189e:	f7ff ffcd 	bl	800183c <print_string>
    return chr;
 80018a2:	687b      	ldr	r3, [r7, #4]
}
 80018a4:	4618      	mov	r0, r3
 80018a6:	3708      	adds	r7, #8
 80018a8:	46bd      	mov	sp, r7
 80018aa:	bd80      	pop	{r7, pc}

080018ac <printf>:

int printf (const char* format, ...) {
 80018ac:	b40f      	push	{r0, r1, r2, r3}
 80018ae:	b580      	push	{r7, lr}
 80018b0:	b082      	sub	sp, #8
 80018b2:	af00      	add	r7, sp, #0
    va_list aptr;
    int ret;

    va_start(aptr, format);
 80018b4:	f107 0314 	add.w	r3, r7, #20
 80018b8:	603b      	str	r3, [r7, #0]
    ret = vsprintf(buffer, format, aptr);
 80018ba:	683a      	ldr	r2, [r7, #0]
 80018bc:	6939      	ldr	r1, [r7, #16]
 80018be:	4808      	ldr	r0, [pc, #32]	; (80018e0 <printf+0x34>)
 80018c0:	f001 fa92 	bl	8002de8 <vsiprintf>
 80018c4:	6078      	str	r0, [r7, #4]
    va_end(aptr);
    print_string (buffer, ret);
 80018c6:	6879      	ldr	r1, [r7, #4]
 80018c8:	4805      	ldr	r0, [pc, #20]	; (80018e0 <printf+0x34>)
 80018ca:	f7ff ffb7 	bl	800183c <print_string>

    return(ret);
 80018ce:	687b      	ldr	r3, [r7, #4]
}
 80018d0:	4618      	mov	r0, r3
 80018d2:	3708      	adds	r7, #8
 80018d4:	46bd      	mov	sp, r7
 80018d6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80018da:	b004      	add	sp, #16
 80018dc:	4770      	bx	lr
 80018de:	bf00      	nop
 80018e0:	20000580 	.word	0x20000580

080018e4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80018e4:	b480      	push	{r7}
 80018e6:	af00      	add	r7, sp, #0
	return 1;
 80018e8:	2301      	movs	r3, #1
}
 80018ea:	4618      	mov	r0, r3
 80018ec:	46bd      	mov	sp, r7
 80018ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018f2:	4770      	bx	lr

080018f4 <_kill>:

int _kill(int pid, int sig)
{
 80018f4:	b580      	push	{r7, lr}
 80018f6:	b082      	sub	sp, #8
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	6078      	str	r0, [r7, #4]
 80018fc:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80018fe:	f001 facf 	bl	8002ea0 <__errno>
 8001902:	4603      	mov	r3, r0
 8001904:	2216      	movs	r2, #22
 8001906:	601a      	str	r2, [r3, #0]
	return -1;
 8001908:	f04f 33ff 	mov.w	r3, #4294967295
}
 800190c:	4618      	mov	r0, r3
 800190e:	3708      	adds	r7, #8
 8001910:	46bd      	mov	sp, r7
 8001912:	bd80      	pop	{r7, pc}

08001914 <_exit>:

void _exit (int status)
{
 8001914:	b580      	push	{r7, lr}
 8001916:	b082      	sub	sp, #8
 8001918:	af00      	add	r7, sp, #0
 800191a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800191c:	f04f 31ff 	mov.w	r1, #4294967295
 8001920:	6878      	ldr	r0, [r7, #4]
 8001922:	f7ff ffe7 	bl	80018f4 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001926:	e7fe      	b.n	8001926 <_exit+0x12>

08001928 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001928:	b580      	push	{r7, lr}
 800192a:	b086      	sub	sp, #24
 800192c:	af00      	add	r7, sp, #0
 800192e:	60f8      	str	r0, [r7, #12]
 8001930:	60b9      	str	r1, [r7, #8]
 8001932:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001934:	2300      	movs	r3, #0
 8001936:	617b      	str	r3, [r7, #20]
 8001938:	e00a      	b.n	8001950 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800193a:	f3af 8000 	nop.w
 800193e:	4601      	mov	r1, r0
 8001940:	68bb      	ldr	r3, [r7, #8]
 8001942:	1c5a      	adds	r2, r3, #1
 8001944:	60ba      	str	r2, [r7, #8]
 8001946:	b2ca      	uxtb	r2, r1
 8001948:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800194a:	697b      	ldr	r3, [r7, #20]
 800194c:	3301      	adds	r3, #1
 800194e:	617b      	str	r3, [r7, #20]
 8001950:	697a      	ldr	r2, [r7, #20]
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	429a      	cmp	r2, r3
 8001956:	dbf0      	blt.n	800193a <_read+0x12>
	}

return len;
 8001958:	687b      	ldr	r3, [r7, #4]
}
 800195a:	4618      	mov	r0, r3
 800195c:	3718      	adds	r7, #24
 800195e:	46bd      	mov	sp, r7
 8001960:	bd80      	pop	{r7, pc}

08001962 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001962:	b580      	push	{r7, lr}
 8001964:	b086      	sub	sp, #24
 8001966:	af00      	add	r7, sp, #0
 8001968:	60f8      	str	r0, [r7, #12]
 800196a:	60b9      	str	r1, [r7, #8]
 800196c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800196e:	2300      	movs	r3, #0
 8001970:	617b      	str	r3, [r7, #20]
 8001972:	e009      	b.n	8001988 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001974:	68bb      	ldr	r3, [r7, #8]
 8001976:	1c5a      	adds	r2, r3, #1
 8001978:	60ba      	str	r2, [r7, #8]
 800197a:	781b      	ldrb	r3, [r3, #0]
 800197c:	4618      	mov	r0, r3
 800197e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001982:	697b      	ldr	r3, [r7, #20]
 8001984:	3301      	adds	r3, #1
 8001986:	617b      	str	r3, [r7, #20]
 8001988:	697a      	ldr	r2, [r7, #20]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	429a      	cmp	r2, r3
 800198e:	dbf1      	blt.n	8001974 <_write+0x12>
	}
	return len;
 8001990:	687b      	ldr	r3, [r7, #4]
}
 8001992:	4618      	mov	r0, r3
 8001994:	3718      	adds	r7, #24
 8001996:	46bd      	mov	sp, r7
 8001998:	bd80      	pop	{r7, pc}

0800199a <_close>:

int _close(int file)
{
 800199a:	b480      	push	{r7}
 800199c:	b083      	sub	sp, #12
 800199e:	af00      	add	r7, sp, #0
 80019a0:	6078      	str	r0, [r7, #4]
	return -1;
 80019a2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80019a6:	4618      	mov	r0, r3
 80019a8:	370c      	adds	r7, #12
 80019aa:	46bd      	mov	sp, r7
 80019ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019b0:	4770      	bx	lr

080019b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80019b2:	b480      	push	{r7}
 80019b4:	b083      	sub	sp, #12
 80019b6:	af00      	add	r7, sp, #0
 80019b8:	6078      	str	r0, [r7, #4]
 80019ba:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80019bc:	683b      	ldr	r3, [r7, #0]
 80019be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80019c2:	605a      	str	r2, [r3, #4]
	return 0;
 80019c4:	2300      	movs	r3, #0
}
 80019c6:	4618      	mov	r0, r3
 80019c8:	370c      	adds	r7, #12
 80019ca:	46bd      	mov	sp, r7
 80019cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019d0:	4770      	bx	lr

080019d2 <_isatty>:

int _isatty(int file)
{
 80019d2:	b480      	push	{r7}
 80019d4:	b083      	sub	sp, #12
 80019d6:	af00      	add	r7, sp, #0
 80019d8:	6078      	str	r0, [r7, #4]
	return 1;
 80019da:	2301      	movs	r3, #1
}
 80019dc:	4618      	mov	r0, r3
 80019de:	370c      	adds	r7, #12
 80019e0:	46bd      	mov	sp, r7
 80019e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e6:	4770      	bx	lr

080019e8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80019e8:	b480      	push	{r7}
 80019ea:	b085      	sub	sp, #20
 80019ec:	af00      	add	r7, sp, #0
 80019ee:	60f8      	str	r0, [r7, #12]
 80019f0:	60b9      	str	r1, [r7, #8]
 80019f2:	607a      	str	r2, [r7, #4]
	return 0;
 80019f4:	2300      	movs	r3, #0
}
 80019f6:	4618      	mov	r0, r3
 80019f8:	3714      	adds	r7, #20
 80019fa:	46bd      	mov	sp, r7
 80019fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a00:	4770      	bx	lr
	...

08001a04 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001a04:	b580      	push	{r7, lr}
 8001a06:	b086      	sub	sp, #24
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a0c:	4a14      	ldr	r2, [pc, #80]	; (8001a60 <_sbrk+0x5c>)
 8001a0e:	4b15      	ldr	r3, [pc, #84]	; (8001a64 <_sbrk+0x60>)
 8001a10:	1ad3      	subs	r3, r2, r3
 8001a12:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001a14:	697b      	ldr	r3, [r7, #20]
 8001a16:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a18:	4b13      	ldr	r3, [pc, #76]	; (8001a68 <_sbrk+0x64>)
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	d102      	bne.n	8001a26 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001a20:	4b11      	ldr	r3, [pc, #68]	; (8001a68 <_sbrk+0x64>)
 8001a22:	4a12      	ldr	r2, [pc, #72]	; (8001a6c <_sbrk+0x68>)
 8001a24:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001a26:	4b10      	ldr	r3, [pc, #64]	; (8001a68 <_sbrk+0x64>)
 8001a28:	681a      	ldr	r2, [r3, #0]
 8001a2a:	687b      	ldr	r3, [r7, #4]
 8001a2c:	4413      	add	r3, r2
 8001a2e:	693a      	ldr	r2, [r7, #16]
 8001a30:	429a      	cmp	r2, r3
 8001a32:	d207      	bcs.n	8001a44 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001a34:	f001 fa34 	bl	8002ea0 <__errno>
 8001a38:	4603      	mov	r3, r0
 8001a3a:	220c      	movs	r2, #12
 8001a3c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001a3e:	f04f 33ff 	mov.w	r3, #4294967295
 8001a42:	e009      	b.n	8001a58 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001a44:	4b08      	ldr	r3, [pc, #32]	; (8001a68 <_sbrk+0x64>)
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001a4a:	4b07      	ldr	r3, [pc, #28]	; (8001a68 <_sbrk+0x64>)
 8001a4c:	681a      	ldr	r2, [r3, #0]
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	4413      	add	r3, r2
 8001a52:	4a05      	ldr	r2, [pc, #20]	; (8001a68 <_sbrk+0x64>)
 8001a54:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001a56:	68fb      	ldr	r3, [r7, #12]
}
 8001a58:	4618      	mov	r0, r3
 8001a5a:	3718      	adds	r7, #24
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	bd80      	pop	{r7, pc}
 8001a60:	20018000 	.word	0x20018000
 8001a64:	00000400 	.word	0x00000400
 8001a68:	20000600 	.word	0x20000600
 8001a6c:	20000750 	.word	0x20000750

08001a70 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 8001a70:	b480      	push	{r7}
 8001a72:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001a74:	4b17      	ldr	r3, [pc, #92]	; (8001ad4 <SystemInit+0x64>)
 8001a76:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001a7a:	4a16      	ldr	r2, [pc, #88]	; (8001ad4 <SystemInit+0x64>)
 8001a7c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001a80:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set MSION bit */
  RCC->CR |= RCC_CR_MSION;
 8001a84:	4b14      	ldr	r3, [pc, #80]	; (8001ad8 <SystemInit+0x68>)
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	4a13      	ldr	r2, [pc, #76]	; (8001ad8 <SystemInit+0x68>)
 8001a8a:	f043 0301 	orr.w	r3, r3, #1
 8001a8e:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000U;
 8001a90:	4b11      	ldr	r3, [pc, #68]	; (8001ad8 <SystemInit+0x68>)
 8001a92:	2200      	movs	r2, #0
 8001a94:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON , HSION, and PLLON bits */
  RCC->CR &= 0xEAF6FFFFU;
 8001a96:	4b10      	ldr	r3, [pc, #64]	; (8001ad8 <SystemInit+0x68>)
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	4a0f      	ldr	r2, [pc, #60]	; (8001ad8 <SystemInit+0x68>)
 8001a9c:	f023 53a8 	bic.w	r3, r3, #352321536	; 0x15000000
 8001aa0:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
 8001aa4:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00001000U;
 8001aa6:	4b0c      	ldr	r3, [pc, #48]	; (8001ad8 <SystemInit+0x68>)
 8001aa8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001aac:	60da      	str	r2, [r3, #12]

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8001aae:	4b0a      	ldr	r3, [pc, #40]	; (8001ad8 <SystemInit+0x68>)
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	4a09      	ldr	r2, [pc, #36]	; (8001ad8 <SystemInit+0x68>)
 8001ab4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ab8:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000U;
 8001aba:	4b07      	ldr	r3, [pc, #28]	; (8001ad8 <SystemInit+0x68>)
 8001abc:	2200      	movs	r2, #0
 8001abe:	619a      	str	r2, [r3, #24]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001ac0:	4b04      	ldr	r3, [pc, #16]	; (8001ad4 <SystemInit+0x64>)
 8001ac2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001ac6:	609a      	str	r2, [r3, #8]
#endif
}
 8001ac8:	bf00      	nop
 8001aca:	46bd      	mov	sp, r7
 8001acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ad0:	4770      	bx	lr
 8001ad2:	bf00      	nop
 8001ad4:	e000ed00 	.word	0xe000ed00
 8001ad8:	40021000 	.word	0x40021000

08001adc <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 8001adc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001b14 <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 8001ae0:	f7ff ffc6 	bl	8001a70 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001ae4:	480c      	ldr	r0, [pc, #48]	; (8001b18 <LoopForever+0x6>)
  ldr r1, =_edata
 8001ae6:	490d      	ldr	r1, [pc, #52]	; (8001b1c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001ae8:	4a0d      	ldr	r2, [pc, #52]	; (8001b20 <LoopForever+0xe>)
  movs r3, #0
 8001aea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001aec:	e002      	b.n	8001af4 <LoopCopyDataInit>

08001aee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001aee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001af0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001af2:	3304      	adds	r3, #4

08001af4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001af4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001af6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001af8:	d3f9      	bcc.n	8001aee <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001afa:	4a0a      	ldr	r2, [pc, #40]	; (8001b24 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001afc:	4c0a      	ldr	r4, [pc, #40]	; (8001b28 <LoopForever+0x16>)
  movs r3, #0
 8001afe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001b00:	e001      	b.n	8001b06 <LoopFillZerobss>

08001b02 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001b02:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001b04:	3204      	adds	r2, #4

08001b06 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001b06:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001b08:	d3fb      	bcc.n	8001b02 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8001b0a:	f001 f9cf 	bl	8002eac <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 8001b0e:	f7ff fd3b 	bl	8001588 <main>

08001b12 <LoopForever>:

LoopForever:
    b LoopForever
 8001b12:	e7fe      	b.n	8001b12 <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 8001b14:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001b18:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001b1c:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001b20:	08006d00 	.word	0x08006d00
  ldr r2, =_sbss
 8001b24:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001b28:	20000750 	.word	0x20000750

08001b2c <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 8001b2c:	e7fe      	b.n	8001b2c <ADC1_2_IRQHandler>
	...

08001b30 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001b30:	b480      	push	{r7}
 8001b32:	b087      	sub	sp, #28
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	6078      	str	r0, [r7, #4]
 8001b38:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8001b3a:	2300      	movs	r3, #0
 8001b3c:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001b3e:	e17f      	b.n	8001e40 <HAL_GPIO_Init+0x310>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8001b40:	683b      	ldr	r3, [r7, #0]
 8001b42:	681a      	ldr	r2, [r3, #0]
 8001b44:	2101      	movs	r1, #1
 8001b46:	697b      	ldr	r3, [r7, #20]
 8001b48:	fa01 f303 	lsl.w	r3, r1, r3
 8001b4c:	4013      	ands	r3, r2
 8001b4e:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8001b50:	68fb      	ldr	r3, [r7, #12]
 8001b52:	2b00      	cmp	r3, #0
 8001b54:	f000 8171 	beq.w	8001e3a <HAL_GPIO_Init+0x30a>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8001b58:	683b      	ldr	r3, [r7, #0]
 8001b5a:	685b      	ldr	r3, [r3, #4]
 8001b5c:	f003 0303 	and.w	r3, r3, #3
 8001b60:	2b01      	cmp	r3, #1
 8001b62:	d005      	beq.n	8001b70 <HAL_GPIO_Init+0x40>
 8001b64:	683b      	ldr	r3, [r7, #0]
 8001b66:	685b      	ldr	r3, [r3, #4]
 8001b68:	f003 0303 	and.w	r3, r3, #3
 8001b6c:	2b02      	cmp	r3, #2
 8001b6e:	d130      	bne.n	8001bd2 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	689b      	ldr	r3, [r3, #8]
 8001b74:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8001b76:	697b      	ldr	r3, [r7, #20]
 8001b78:	005b      	lsls	r3, r3, #1
 8001b7a:	2203      	movs	r2, #3
 8001b7c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b80:	43db      	mvns	r3, r3
 8001b82:	693a      	ldr	r2, [r7, #16]
 8001b84:	4013      	ands	r3, r2
 8001b86:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8001b88:	683b      	ldr	r3, [r7, #0]
 8001b8a:	68da      	ldr	r2, [r3, #12]
 8001b8c:	697b      	ldr	r3, [r7, #20]
 8001b8e:	005b      	lsls	r3, r3, #1
 8001b90:	fa02 f303 	lsl.w	r3, r2, r3
 8001b94:	693a      	ldr	r2, [r7, #16]
 8001b96:	4313      	orrs	r3, r2
 8001b98:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	693a      	ldr	r2, [r7, #16]
 8001b9e:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	685b      	ldr	r3, [r3, #4]
 8001ba4:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8001ba6:	2201      	movs	r2, #1
 8001ba8:	697b      	ldr	r3, [r7, #20]
 8001baa:	fa02 f303 	lsl.w	r3, r2, r3
 8001bae:	43db      	mvns	r3, r3
 8001bb0:	693a      	ldr	r2, [r7, #16]
 8001bb2:	4013      	ands	r3, r2
 8001bb4:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001bb6:	683b      	ldr	r3, [r7, #0]
 8001bb8:	685b      	ldr	r3, [r3, #4]
 8001bba:	091b      	lsrs	r3, r3, #4
 8001bbc:	f003 0201 	and.w	r2, r3, #1
 8001bc0:	697b      	ldr	r3, [r7, #20]
 8001bc2:	fa02 f303 	lsl.w	r3, r2, r3
 8001bc6:	693a      	ldr	r2, [r7, #16]
 8001bc8:	4313      	orrs	r3, r2
 8001bca:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	693a      	ldr	r2, [r7, #16]
 8001bd0:	605a      	str	r2, [r3, #4]
      }

#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx)

      /* In case of Analog mode, check if ADC control mode is selected */
      if((GPIO_Init->Mode & GPIO_MODE_ANALOG) == GPIO_MODE_ANALOG)
 8001bd2:	683b      	ldr	r3, [r7, #0]
 8001bd4:	685b      	ldr	r3, [r3, #4]
 8001bd6:	f003 0303 	and.w	r3, r3, #3
 8001bda:	2b03      	cmp	r3, #3
 8001bdc:	d118      	bne.n	8001c10 <HAL_GPIO_Init+0xe0>
      {
        /* Configure the IO Output Type */
        temp = GPIOx->ASCR;
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001be2:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_ASCR_ASC0 << position) ;
 8001be4:	2201      	movs	r2, #1
 8001be6:	697b      	ldr	r3, [r7, #20]
 8001be8:	fa02 f303 	lsl.w	r3, r2, r3
 8001bec:	43db      	mvns	r3, r3
 8001bee:	693a      	ldr	r2, [r7, #16]
 8001bf0:	4013      	ands	r3, r2
 8001bf2:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_MODE_ANALOG_ADC_CONTROL) >> 3) << position);
 8001bf4:	683b      	ldr	r3, [r7, #0]
 8001bf6:	685b      	ldr	r3, [r3, #4]
 8001bf8:	08db      	lsrs	r3, r3, #3
 8001bfa:	f003 0201 	and.w	r2, r3, #1
 8001bfe:	697b      	ldr	r3, [r7, #20]
 8001c00:	fa02 f303 	lsl.w	r3, r2, r3
 8001c04:	693a      	ldr	r2, [r7, #16]
 8001c06:	4313      	orrs	r3, r2
 8001c08:	613b      	str	r3, [r7, #16]
        GPIOx->ASCR = temp;
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	693a      	ldr	r2, [r7, #16]
 8001c0e:	62da      	str	r2, [r3, #44]	; 0x2c
      }

#endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx */

      /* Activate the Pull-up or Pull down resistor for the current IO */
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8001c10:	683b      	ldr	r3, [r7, #0]
 8001c12:	685b      	ldr	r3, [r3, #4]
 8001c14:	f003 0303 	and.w	r3, r3, #3
 8001c18:	2b03      	cmp	r3, #3
 8001c1a:	d017      	beq.n	8001c4c <HAL_GPIO_Init+0x11c>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        temp = GPIOx->PUPDR;
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	68db      	ldr	r3, [r3, #12]
 8001c20:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8001c22:	697b      	ldr	r3, [r7, #20]
 8001c24:	005b      	lsls	r3, r3, #1
 8001c26:	2203      	movs	r2, #3
 8001c28:	fa02 f303 	lsl.w	r3, r2, r3
 8001c2c:	43db      	mvns	r3, r3
 8001c2e:	693a      	ldr	r2, [r7, #16]
 8001c30:	4013      	ands	r3, r2
 8001c32:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001c34:	683b      	ldr	r3, [r7, #0]
 8001c36:	689a      	ldr	r2, [r3, #8]
 8001c38:	697b      	ldr	r3, [r7, #20]
 8001c3a:	005b      	lsls	r3, r3, #1
 8001c3c:	fa02 f303 	lsl.w	r3, r2, r3
 8001c40:	693a      	ldr	r2, [r7, #16]
 8001c42:	4313      	orrs	r3, r2
 8001c44:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	693a      	ldr	r2, [r7, #16]
 8001c4a:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001c4c:	683b      	ldr	r3, [r7, #0]
 8001c4e:	685b      	ldr	r3, [r3, #4]
 8001c50:	f003 0303 	and.w	r3, r3, #3
 8001c54:	2b02      	cmp	r3, #2
 8001c56:	d123      	bne.n	8001ca0 <HAL_GPIO_Init+0x170>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8001c58:	697b      	ldr	r3, [r7, #20]
 8001c5a:	08da      	lsrs	r2, r3, #3
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	3208      	adds	r2, #8
 8001c60:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c64:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8001c66:	697b      	ldr	r3, [r7, #20]
 8001c68:	f003 0307 	and.w	r3, r3, #7
 8001c6c:	009b      	lsls	r3, r3, #2
 8001c6e:	220f      	movs	r2, #15
 8001c70:	fa02 f303 	lsl.w	r3, r2, r3
 8001c74:	43db      	mvns	r3, r3
 8001c76:	693a      	ldr	r2, [r7, #16]
 8001c78:	4013      	ands	r3, r2
 8001c7a:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8001c7c:	683b      	ldr	r3, [r7, #0]
 8001c7e:	691a      	ldr	r2, [r3, #16]
 8001c80:	697b      	ldr	r3, [r7, #20]
 8001c82:	f003 0307 	and.w	r3, r3, #7
 8001c86:	009b      	lsls	r3, r3, #2
 8001c88:	fa02 f303 	lsl.w	r3, r2, r3
 8001c8c:	693a      	ldr	r2, [r7, #16]
 8001c8e:	4313      	orrs	r3, r2
 8001c90:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8001c92:	697b      	ldr	r3, [r7, #20]
 8001c94:	08da      	lsrs	r2, r3, #3
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	3208      	adds	r2, #8
 8001c9a:	6939      	ldr	r1, [r7, #16]
 8001c9c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	681b      	ldr	r3, [r3, #0]
 8001ca4:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8001ca6:	697b      	ldr	r3, [r7, #20]
 8001ca8:	005b      	lsls	r3, r3, #1
 8001caa:	2203      	movs	r2, #3
 8001cac:	fa02 f303 	lsl.w	r3, r2, r3
 8001cb0:	43db      	mvns	r3, r3
 8001cb2:	693a      	ldr	r2, [r7, #16]
 8001cb4:	4013      	ands	r3, r2
 8001cb6:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8001cb8:	683b      	ldr	r3, [r7, #0]
 8001cba:	685b      	ldr	r3, [r3, #4]
 8001cbc:	f003 0203 	and.w	r2, r3, #3
 8001cc0:	697b      	ldr	r3, [r7, #20]
 8001cc2:	005b      	lsls	r3, r3, #1
 8001cc4:	fa02 f303 	lsl.w	r3, r2, r3
 8001cc8:	693a      	ldr	r2, [r7, #16]
 8001cca:	4313      	orrs	r3, r2
 8001ccc:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	693a      	ldr	r2, [r7, #16]
 8001cd2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8001cd4:	683b      	ldr	r3, [r7, #0]
 8001cd6:	685b      	ldr	r3, [r3, #4]
 8001cd8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	f000 80ac 	beq.w	8001e3a <HAL_GPIO_Init+0x30a>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ce2:	4b5f      	ldr	r3, [pc, #380]	; (8001e60 <HAL_GPIO_Init+0x330>)
 8001ce4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001ce6:	4a5e      	ldr	r2, [pc, #376]	; (8001e60 <HAL_GPIO_Init+0x330>)
 8001ce8:	f043 0301 	orr.w	r3, r3, #1
 8001cec:	6613      	str	r3, [r2, #96]	; 0x60
 8001cee:	4b5c      	ldr	r3, [pc, #368]	; (8001e60 <HAL_GPIO_Init+0x330>)
 8001cf0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001cf2:	f003 0301 	and.w	r3, r3, #1
 8001cf6:	60bb      	str	r3, [r7, #8]
 8001cf8:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8001cfa:	4a5a      	ldr	r2, [pc, #360]	; (8001e64 <HAL_GPIO_Init+0x334>)
 8001cfc:	697b      	ldr	r3, [r7, #20]
 8001cfe:	089b      	lsrs	r3, r3, #2
 8001d00:	3302      	adds	r3, #2
 8001d02:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001d06:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8001d08:	697b      	ldr	r3, [r7, #20]
 8001d0a:	f003 0303 	and.w	r3, r3, #3
 8001d0e:	009b      	lsls	r3, r3, #2
 8001d10:	220f      	movs	r2, #15
 8001d12:	fa02 f303 	lsl.w	r3, r2, r3
 8001d16:	43db      	mvns	r3, r3
 8001d18:	693a      	ldr	r2, [r7, #16]
 8001d1a:	4013      	ands	r3, r2
 8001d1c:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8001d24:	d025      	beq.n	8001d72 <HAL_GPIO_Init+0x242>
 8001d26:	687b      	ldr	r3, [r7, #4]
 8001d28:	4a4f      	ldr	r2, [pc, #316]	; (8001e68 <HAL_GPIO_Init+0x338>)
 8001d2a:	4293      	cmp	r3, r2
 8001d2c:	d01f      	beq.n	8001d6e <HAL_GPIO_Init+0x23e>
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	4a4e      	ldr	r2, [pc, #312]	; (8001e6c <HAL_GPIO_Init+0x33c>)
 8001d32:	4293      	cmp	r3, r2
 8001d34:	d019      	beq.n	8001d6a <HAL_GPIO_Init+0x23a>
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	4a4d      	ldr	r2, [pc, #308]	; (8001e70 <HAL_GPIO_Init+0x340>)
 8001d3a:	4293      	cmp	r3, r2
 8001d3c:	d013      	beq.n	8001d66 <HAL_GPIO_Init+0x236>
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	4a4c      	ldr	r2, [pc, #304]	; (8001e74 <HAL_GPIO_Init+0x344>)
 8001d42:	4293      	cmp	r3, r2
 8001d44:	d00d      	beq.n	8001d62 <HAL_GPIO_Init+0x232>
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	4a4b      	ldr	r2, [pc, #300]	; (8001e78 <HAL_GPIO_Init+0x348>)
 8001d4a:	4293      	cmp	r3, r2
 8001d4c:	d007      	beq.n	8001d5e <HAL_GPIO_Init+0x22e>
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	4a4a      	ldr	r2, [pc, #296]	; (8001e7c <HAL_GPIO_Init+0x34c>)
 8001d52:	4293      	cmp	r3, r2
 8001d54:	d101      	bne.n	8001d5a <HAL_GPIO_Init+0x22a>
 8001d56:	2306      	movs	r3, #6
 8001d58:	e00c      	b.n	8001d74 <HAL_GPIO_Init+0x244>
 8001d5a:	2307      	movs	r3, #7
 8001d5c:	e00a      	b.n	8001d74 <HAL_GPIO_Init+0x244>
 8001d5e:	2305      	movs	r3, #5
 8001d60:	e008      	b.n	8001d74 <HAL_GPIO_Init+0x244>
 8001d62:	2304      	movs	r3, #4
 8001d64:	e006      	b.n	8001d74 <HAL_GPIO_Init+0x244>
 8001d66:	2303      	movs	r3, #3
 8001d68:	e004      	b.n	8001d74 <HAL_GPIO_Init+0x244>
 8001d6a:	2302      	movs	r3, #2
 8001d6c:	e002      	b.n	8001d74 <HAL_GPIO_Init+0x244>
 8001d6e:	2301      	movs	r3, #1
 8001d70:	e000      	b.n	8001d74 <HAL_GPIO_Init+0x244>
 8001d72:	2300      	movs	r3, #0
 8001d74:	697a      	ldr	r2, [r7, #20]
 8001d76:	f002 0203 	and.w	r2, r2, #3
 8001d7a:	0092      	lsls	r2, r2, #2
 8001d7c:	4093      	lsls	r3, r2
 8001d7e:	693a      	ldr	r2, [r7, #16]
 8001d80:	4313      	orrs	r3, r2
 8001d82:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8001d84:	4937      	ldr	r1, [pc, #220]	; (8001e64 <HAL_GPIO_Init+0x334>)
 8001d86:	697b      	ldr	r3, [r7, #20]
 8001d88:	089b      	lsrs	r3, r3, #2
 8001d8a:	3302      	adds	r3, #2
 8001d8c:	693a      	ldr	r2, [r7, #16]
 8001d8e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8001d92:	4b3b      	ldr	r3, [pc, #236]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001d94:	689b      	ldr	r3, [r3, #8]
 8001d96:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001d98:	68fb      	ldr	r3, [r7, #12]
 8001d9a:	43db      	mvns	r3, r3
 8001d9c:	693a      	ldr	r2, [r7, #16]
 8001d9e:	4013      	ands	r3, r2
 8001da0:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8001da2:	683b      	ldr	r3, [r7, #0]
 8001da4:	685b      	ldr	r3, [r3, #4]
 8001da6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001daa:	2b00      	cmp	r3, #0
 8001dac:	d003      	beq.n	8001db6 <HAL_GPIO_Init+0x286>
        {
          temp |= iocurrent;
 8001dae:	693a      	ldr	r2, [r7, #16]
 8001db0:	68fb      	ldr	r3, [r7, #12]
 8001db2:	4313      	orrs	r3, r2
 8001db4:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 8001db6:	4a32      	ldr	r2, [pc, #200]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001db8:	693b      	ldr	r3, [r7, #16]
 8001dba:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR1;
 8001dbc:	4b30      	ldr	r3, [pc, #192]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001dbe:	68db      	ldr	r3, [r3, #12]
 8001dc0:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001dc2:	68fb      	ldr	r3, [r7, #12]
 8001dc4:	43db      	mvns	r3, r3
 8001dc6:	693a      	ldr	r2, [r7, #16]
 8001dc8:	4013      	ands	r3, r2
 8001dca:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8001dcc:	683b      	ldr	r3, [r7, #0]
 8001dce:	685b      	ldr	r3, [r3, #4]
 8001dd0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001dd4:	2b00      	cmp	r3, #0
 8001dd6:	d003      	beq.n	8001de0 <HAL_GPIO_Init+0x2b0>
        {
          temp |= iocurrent;
 8001dd8:	693a      	ldr	r2, [r7, #16]
 8001dda:	68fb      	ldr	r3, [r7, #12]
 8001ddc:	4313      	orrs	r3, r2
 8001dde:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 8001de0:	4a27      	ldr	r2, [pc, #156]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001de2:	693b      	ldr	r3, [r7, #16]
 8001de4:	60d3      	str	r3, [r2, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR1;
 8001de6:	4b26      	ldr	r3, [pc, #152]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001de8:	685b      	ldr	r3, [r3, #4]
 8001dea:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	43db      	mvns	r3, r3
 8001df0:	693a      	ldr	r2, [r7, #16]
 8001df2:	4013      	ands	r3, r2
 8001df4:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8001df6:	683b      	ldr	r3, [r7, #0]
 8001df8:	685b      	ldr	r3, [r3, #4]
 8001dfa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001dfe:	2b00      	cmp	r3, #0
 8001e00:	d003      	beq.n	8001e0a <HAL_GPIO_Init+0x2da>
        {
          temp |= iocurrent;
 8001e02:	693a      	ldr	r2, [r7, #16]
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	4313      	orrs	r3, r2
 8001e08:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR1 = temp;
 8001e0a:	4a1d      	ldr	r2, [pc, #116]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001e0c:	693b      	ldr	r3, [r7, #16]
 8001e0e:	6053      	str	r3, [r2, #4]

        temp = EXTI->IMR1;
 8001e10:	4b1b      	ldr	r3, [pc, #108]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8001e16:	68fb      	ldr	r3, [r7, #12]
 8001e18:	43db      	mvns	r3, r3
 8001e1a:	693a      	ldr	r2, [r7, #16]
 8001e1c:	4013      	ands	r3, r2
 8001e1e:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8001e20:	683b      	ldr	r3, [r7, #0]
 8001e22:	685b      	ldr	r3, [r3, #4]
 8001e24:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	d003      	beq.n	8001e34 <HAL_GPIO_Init+0x304>
        {
          temp |= iocurrent;
 8001e2c:	693a      	ldr	r2, [r7, #16]
 8001e2e:	68fb      	ldr	r3, [r7, #12]
 8001e30:	4313      	orrs	r3, r2
 8001e32:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR1 = temp;
 8001e34:	4a12      	ldr	r2, [pc, #72]	; (8001e80 <HAL_GPIO_Init+0x350>)
 8001e36:	693b      	ldr	r3, [r7, #16]
 8001e38:	6013      	str	r3, [r2, #0]
      }
    }

    position++;
 8001e3a:	697b      	ldr	r3, [r7, #20]
 8001e3c:	3301      	adds	r3, #1
 8001e3e:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001e40:	683b      	ldr	r3, [r7, #0]
 8001e42:	681a      	ldr	r2, [r3, #0]
 8001e44:	697b      	ldr	r3, [r7, #20]
 8001e46:	fa22 f303 	lsr.w	r3, r2, r3
 8001e4a:	2b00      	cmp	r3, #0
 8001e4c:	f47f ae78 	bne.w	8001b40 <HAL_GPIO_Init+0x10>
  }
}
 8001e50:	bf00      	nop
 8001e52:	bf00      	nop
 8001e54:	371c      	adds	r7, #28
 8001e56:	46bd      	mov	sp, r7
 8001e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e5c:	4770      	bx	lr
 8001e5e:	bf00      	nop
 8001e60:	40021000 	.word	0x40021000
 8001e64:	40010000 	.word	0x40010000
 8001e68:	48000400 	.word	0x48000400
 8001e6c:	48000800 	.word	0x48000800
 8001e70:	48000c00 	.word	0x48000c00
 8001e74:	48001000 	.word	0x48001000
 8001e78:	48001400 	.word	0x48001400
 8001e7c:	48001800 	.word	0x48001800
 8001e80:	40010400 	.word	0x40010400

08001e84 <__cvt>:
 8001e84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e88:	ec55 4b10 	vmov	r4, r5, d0
 8001e8c:	2d00      	cmp	r5, #0
 8001e8e:	460e      	mov	r6, r1
 8001e90:	4619      	mov	r1, r3
 8001e92:	462b      	mov	r3, r5
 8001e94:	bfbb      	ittet	lt
 8001e96:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001e9a:	461d      	movlt	r5, r3
 8001e9c:	2300      	movge	r3, #0
 8001e9e:	232d      	movlt	r3, #45	; 0x2d
 8001ea0:	700b      	strb	r3, [r1, #0]
 8001ea2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001ea4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001ea8:	4691      	mov	r9, r2
 8001eaa:	f023 0820 	bic.w	r8, r3, #32
 8001eae:	bfbc      	itt	lt
 8001eb0:	4622      	movlt	r2, r4
 8001eb2:	4614      	movlt	r4, r2
 8001eb4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001eb8:	d005      	beq.n	8001ec6 <__cvt+0x42>
 8001eba:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001ebe:	d100      	bne.n	8001ec2 <__cvt+0x3e>
 8001ec0:	3601      	adds	r6, #1
 8001ec2:	2102      	movs	r1, #2
 8001ec4:	e000      	b.n	8001ec8 <__cvt+0x44>
 8001ec6:	2103      	movs	r1, #3
 8001ec8:	ab03      	add	r3, sp, #12
 8001eca:	9301      	str	r3, [sp, #4]
 8001ecc:	ab02      	add	r3, sp, #8
 8001ece:	9300      	str	r3, [sp, #0]
 8001ed0:	ec45 4b10 	vmov	d0, r4, r5
 8001ed4:	4653      	mov	r3, sl
 8001ed6:	4632      	mov	r2, r6
 8001ed8:	f001 f89e 	bl	8003018 <_dtoa_r>
 8001edc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001ee0:	4607      	mov	r7, r0
 8001ee2:	d102      	bne.n	8001eea <__cvt+0x66>
 8001ee4:	f019 0f01 	tst.w	r9, #1
 8001ee8:	d022      	beq.n	8001f30 <__cvt+0xac>
 8001eea:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001eee:	eb07 0906 	add.w	r9, r7, r6
 8001ef2:	d110      	bne.n	8001f16 <__cvt+0x92>
 8001ef4:	783b      	ldrb	r3, [r7, #0]
 8001ef6:	2b30      	cmp	r3, #48	; 0x30
 8001ef8:	d10a      	bne.n	8001f10 <__cvt+0x8c>
 8001efa:	2200      	movs	r2, #0
 8001efc:	2300      	movs	r3, #0
 8001efe:	4620      	mov	r0, r4
 8001f00:	4629      	mov	r1, r5
 8001f02:	f7fe fde1 	bl	8000ac8 <__aeabi_dcmpeq>
 8001f06:	b918      	cbnz	r0, 8001f10 <__cvt+0x8c>
 8001f08:	f1c6 0601 	rsb	r6, r6, #1
 8001f0c:	f8ca 6000 	str.w	r6, [sl]
 8001f10:	f8da 3000 	ldr.w	r3, [sl]
 8001f14:	4499      	add	r9, r3
 8001f16:	2200      	movs	r2, #0
 8001f18:	2300      	movs	r3, #0
 8001f1a:	4620      	mov	r0, r4
 8001f1c:	4629      	mov	r1, r5
 8001f1e:	f7fe fdd3 	bl	8000ac8 <__aeabi_dcmpeq>
 8001f22:	b108      	cbz	r0, 8001f28 <__cvt+0xa4>
 8001f24:	f8cd 900c 	str.w	r9, [sp, #12]
 8001f28:	2230      	movs	r2, #48	; 0x30
 8001f2a:	9b03      	ldr	r3, [sp, #12]
 8001f2c:	454b      	cmp	r3, r9
 8001f2e:	d307      	bcc.n	8001f40 <__cvt+0xbc>
 8001f30:	9b03      	ldr	r3, [sp, #12]
 8001f32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001f34:	1bdb      	subs	r3, r3, r7
 8001f36:	4638      	mov	r0, r7
 8001f38:	6013      	str	r3, [r2, #0]
 8001f3a:	b004      	add	sp, #16
 8001f3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f40:	1c59      	adds	r1, r3, #1
 8001f42:	9103      	str	r1, [sp, #12]
 8001f44:	701a      	strb	r2, [r3, #0]
 8001f46:	e7f0      	b.n	8001f2a <__cvt+0xa6>

08001f48 <__exponent>:
 8001f48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	2900      	cmp	r1, #0
 8001f4e:	bfb8      	it	lt
 8001f50:	4249      	neglt	r1, r1
 8001f52:	f803 2b02 	strb.w	r2, [r3], #2
 8001f56:	bfb4      	ite	lt
 8001f58:	222d      	movlt	r2, #45	; 0x2d
 8001f5a:	222b      	movge	r2, #43	; 0x2b
 8001f5c:	2909      	cmp	r1, #9
 8001f5e:	7042      	strb	r2, [r0, #1]
 8001f60:	dd2a      	ble.n	8001fb8 <__exponent+0x70>
 8001f62:	f10d 0207 	add.w	r2, sp, #7
 8001f66:	4617      	mov	r7, r2
 8001f68:	260a      	movs	r6, #10
 8001f6a:	4694      	mov	ip, r2
 8001f6c:	fb91 f5f6 	sdiv	r5, r1, r6
 8001f70:	fb06 1415 	mls	r4, r6, r5, r1
 8001f74:	3430      	adds	r4, #48	; 0x30
 8001f76:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8001f7a:	460c      	mov	r4, r1
 8001f7c:	2c63      	cmp	r4, #99	; 0x63
 8001f7e:	f102 32ff 	add.w	r2, r2, #4294967295
 8001f82:	4629      	mov	r1, r5
 8001f84:	dcf1      	bgt.n	8001f6a <__exponent+0x22>
 8001f86:	3130      	adds	r1, #48	; 0x30
 8001f88:	f1ac 0402 	sub.w	r4, ip, #2
 8001f8c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001f90:	1c41      	adds	r1, r0, #1
 8001f92:	4622      	mov	r2, r4
 8001f94:	42ba      	cmp	r2, r7
 8001f96:	d30a      	bcc.n	8001fae <__exponent+0x66>
 8001f98:	f10d 0209 	add.w	r2, sp, #9
 8001f9c:	eba2 020c 	sub.w	r2, r2, ip
 8001fa0:	42bc      	cmp	r4, r7
 8001fa2:	bf88      	it	hi
 8001fa4:	2200      	movhi	r2, #0
 8001fa6:	4413      	add	r3, r2
 8001fa8:	1a18      	subs	r0, r3, r0
 8001faa:	b003      	add	sp, #12
 8001fac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fae:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001fb2:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001fb6:	e7ed      	b.n	8001f94 <__exponent+0x4c>
 8001fb8:	2330      	movs	r3, #48	; 0x30
 8001fba:	3130      	adds	r1, #48	; 0x30
 8001fbc:	7083      	strb	r3, [r0, #2]
 8001fbe:	70c1      	strb	r1, [r0, #3]
 8001fc0:	1d03      	adds	r3, r0, #4
 8001fc2:	e7f1      	b.n	8001fa8 <__exponent+0x60>

08001fc4 <_printf_float>:
 8001fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001fc8:	ed2d 8b02 	vpush	{d8}
 8001fcc:	b08d      	sub	sp, #52	; 0x34
 8001fce:	460c      	mov	r4, r1
 8001fd0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001fd4:	4616      	mov	r6, r2
 8001fd6:	461f      	mov	r7, r3
 8001fd8:	4605      	mov	r5, r0
 8001fda:	f000 ff17 	bl	8002e0c <_localeconv_r>
 8001fde:	f8d0 a000 	ldr.w	sl, [r0]
 8001fe2:	4650      	mov	r0, sl
 8001fe4:	f7fe f944 	bl	8000270 <strlen>
 8001fe8:	2300      	movs	r3, #0
 8001fea:	930a      	str	r3, [sp, #40]	; 0x28
 8001fec:	6823      	ldr	r3, [r4, #0]
 8001fee:	9305      	str	r3, [sp, #20]
 8001ff0:	f8d8 3000 	ldr.w	r3, [r8]
 8001ff4:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001ff8:	3307      	adds	r3, #7
 8001ffa:	f023 0307 	bic.w	r3, r3, #7
 8001ffe:	f103 0208 	add.w	r2, r3, #8
 8002002:	f8c8 2000 	str.w	r2, [r8]
 8002006:	e9d3 8900 	ldrd	r8, r9, [r3]
 800200a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800200e:	9307      	str	r3, [sp, #28]
 8002010:	f8cd 8018 	str.w	r8, [sp, #24]
 8002014:	ee08 0a10 	vmov	s16, r0
 8002018:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 800201c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002020:	4b9e      	ldr	r3, [pc, #632]	; (800229c <_printf_float+0x2d8>)
 8002022:	f04f 32ff 	mov.w	r2, #4294967295
 8002026:	f7fe fd81 	bl	8000b2c <__aeabi_dcmpun>
 800202a:	bb88      	cbnz	r0, 8002090 <_printf_float+0xcc>
 800202c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002030:	4b9a      	ldr	r3, [pc, #616]	; (800229c <_printf_float+0x2d8>)
 8002032:	f04f 32ff 	mov.w	r2, #4294967295
 8002036:	f7fe fd5b 	bl	8000af0 <__aeabi_dcmple>
 800203a:	bb48      	cbnz	r0, 8002090 <_printf_float+0xcc>
 800203c:	2200      	movs	r2, #0
 800203e:	2300      	movs	r3, #0
 8002040:	4640      	mov	r0, r8
 8002042:	4649      	mov	r1, r9
 8002044:	f7fe fd4a 	bl	8000adc <__aeabi_dcmplt>
 8002048:	b110      	cbz	r0, 8002050 <_printf_float+0x8c>
 800204a:	232d      	movs	r3, #45	; 0x2d
 800204c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002050:	4a93      	ldr	r2, [pc, #588]	; (80022a0 <_printf_float+0x2dc>)
 8002052:	4b94      	ldr	r3, [pc, #592]	; (80022a4 <_printf_float+0x2e0>)
 8002054:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8002058:	bf94      	ite	ls
 800205a:	4690      	movls	r8, r2
 800205c:	4698      	movhi	r8, r3
 800205e:	2303      	movs	r3, #3
 8002060:	6123      	str	r3, [r4, #16]
 8002062:	9b05      	ldr	r3, [sp, #20]
 8002064:	f023 0304 	bic.w	r3, r3, #4
 8002068:	6023      	str	r3, [r4, #0]
 800206a:	f04f 0900 	mov.w	r9, #0
 800206e:	9700      	str	r7, [sp, #0]
 8002070:	4633      	mov	r3, r6
 8002072:	aa0b      	add	r2, sp, #44	; 0x2c
 8002074:	4621      	mov	r1, r4
 8002076:	4628      	mov	r0, r5
 8002078:	f000 f9da 	bl	8002430 <_printf_common>
 800207c:	3001      	adds	r0, #1
 800207e:	f040 8090 	bne.w	80021a2 <_printf_float+0x1de>
 8002082:	f04f 30ff 	mov.w	r0, #4294967295
 8002086:	b00d      	add	sp, #52	; 0x34
 8002088:	ecbd 8b02 	vpop	{d8}
 800208c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002090:	4642      	mov	r2, r8
 8002092:	464b      	mov	r3, r9
 8002094:	4640      	mov	r0, r8
 8002096:	4649      	mov	r1, r9
 8002098:	f7fe fd48 	bl	8000b2c <__aeabi_dcmpun>
 800209c:	b140      	cbz	r0, 80020b0 <_printf_float+0xec>
 800209e:	464b      	mov	r3, r9
 80020a0:	2b00      	cmp	r3, #0
 80020a2:	bfbc      	itt	lt
 80020a4:	232d      	movlt	r3, #45	; 0x2d
 80020a6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80020aa:	4a7f      	ldr	r2, [pc, #508]	; (80022a8 <_printf_float+0x2e4>)
 80020ac:	4b7f      	ldr	r3, [pc, #508]	; (80022ac <_printf_float+0x2e8>)
 80020ae:	e7d1      	b.n	8002054 <_printf_float+0x90>
 80020b0:	6863      	ldr	r3, [r4, #4]
 80020b2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80020b6:	9206      	str	r2, [sp, #24]
 80020b8:	1c5a      	adds	r2, r3, #1
 80020ba:	d13f      	bne.n	800213c <_printf_float+0x178>
 80020bc:	2306      	movs	r3, #6
 80020be:	6063      	str	r3, [r4, #4]
 80020c0:	9b05      	ldr	r3, [sp, #20]
 80020c2:	6861      	ldr	r1, [r4, #4]
 80020c4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80020c8:	2300      	movs	r3, #0
 80020ca:	9303      	str	r3, [sp, #12]
 80020cc:	ab0a      	add	r3, sp, #40	; 0x28
 80020ce:	e9cd b301 	strd	fp, r3, [sp, #4]
 80020d2:	ab09      	add	r3, sp, #36	; 0x24
 80020d4:	ec49 8b10 	vmov	d0, r8, r9
 80020d8:	9300      	str	r3, [sp, #0]
 80020da:	6022      	str	r2, [r4, #0]
 80020dc:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80020e0:	4628      	mov	r0, r5
 80020e2:	f7ff fecf 	bl	8001e84 <__cvt>
 80020e6:	9b06      	ldr	r3, [sp, #24]
 80020e8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80020ea:	2b47      	cmp	r3, #71	; 0x47
 80020ec:	4680      	mov	r8, r0
 80020ee:	d108      	bne.n	8002102 <_printf_float+0x13e>
 80020f0:	1cc8      	adds	r0, r1, #3
 80020f2:	db02      	blt.n	80020fa <_printf_float+0x136>
 80020f4:	6863      	ldr	r3, [r4, #4]
 80020f6:	4299      	cmp	r1, r3
 80020f8:	dd41      	ble.n	800217e <_printf_float+0x1ba>
 80020fa:	f1ab 0302 	sub.w	r3, fp, #2
 80020fe:	fa5f fb83 	uxtb.w	fp, r3
 8002102:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8002106:	d820      	bhi.n	800214a <_printf_float+0x186>
 8002108:	3901      	subs	r1, #1
 800210a:	465a      	mov	r2, fp
 800210c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002110:	9109      	str	r1, [sp, #36]	; 0x24
 8002112:	f7ff ff19 	bl	8001f48 <__exponent>
 8002116:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002118:	1813      	adds	r3, r2, r0
 800211a:	2a01      	cmp	r2, #1
 800211c:	4681      	mov	r9, r0
 800211e:	6123      	str	r3, [r4, #16]
 8002120:	dc02      	bgt.n	8002128 <_printf_float+0x164>
 8002122:	6822      	ldr	r2, [r4, #0]
 8002124:	07d2      	lsls	r2, r2, #31
 8002126:	d501      	bpl.n	800212c <_printf_float+0x168>
 8002128:	3301      	adds	r3, #1
 800212a:	6123      	str	r3, [r4, #16]
 800212c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8002130:	2b00      	cmp	r3, #0
 8002132:	d09c      	beq.n	800206e <_printf_float+0xaa>
 8002134:	232d      	movs	r3, #45	; 0x2d
 8002136:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800213a:	e798      	b.n	800206e <_printf_float+0xaa>
 800213c:	9a06      	ldr	r2, [sp, #24]
 800213e:	2a47      	cmp	r2, #71	; 0x47
 8002140:	d1be      	bne.n	80020c0 <_printf_float+0xfc>
 8002142:	2b00      	cmp	r3, #0
 8002144:	d1bc      	bne.n	80020c0 <_printf_float+0xfc>
 8002146:	2301      	movs	r3, #1
 8002148:	e7b9      	b.n	80020be <_printf_float+0xfa>
 800214a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800214e:	d118      	bne.n	8002182 <_printf_float+0x1be>
 8002150:	2900      	cmp	r1, #0
 8002152:	6863      	ldr	r3, [r4, #4]
 8002154:	dd0b      	ble.n	800216e <_printf_float+0x1aa>
 8002156:	6121      	str	r1, [r4, #16]
 8002158:	b913      	cbnz	r3, 8002160 <_printf_float+0x19c>
 800215a:	6822      	ldr	r2, [r4, #0]
 800215c:	07d0      	lsls	r0, r2, #31
 800215e:	d502      	bpl.n	8002166 <_printf_float+0x1a2>
 8002160:	3301      	adds	r3, #1
 8002162:	440b      	add	r3, r1
 8002164:	6123      	str	r3, [r4, #16]
 8002166:	65a1      	str	r1, [r4, #88]	; 0x58
 8002168:	f04f 0900 	mov.w	r9, #0
 800216c:	e7de      	b.n	800212c <_printf_float+0x168>
 800216e:	b913      	cbnz	r3, 8002176 <_printf_float+0x1b2>
 8002170:	6822      	ldr	r2, [r4, #0]
 8002172:	07d2      	lsls	r2, r2, #31
 8002174:	d501      	bpl.n	800217a <_printf_float+0x1b6>
 8002176:	3302      	adds	r3, #2
 8002178:	e7f4      	b.n	8002164 <_printf_float+0x1a0>
 800217a:	2301      	movs	r3, #1
 800217c:	e7f2      	b.n	8002164 <_printf_float+0x1a0>
 800217e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8002182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002184:	4299      	cmp	r1, r3
 8002186:	db05      	blt.n	8002194 <_printf_float+0x1d0>
 8002188:	6823      	ldr	r3, [r4, #0]
 800218a:	6121      	str	r1, [r4, #16]
 800218c:	07d8      	lsls	r0, r3, #31
 800218e:	d5ea      	bpl.n	8002166 <_printf_float+0x1a2>
 8002190:	1c4b      	adds	r3, r1, #1
 8002192:	e7e7      	b.n	8002164 <_printf_float+0x1a0>
 8002194:	2900      	cmp	r1, #0
 8002196:	bfd4      	ite	le
 8002198:	f1c1 0202 	rsble	r2, r1, #2
 800219c:	2201      	movgt	r2, #1
 800219e:	4413      	add	r3, r2
 80021a0:	e7e0      	b.n	8002164 <_printf_float+0x1a0>
 80021a2:	6823      	ldr	r3, [r4, #0]
 80021a4:	055a      	lsls	r2, r3, #21
 80021a6:	d407      	bmi.n	80021b8 <_printf_float+0x1f4>
 80021a8:	6923      	ldr	r3, [r4, #16]
 80021aa:	4642      	mov	r2, r8
 80021ac:	4631      	mov	r1, r6
 80021ae:	4628      	mov	r0, r5
 80021b0:	47b8      	blx	r7
 80021b2:	3001      	adds	r0, #1
 80021b4:	d12c      	bne.n	8002210 <_printf_float+0x24c>
 80021b6:	e764      	b.n	8002082 <_printf_float+0xbe>
 80021b8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80021bc:	f240 80e0 	bls.w	8002380 <_printf_float+0x3bc>
 80021c0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80021c4:	2200      	movs	r2, #0
 80021c6:	2300      	movs	r3, #0
 80021c8:	f7fe fc7e 	bl	8000ac8 <__aeabi_dcmpeq>
 80021cc:	2800      	cmp	r0, #0
 80021ce:	d034      	beq.n	800223a <_printf_float+0x276>
 80021d0:	4a37      	ldr	r2, [pc, #220]	; (80022b0 <_printf_float+0x2ec>)
 80021d2:	2301      	movs	r3, #1
 80021d4:	4631      	mov	r1, r6
 80021d6:	4628      	mov	r0, r5
 80021d8:	47b8      	blx	r7
 80021da:	3001      	adds	r0, #1
 80021dc:	f43f af51 	beq.w	8002082 <_printf_float+0xbe>
 80021e0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80021e4:	429a      	cmp	r2, r3
 80021e6:	db02      	blt.n	80021ee <_printf_float+0x22a>
 80021e8:	6823      	ldr	r3, [r4, #0]
 80021ea:	07d8      	lsls	r0, r3, #31
 80021ec:	d510      	bpl.n	8002210 <_printf_float+0x24c>
 80021ee:	ee18 3a10 	vmov	r3, s16
 80021f2:	4652      	mov	r2, sl
 80021f4:	4631      	mov	r1, r6
 80021f6:	4628      	mov	r0, r5
 80021f8:	47b8      	blx	r7
 80021fa:	3001      	adds	r0, #1
 80021fc:	f43f af41 	beq.w	8002082 <_printf_float+0xbe>
 8002200:	f04f 0800 	mov.w	r8, #0
 8002204:	f104 091a 	add.w	r9, r4, #26
 8002208:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800220a:	3b01      	subs	r3, #1
 800220c:	4543      	cmp	r3, r8
 800220e:	dc09      	bgt.n	8002224 <_printf_float+0x260>
 8002210:	6823      	ldr	r3, [r4, #0]
 8002212:	079b      	lsls	r3, r3, #30
 8002214:	f100 8107 	bmi.w	8002426 <_printf_float+0x462>
 8002218:	68e0      	ldr	r0, [r4, #12]
 800221a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800221c:	4298      	cmp	r0, r3
 800221e:	bfb8      	it	lt
 8002220:	4618      	movlt	r0, r3
 8002222:	e730      	b.n	8002086 <_printf_float+0xc2>
 8002224:	2301      	movs	r3, #1
 8002226:	464a      	mov	r2, r9
 8002228:	4631      	mov	r1, r6
 800222a:	4628      	mov	r0, r5
 800222c:	47b8      	blx	r7
 800222e:	3001      	adds	r0, #1
 8002230:	f43f af27 	beq.w	8002082 <_printf_float+0xbe>
 8002234:	f108 0801 	add.w	r8, r8, #1
 8002238:	e7e6      	b.n	8002208 <_printf_float+0x244>
 800223a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800223c:	2b00      	cmp	r3, #0
 800223e:	dc39      	bgt.n	80022b4 <_printf_float+0x2f0>
 8002240:	4a1b      	ldr	r2, [pc, #108]	; (80022b0 <_printf_float+0x2ec>)
 8002242:	2301      	movs	r3, #1
 8002244:	4631      	mov	r1, r6
 8002246:	4628      	mov	r0, r5
 8002248:	47b8      	blx	r7
 800224a:	3001      	adds	r0, #1
 800224c:	f43f af19 	beq.w	8002082 <_printf_float+0xbe>
 8002250:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8002254:	4313      	orrs	r3, r2
 8002256:	d102      	bne.n	800225e <_printf_float+0x29a>
 8002258:	6823      	ldr	r3, [r4, #0]
 800225a:	07d9      	lsls	r1, r3, #31
 800225c:	d5d8      	bpl.n	8002210 <_printf_float+0x24c>
 800225e:	ee18 3a10 	vmov	r3, s16
 8002262:	4652      	mov	r2, sl
 8002264:	4631      	mov	r1, r6
 8002266:	4628      	mov	r0, r5
 8002268:	47b8      	blx	r7
 800226a:	3001      	adds	r0, #1
 800226c:	f43f af09 	beq.w	8002082 <_printf_float+0xbe>
 8002270:	f04f 0900 	mov.w	r9, #0
 8002274:	f104 0a1a 	add.w	sl, r4, #26
 8002278:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800227a:	425b      	negs	r3, r3
 800227c:	454b      	cmp	r3, r9
 800227e:	dc01      	bgt.n	8002284 <_printf_float+0x2c0>
 8002280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002282:	e792      	b.n	80021aa <_printf_float+0x1e6>
 8002284:	2301      	movs	r3, #1
 8002286:	4652      	mov	r2, sl
 8002288:	4631      	mov	r1, r6
 800228a:	4628      	mov	r0, r5
 800228c:	47b8      	blx	r7
 800228e:	3001      	adds	r0, #1
 8002290:	f43f aef7 	beq.w	8002082 <_printf_float+0xbe>
 8002294:	f109 0901 	add.w	r9, r9, #1
 8002298:	e7ee      	b.n	8002278 <_printf_float+0x2b4>
 800229a:	bf00      	nop
 800229c:	7fefffff 	.word	0x7fefffff
 80022a0:	080069cf 	.word	0x080069cf
 80022a4:	080069d3 	.word	0x080069d3
 80022a8:	080069d7 	.word	0x080069d7
 80022ac:	080069db 	.word	0x080069db
 80022b0:	080069df 	.word	0x080069df
 80022b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80022b6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80022b8:	429a      	cmp	r2, r3
 80022ba:	bfa8      	it	ge
 80022bc:	461a      	movge	r2, r3
 80022be:	2a00      	cmp	r2, #0
 80022c0:	4691      	mov	r9, r2
 80022c2:	dc37      	bgt.n	8002334 <_printf_float+0x370>
 80022c4:	f04f 0b00 	mov.w	fp, #0
 80022c8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80022cc:	f104 021a 	add.w	r2, r4, #26
 80022d0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80022d2:	9305      	str	r3, [sp, #20]
 80022d4:	eba3 0309 	sub.w	r3, r3, r9
 80022d8:	455b      	cmp	r3, fp
 80022da:	dc33      	bgt.n	8002344 <_printf_float+0x380>
 80022dc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80022e0:	429a      	cmp	r2, r3
 80022e2:	db3b      	blt.n	800235c <_printf_float+0x398>
 80022e4:	6823      	ldr	r3, [r4, #0]
 80022e6:	07da      	lsls	r2, r3, #31
 80022e8:	d438      	bmi.n	800235c <_printf_float+0x398>
 80022ea:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80022ee:	eba2 0903 	sub.w	r9, r2, r3
 80022f2:	9b05      	ldr	r3, [sp, #20]
 80022f4:	1ad2      	subs	r2, r2, r3
 80022f6:	4591      	cmp	r9, r2
 80022f8:	bfa8      	it	ge
 80022fa:	4691      	movge	r9, r2
 80022fc:	f1b9 0f00 	cmp.w	r9, #0
 8002300:	dc35      	bgt.n	800236e <_printf_float+0x3aa>
 8002302:	f04f 0800 	mov.w	r8, #0
 8002306:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800230a:	f104 0a1a 	add.w	sl, r4, #26
 800230e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002312:	1a9b      	subs	r3, r3, r2
 8002314:	eba3 0309 	sub.w	r3, r3, r9
 8002318:	4543      	cmp	r3, r8
 800231a:	f77f af79 	ble.w	8002210 <_printf_float+0x24c>
 800231e:	2301      	movs	r3, #1
 8002320:	4652      	mov	r2, sl
 8002322:	4631      	mov	r1, r6
 8002324:	4628      	mov	r0, r5
 8002326:	47b8      	blx	r7
 8002328:	3001      	adds	r0, #1
 800232a:	f43f aeaa 	beq.w	8002082 <_printf_float+0xbe>
 800232e:	f108 0801 	add.w	r8, r8, #1
 8002332:	e7ec      	b.n	800230e <_printf_float+0x34a>
 8002334:	4613      	mov	r3, r2
 8002336:	4631      	mov	r1, r6
 8002338:	4642      	mov	r2, r8
 800233a:	4628      	mov	r0, r5
 800233c:	47b8      	blx	r7
 800233e:	3001      	adds	r0, #1
 8002340:	d1c0      	bne.n	80022c4 <_printf_float+0x300>
 8002342:	e69e      	b.n	8002082 <_printf_float+0xbe>
 8002344:	2301      	movs	r3, #1
 8002346:	4631      	mov	r1, r6
 8002348:	4628      	mov	r0, r5
 800234a:	9205      	str	r2, [sp, #20]
 800234c:	47b8      	blx	r7
 800234e:	3001      	adds	r0, #1
 8002350:	f43f ae97 	beq.w	8002082 <_printf_float+0xbe>
 8002354:	9a05      	ldr	r2, [sp, #20]
 8002356:	f10b 0b01 	add.w	fp, fp, #1
 800235a:	e7b9      	b.n	80022d0 <_printf_float+0x30c>
 800235c:	ee18 3a10 	vmov	r3, s16
 8002360:	4652      	mov	r2, sl
 8002362:	4631      	mov	r1, r6
 8002364:	4628      	mov	r0, r5
 8002366:	47b8      	blx	r7
 8002368:	3001      	adds	r0, #1
 800236a:	d1be      	bne.n	80022ea <_printf_float+0x326>
 800236c:	e689      	b.n	8002082 <_printf_float+0xbe>
 800236e:	9a05      	ldr	r2, [sp, #20]
 8002370:	464b      	mov	r3, r9
 8002372:	4442      	add	r2, r8
 8002374:	4631      	mov	r1, r6
 8002376:	4628      	mov	r0, r5
 8002378:	47b8      	blx	r7
 800237a:	3001      	adds	r0, #1
 800237c:	d1c1      	bne.n	8002302 <_printf_float+0x33e>
 800237e:	e680      	b.n	8002082 <_printf_float+0xbe>
 8002380:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002382:	2a01      	cmp	r2, #1
 8002384:	dc01      	bgt.n	800238a <_printf_float+0x3c6>
 8002386:	07db      	lsls	r3, r3, #31
 8002388:	d53a      	bpl.n	8002400 <_printf_float+0x43c>
 800238a:	2301      	movs	r3, #1
 800238c:	4642      	mov	r2, r8
 800238e:	4631      	mov	r1, r6
 8002390:	4628      	mov	r0, r5
 8002392:	47b8      	blx	r7
 8002394:	3001      	adds	r0, #1
 8002396:	f43f ae74 	beq.w	8002082 <_printf_float+0xbe>
 800239a:	ee18 3a10 	vmov	r3, s16
 800239e:	4652      	mov	r2, sl
 80023a0:	4631      	mov	r1, r6
 80023a2:	4628      	mov	r0, r5
 80023a4:	47b8      	blx	r7
 80023a6:	3001      	adds	r0, #1
 80023a8:	f43f ae6b 	beq.w	8002082 <_printf_float+0xbe>
 80023ac:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80023b0:	2200      	movs	r2, #0
 80023b2:	2300      	movs	r3, #0
 80023b4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80023b8:	f7fe fb86 	bl	8000ac8 <__aeabi_dcmpeq>
 80023bc:	b9d8      	cbnz	r0, 80023f6 <_printf_float+0x432>
 80023be:	f10a 33ff 	add.w	r3, sl, #4294967295
 80023c2:	f108 0201 	add.w	r2, r8, #1
 80023c6:	4631      	mov	r1, r6
 80023c8:	4628      	mov	r0, r5
 80023ca:	47b8      	blx	r7
 80023cc:	3001      	adds	r0, #1
 80023ce:	d10e      	bne.n	80023ee <_printf_float+0x42a>
 80023d0:	e657      	b.n	8002082 <_printf_float+0xbe>
 80023d2:	2301      	movs	r3, #1
 80023d4:	4652      	mov	r2, sl
 80023d6:	4631      	mov	r1, r6
 80023d8:	4628      	mov	r0, r5
 80023da:	47b8      	blx	r7
 80023dc:	3001      	adds	r0, #1
 80023de:	f43f ae50 	beq.w	8002082 <_printf_float+0xbe>
 80023e2:	f108 0801 	add.w	r8, r8, #1
 80023e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80023e8:	3b01      	subs	r3, #1
 80023ea:	4543      	cmp	r3, r8
 80023ec:	dcf1      	bgt.n	80023d2 <_printf_float+0x40e>
 80023ee:	464b      	mov	r3, r9
 80023f0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80023f4:	e6da      	b.n	80021ac <_printf_float+0x1e8>
 80023f6:	f04f 0800 	mov.w	r8, #0
 80023fa:	f104 0a1a 	add.w	sl, r4, #26
 80023fe:	e7f2      	b.n	80023e6 <_printf_float+0x422>
 8002400:	2301      	movs	r3, #1
 8002402:	4642      	mov	r2, r8
 8002404:	e7df      	b.n	80023c6 <_printf_float+0x402>
 8002406:	2301      	movs	r3, #1
 8002408:	464a      	mov	r2, r9
 800240a:	4631      	mov	r1, r6
 800240c:	4628      	mov	r0, r5
 800240e:	47b8      	blx	r7
 8002410:	3001      	adds	r0, #1
 8002412:	f43f ae36 	beq.w	8002082 <_printf_float+0xbe>
 8002416:	f108 0801 	add.w	r8, r8, #1
 800241a:	68e3      	ldr	r3, [r4, #12]
 800241c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800241e:	1a5b      	subs	r3, r3, r1
 8002420:	4543      	cmp	r3, r8
 8002422:	dcf0      	bgt.n	8002406 <_printf_float+0x442>
 8002424:	e6f8      	b.n	8002218 <_printf_float+0x254>
 8002426:	f04f 0800 	mov.w	r8, #0
 800242a:	f104 0919 	add.w	r9, r4, #25
 800242e:	e7f4      	b.n	800241a <_printf_float+0x456>

08002430 <_printf_common>:
 8002430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002434:	4616      	mov	r6, r2
 8002436:	4699      	mov	r9, r3
 8002438:	688a      	ldr	r2, [r1, #8]
 800243a:	690b      	ldr	r3, [r1, #16]
 800243c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002440:	4293      	cmp	r3, r2
 8002442:	bfb8      	it	lt
 8002444:	4613      	movlt	r3, r2
 8002446:	6033      	str	r3, [r6, #0]
 8002448:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800244c:	4607      	mov	r7, r0
 800244e:	460c      	mov	r4, r1
 8002450:	b10a      	cbz	r2, 8002456 <_printf_common+0x26>
 8002452:	3301      	adds	r3, #1
 8002454:	6033      	str	r3, [r6, #0]
 8002456:	6823      	ldr	r3, [r4, #0]
 8002458:	0699      	lsls	r1, r3, #26
 800245a:	bf42      	ittt	mi
 800245c:	6833      	ldrmi	r3, [r6, #0]
 800245e:	3302      	addmi	r3, #2
 8002460:	6033      	strmi	r3, [r6, #0]
 8002462:	6825      	ldr	r5, [r4, #0]
 8002464:	f015 0506 	ands.w	r5, r5, #6
 8002468:	d106      	bne.n	8002478 <_printf_common+0x48>
 800246a:	f104 0a19 	add.w	sl, r4, #25
 800246e:	68e3      	ldr	r3, [r4, #12]
 8002470:	6832      	ldr	r2, [r6, #0]
 8002472:	1a9b      	subs	r3, r3, r2
 8002474:	42ab      	cmp	r3, r5
 8002476:	dc26      	bgt.n	80024c6 <_printf_common+0x96>
 8002478:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800247c:	1e13      	subs	r3, r2, #0
 800247e:	6822      	ldr	r2, [r4, #0]
 8002480:	bf18      	it	ne
 8002482:	2301      	movne	r3, #1
 8002484:	0692      	lsls	r2, r2, #26
 8002486:	d42b      	bmi.n	80024e0 <_printf_common+0xb0>
 8002488:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800248c:	4649      	mov	r1, r9
 800248e:	4638      	mov	r0, r7
 8002490:	47c0      	blx	r8
 8002492:	3001      	adds	r0, #1
 8002494:	d01e      	beq.n	80024d4 <_printf_common+0xa4>
 8002496:	6823      	ldr	r3, [r4, #0]
 8002498:	6922      	ldr	r2, [r4, #16]
 800249a:	f003 0306 	and.w	r3, r3, #6
 800249e:	2b04      	cmp	r3, #4
 80024a0:	bf02      	ittt	eq
 80024a2:	68e5      	ldreq	r5, [r4, #12]
 80024a4:	6833      	ldreq	r3, [r6, #0]
 80024a6:	1aed      	subeq	r5, r5, r3
 80024a8:	68a3      	ldr	r3, [r4, #8]
 80024aa:	bf0c      	ite	eq
 80024ac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80024b0:	2500      	movne	r5, #0
 80024b2:	4293      	cmp	r3, r2
 80024b4:	bfc4      	itt	gt
 80024b6:	1a9b      	subgt	r3, r3, r2
 80024b8:	18ed      	addgt	r5, r5, r3
 80024ba:	2600      	movs	r6, #0
 80024bc:	341a      	adds	r4, #26
 80024be:	42b5      	cmp	r5, r6
 80024c0:	d11a      	bne.n	80024f8 <_printf_common+0xc8>
 80024c2:	2000      	movs	r0, #0
 80024c4:	e008      	b.n	80024d8 <_printf_common+0xa8>
 80024c6:	2301      	movs	r3, #1
 80024c8:	4652      	mov	r2, sl
 80024ca:	4649      	mov	r1, r9
 80024cc:	4638      	mov	r0, r7
 80024ce:	47c0      	blx	r8
 80024d0:	3001      	adds	r0, #1
 80024d2:	d103      	bne.n	80024dc <_printf_common+0xac>
 80024d4:	f04f 30ff 	mov.w	r0, #4294967295
 80024d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80024dc:	3501      	adds	r5, #1
 80024de:	e7c6      	b.n	800246e <_printf_common+0x3e>
 80024e0:	18e1      	adds	r1, r4, r3
 80024e2:	1c5a      	adds	r2, r3, #1
 80024e4:	2030      	movs	r0, #48	; 0x30
 80024e6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80024ea:	4422      	add	r2, r4
 80024ec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80024f0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80024f4:	3302      	adds	r3, #2
 80024f6:	e7c7      	b.n	8002488 <_printf_common+0x58>
 80024f8:	2301      	movs	r3, #1
 80024fa:	4622      	mov	r2, r4
 80024fc:	4649      	mov	r1, r9
 80024fe:	4638      	mov	r0, r7
 8002500:	47c0      	blx	r8
 8002502:	3001      	adds	r0, #1
 8002504:	d0e6      	beq.n	80024d4 <_printf_common+0xa4>
 8002506:	3601      	adds	r6, #1
 8002508:	e7d9      	b.n	80024be <_printf_common+0x8e>
	...

0800250c <_printf_i>:
 800250c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002510:	7e0f      	ldrb	r7, [r1, #24]
 8002512:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002514:	2f78      	cmp	r7, #120	; 0x78
 8002516:	4691      	mov	r9, r2
 8002518:	4680      	mov	r8, r0
 800251a:	460c      	mov	r4, r1
 800251c:	469a      	mov	sl, r3
 800251e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002522:	d807      	bhi.n	8002534 <_printf_i+0x28>
 8002524:	2f62      	cmp	r7, #98	; 0x62
 8002526:	d80a      	bhi.n	800253e <_printf_i+0x32>
 8002528:	2f00      	cmp	r7, #0
 800252a:	f000 80d4 	beq.w	80026d6 <_printf_i+0x1ca>
 800252e:	2f58      	cmp	r7, #88	; 0x58
 8002530:	f000 80c0 	beq.w	80026b4 <_printf_i+0x1a8>
 8002534:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002538:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800253c:	e03a      	b.n	80025b4 <_printf_i+0xa8>
 800253e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002542:	2b15      	cmp	r3, #21
 8002544:	d8f6      	bhi.n	8002534 <_printf_i+0x28>
 8002546:	a101      	add	r1, pc, #4	; (adr r1, 800254c <_printf_i+0x40>)
 8002548:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800254c:	080025a5 	.word	0x080025a5
 8002550:	080025b9 	.word	0x080025b9
 8002554:	08002535 	.word	0x08002535
 8002558:	08002535 	.word	0x08002535
 800255c:	08002535 	.word	0x08002535
 8002560:	08002535 	.word	0x08002535
 8002564:	080025b9 	.word	0x080025b9
 8002568:	08002535 	.word	0x08002535
 800256c:	08002535 	.word	0x08002535
 8002570:	08002535 	.word	0x08002535
 8002574:	08002535 	.word	0x08002535
 8002578:	080026bd 	.word	0x080026bd
 800257c:	080025e5 	.word	0x080025e5
 8002580:	08002677 	.word	0x08002677
 8002584:	08002535 	.word	0x08002535
 8002588:	08002535 	.word	0x08002535
 800258c:	080026df 	.word	0x080026df
 8002590:	08002535 	.word	0x08002535
 8002594:	080025e5 	.word	0x080025e5
 8002598:	08002535 	.word	0x08002535
 800259c:	08002535 	.word	0x08002535
 80025a0:	0800267f 	.word	0x0800267f
 80025a4:	682b      	ldr	r3, [r5, #0]
 80025a6:	1d1a      	adds	r2, r3, #4
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	602a      	str	r2, [r5, #0]
 80025ac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80025b0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80025b4:	2301      	movs	r3, #1
 80025b6:	e09f      	b.n	80026f8 <_printf_i+0x1ec>
 80025b8:	6820      	ldr	r0, [r4, #0]
 80025ba:	682b      	ldr	r3, [r5, #0]
 80025bc:	0607      	lsls	r7, r0, #24
 80025be:	f103 0104 	add.w	r1, r3, #4
 80025c2:	6029      	str	r1, [r5, #0]
 80025c4:	d501      	bpl.n	80025ca <_printf_i+0xbe>
 80025c6:	681e      	ldr	r6, [r3, #0]
 80025c8:	e003      	b.n	80025d2 <_printf_i+0xc6>
 80025ca:	0646      	lsls	r6, r0, #25
 80025cc:	d5fb      	bpl.n	80025c6 <_printf_i+0xba>
 80025ce:	f9b3 6000 	ldrsh.w	r6, [r3]
 80025d2:	2e00      	cmp	r6, #0
 80025d4:	da03      	bge.n	80025de <_printf_i+0xd2>
 80025d6:	232d      	movs	r3, #45	; 0x2d
 80025d8:	4276      	negs	r6, r6
 80025da:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80025de:	485a      	ldr	r0, [pc, #360]	; (8002748 <_printf_i+0x23c>)
 80025e0:	230a      	movs	r3, #10
 80025e2:	e012      	b.n	800260a <_printf_i+0xfe>
 80025e4:	682b      	ldr	r3, [r5, #0]
 80025e6:	6820      	ldr	r0, [r4, #0]
 80025e8:	1d19      	adds	r1, r3, #4
 80025ea:	6029      	str	r1, [r5, #0]
 80025ec:	0605      	lsls	r5, r0, #24
 80025ee:	d501      	bpl.n	80025f4 <_printf_i+0xe8>
 80025f0:	681e      	ldr	r6, [r3, #0]
 80025f2:	e002      	b.n	80025fa <_printf_i+0xee>
 80025f4:	0641      	lsls	r1, r0, #25
 80025f6:	d5fb      	bpl.n	80025f0 <_printf_i+0xe4>
 80025f8:	881e      	ldrh	r6, [r3, #0]
 80025fa:	4853      	ldr	r0, [pc, #332]	; (8002748 <_printf_i+0x23c>)
 80025fc:	2f6f      	cmp	r7, #111	; 0x6f
 80025fe:	bf0c      	ite	eq
 8002600:	2308      	moveq	r3, #8
 8002602:	230a      	movne	r3, #10
 8002604:	2100      	movs	r1, #0
 8002606:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800260a:	6865      	ldr	r5, [r4, #4]
 800260c:	60a5      	str	r5, [r4, #8]
 800260e:	2d00      	cmp	r5, #0
 8002610:	bfa2      	ittt	ge
 8002612:	6821      	ldrge	r1, [r4, #0]
 8002614:	f021 0104 	bicge.w	r1, r1, #4
 8002618:	6021      	strge	r1, [r4, #0]
 800261a:	b90e      	cbnz	r6, 8002620 <_printf_i+0x114>
 800261c:	2d00      	cmp	r5, #0
 800261e:	d04b      	beq.n	80026b8 <_printf_i+0x1ac>
 8002620:	4615      	mov	r5, r2
 8002622:	fbb6 f1f3 	udiv	r1, r6, r3
 8002626:	fb03 6711 	mls	r7, r3, r1, r6
 800262a:	5dc7      	ldrb	r7, [r0, r7]
 800262c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002630:	4637      	mov	r7, r6
 8002632:	42bb      	cmp	r3, r7
 8002634:	460e      	mov	r6, r1
 8002636:	d9f4      	bls.n	8002622 <_printf_i+0x116>
 8002638:	2b08      	cmp	r3, #8
 800263a:	d10b      	bne.n	8002654 <_printf_i+0x148>
 800263c:	6823      	ldr	r3, [r4, #0]
 800263e:	07de      	lsls	r6, r3, #31
 8002640:	d508      	bpl.n	8002654 <_printf_i+0x148>
 8002642:	6923      	ldr	r3, [r4, #16]
 8002644:	6861      	ldr	r1, [r4, #4]
 8002646:	4299      	cmp	r1, r3
 8002648:	bfde      	ittt	le
 800264a:	2330      	movle	r3, #48	; 0x30
 800264c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002650:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002654:	1b52      	subs	r2, r2, r5
 8002656:	6122      	str	r2, [r4, #16]
 8002658:	f8cd a000 	str.w	sl, [sp]
 800265c:	464b      	mov	r3, r9
 800265e:	aa03      	add	r2, sp, #12
 8002660:	4621      	mov	r1, r4
 8002662:	4640      	mov	r0, r8
 8002664:	f7ff fee4 	bl	8002430 <_printf_common>
 8002668:	3001      	adds	r0, #1
 800266a:	d14a      	bne.n	8002702 <_printf_i+0x1f6>
 800266c:	f04f 30ff 	mov.w	r0, #4294967295
 8002670:	b004      	add	sp, #16
 8002672:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002676:	6823      	ldr	r3, [r4, #0]
 8002678:	f043 0320 	orr.w	r3, r3, #32
 800267c:	6023      	str	r3, [r4, #0]
 800267e:	4833      	ldr	r0, [pc, #204]	; (800274c <_printf_i+0x240>)
 8002680:	2778      	movs	r7, #120	; 0x78
 8002682:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8002686:	6823      	ldr	r3, [r4, #0]
 8002688:	6829      	ldr	r1, [r5, #0]
 800268a:	061f      	lsls	r7, r3, #24
 800268c:	f851 6b04 	ldr.w	r6, [r1], #4
 8002690:	d402      	bmi.n	8002698 <_printf_i+0x18c>
 8002692:	065f      	lsls	r7, r3, #25
 8002694:	bf48      	it	mi
 8002696:	b2b6      	uxthmi	r6, r6
 8002698:	07df      	lsls	r7, r3, #31
 800269a:	bf48      	it	mi
 800269c:	f043 0320 	orrmi.w	r3, r3, #32
 80026a0:	6029      	str	r1, [r5, #0]
 80026a2:	bf48      	it	mi
 80026a4:	6023      	strmi	r3, [r4, #0]
 80026a6:	b91e      	cbnz	r6, 80026b0 <_printf_i+0x1a4>
 80026a8:	6823      	ldr	r3, [r4, #0]
 80026aa:	f023 0320 	bic.w	r3, r3, #32
 80026ae:	6023      	str	r3, [r4, #0]
 80026b0:	2310      	movs	r3, #16
 80026b2:	e7a7      	b.n	8002604 <_printf_i+0xf8>
 80026b4:	4824      	ldr	r0, [pc, #144]	; (8002748 <_printf_i+0x23c>)
 80026b6:	e7e4      	b.n	8002682 <_printf_i+0x176>
 80026b8:	4615      	mov	r5, r2
 80026ba:	e7bd      	b.n	8002638 <_printf_i+0x12c>
 80026bc:	682b      	ldr	r3, [r5, #0]
 80026be:	6826      	ldr	r6, [r4, #0]
 80026c0:	6961      	ldr	r1, [r4, #20]
 80026c2:	1d18      	adds	r0, r3, #4
 80026c4:	6028      	str	r0, [r5, #0]
 80026c6:	0635      	lsls	r5, r6, #24
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	d501      	bpl.n	80026d0 <_printf_i+0x1c4>
 80026cc:	6019      	str	r1, [r3, #0]
 80026ce:	e002      	b.n	80026d6 <_printf_i+0x1ca>
 80026d0:	0670      	lsls	r0, r6, #25
 80026d2:	d5fb      	bpl.n	80026cc <_printf_i+0x1c0>
 80026d4:	8019      	strh	r1, [r3, #0]
 80026d6:	2300      	movs	r3, #0
 80026d8:	6123      	str	r3, [r4, #16]
 80026da:	4615      	mov	r5, r2
 80026dc:	e7bc      	b.n	8002658 <_printf_i+0x14c>
 80026de:	682b      	ldr	r3, [r5, #0]
 80026e0:	1d1a      	adds	r2, r3, #4
 80026e2:	602a      	str	r2, [r5, #0]
 80026e4:	681d      	ldr	r5, [r3, #0]
 80026e6:	6862      	ldr	r2, [r4, #4]
 80026e8:	2100      	movs	r1, #0
 80026ea:	4628      	mov	r0, r5
 80026ec:	f7fd fd70 	bl	80001d0 <memchr>
 80026f0:	b108      	cbz	r0, 80026f6 <_printf_i+0x1ea>
 80026f2:	1b40      	subs	r0, r0, r5
 80026f4:	6060      	str	r0, [r4, #4]
 80026f6:	6863      	ldr	r3, [r4, #4]
 80026f8:	6123      	str	r3, [r4, #16]
 80026fa:	2300      	movs	r3, #0
 80026fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002700:	e7aa      	b.n	8002658 <_printf_i+0x14c>
 8002702:	6923      	ldr	r3, [r4, #16]
 8002704:	462a      	mov	r2, r5
 8002706:	4649      	mov	r1, r9
 8002708:	4640      	mov	r0, r8
 800270a:	47d0      	blx	sl
 800270c:	3001      	adds	r0, #1
 800270e:	d0ad      	beq.n	800266c <_printf_i+0x160>
 8002710:	6823      	ldr	r3, [r4, #0]
 8002712:	079b      	lsls	r3, r3, #30
 8002714:	d413      	bmi.n	800273e <_printf_i+0x232>
 8002716:	68e0      	ldr	r0, [r4, #12]
 8002718:	9b03      	ldr	r3, [sp, #12]
 800271a:	4298      	cmp	r0, r3
 800271c:	bfb8      	it	lt
 800271e:	4618      	movlt	r0, r3
 8002720:	e7a6      	b.n	8002670 <_printf_i+0x164>
 8002722:	2301      	movs	r3, #1
 8002724:	4632      	mov	r2, r6
 8002726:	4649      	mov	r1, r9
 8002728:	4640      	mov	r0, r8
 800272a:	47d0      	blx	sl
 800272c:	3001      	adds	r0, #1
 800272e:	d09d      	beq.n	800266c <_printf_i+0x160>
 8002730:	3501      	adds	r5, #1
 8002732:	68e3      	ldr	r3, [r4, #12]
 8002734:	9903      	ldr	r1, [sp, #12]
 8002736:	1a5b      	subs	r3, r3, r1
 8002738:	42ab      	cmp	r3, r5
 800273a:	dcf2      	bgt.n	8002722 <_printf_i+0x216>
 800273c:	e7eb      	b.n	8002716 <_printf_i+0x20a>
 800273e:	2500      	movs	r5, #0
 8002740:	f104 0619 	add.w	r6, r4, #25
 8002744:	e7f5      	b.n	8002732 <_printf_i+0x226>
 8002746:	bf00      	nop
 8002748:	080069e1 	.word	0x080069e1
 800274c:	080069f2 	.word	0x080069f2

08002750 <_scanf_float>:
 8002750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002754:	b087      	sub	sp, #28
 8002756:	4617      	mov	r7, r2
 8002758:	9303      	str	r3, [sp, #12]
 800275a:	688b      	ldr	r3, [r1, #8]
 800275c:	1e5a      	subs	r2, r3, #1
 800275e:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002762:	bf83      	ittte	hi
 8002764:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002768:	195b      	addhi	r3, r3, r5
 800276a:	9302      	strhi	r3, [sp, #8]
 800276c:	2300      	movls	r3, #0
 800276e:	bf86      	itte	hi
 8002770:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002774:	608b      	strhi	r3, [r1, #8]
 8002776:	9302      	strls	r3, [sp, #8]
 8002778:	680b      	ldr	r3, [r1, #0]
 800277a:	468b      	mov	fp, r1
 800277c:	2500      	movs	r5, #0
 800277e:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002782:	f84b 3b1c 	str.w	r3, [fp], #28
 8002786:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800278a:	4680      	mov	r8, r0
 800278c:	460c      	mov	r4, r1
 800278e:	465e      	mov	r6, fp
 8002790:	46aa      	mov	sl, r5
 8002792:	46a9      	mov	r9, r5
 8002794:	9501      	str	r5, [sp, #4]
 8002796:	68a2      	ldr	r2, [r4, #8]
 8002798:	b152      	cbz	r2, 80027b0 <_scanf_float+0x60>
 800279a:	683b      	ldr	r3, [r7, #0]
 800279c:	781b      	ldrb	r3, [r3, #0]
 800279e:	2b4e      	cmp	r3, #78	; 0x4e
 80027a0:	d864      	bhi.n	800286c <_scanf_float+0x11c>
 80027a2:	2b40      	cmp	r3, #64	; 0x40
 80027a4:	d83c      	bhi.n	8002820 <_scanf_float+0xd0>
 80027a6:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 80027aa:	b2c8      	uxtb	r0, r1
 80027ac:	280e      	cmp	r0, #14
 80027ae:	d93a      	bls.n	8002826 <_scanf_float+0xd6>
 80027b0:	f1b9 0f00 	cmp.w	r9, #0
 80027b4:	d003      	beq.n	80027be <_scanf_float+0x6e>
 80027b6:	6823      	ldr	r3, [r4, #0]
 80027b8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80027bc:	6023      	str	r3, [r4, #0]
 80027be:	f10a 3aff 	add.w	sl, sl, #4294967295
 80027c2:	f1ba 0f01 	cmp.w	sl, #1
 80027c6:	f200 8113 	bhi.w	80029f0 <_scanf_float+0x2a0>
 80027ca:	455e      	cmp	r6, fp
 80027cc:	f200 8105 	bhi.w	80029da <_scanf_float+0x28a>
 80027d0:	2501      	movs	r5, #1
 80027d2:	4628      	mov	r0, r5
 80027d4:	b007      	add	sp, #28
 80027d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027da:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80027de:	2a0d      	cmp	r2, #13
 80027e0:	d8e6      	bhi.n	80027b0 <_scanf_float+0x60>
 80027e2:	a101      	add	r1, pc, #4	; (adr r1, 80027e8 <_scanf_float+0x98>)
 80027e4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80027e8:	08002927 	.word	0x08002927
 80027ec:	080027b1 	.word	0x080027b1
 80027f0:	080027b1 	.word	0x080027b1
 80027f4:	080027b1 	.word	0x080027b1
 80027f8:	08002987 	.word	0x08002987
 80027fc:	0800295f 	.word	0x0800295f
 8002800:	080027b1 	.word	0x080027b1
 8002804:	080027b1 	.word	0x080027b1
 8002808:	08002935 	.word	0x08002935
 800280c:	080027b1 	.word	0x080027b1
 8002810:	080027b1 	.word	0x080027b1
 8002814:	080027b1 	.word	0x080027b1
 8002818:	080027b1 	.word	0x080027b1
 800281c:	080028ed 	.word	0x080028ed
 8002820:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002824:	e7db      	b.n	80027de <_scanf_float+0x8e>
 8002826:	290e      	cmp	r1, #14
 8002828:	d8c2      	bhi.n	80027b0 <_scanf_float+0x60>
 800282a:	a001      	add	r0, pc, #4	; (adr r0, 8002830 <_scanf_float+0xe0>)
 800282c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002830:	080028df 	.word	0x080028df
 8002834:	080027b1 	.word	0x080027b1
 8002838:	080028df 	.word	0x080028df
 800283c:	08002973 	.word	0x08002973
 8002840:	080027b1 	.word	0x080027b1
 8002844:	0800288d 	.word	0x0800288d
 8002848:	080028c9 	.word	0x080028c9
 800284c:	080028c9 	.word	0x080028c9
 8002850:	080028c9 	.word	0x080028c9
 8002854:	080028c9 	.word	0x080028c9
 8002858:	080028c9 	.word	0x080028c9
 800285c:	080028c9 	.word	0x080028c9
 8002860:	080028c9 	.word	0x080028c9
 8002864:	080028c9 	.word	0x080028c9
 8002868:	080028c9 	.word	0x080028c9
 800286c:	2b6e      	cmp	r3, #110	; 0x6e
 800286e:	d809      	bhi.n	8002884 <_scanf_float+0x134>
 8002870:	2b60      	cmp	r3, #96	; 0x60
 8002872:	d8b2      	bhi.n	80027da <_scanf_float+0x8a>
 8002874:	2b54      	cmp	r3, #84	; 0x54
 8002876:	d077      	beq.n	8002968 <_scanf_float+0x218>
 8002878:	2b59      	cmp	r3, #89	; 0x59
 800287a:	d199      	bne.n	80027b0 <_scanf_float+0x60>
 800287c:	2d07      	cmp	r5, #7
 800287e:	d197      	bne.n	80027b0 <_scanf_float+0x60>
 8002880:	2508      	movs	r5, #8
 8002882:	e029      	b.n	80028d8 <_scanf_float+0x188>
 8002884:	2b74      	cmp	r3, #116	; 0x74
 8002886:	d06f      	beq.n	8002968 <_scanf_float+0x218>
 8002888:	2b79      	cmp	r3, #121	; 0x79
 800288a:	e7f6      	b.n	800287a <_scanf_float+0x12a>
 800288c:	6821      	ldr	r1, [r4, #0]
 800288e:	05c8      	lsls	r0, r1, #23
 8002890:	d51a      	bpl.n	80028c8 <_scanf_float+0x178>
 8002892:	9b02      	ldr	r3, [sp, #8]
 8002894:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002898:	6021      	str	r1, [r4, #0]
 800289a:	f109 0901 	add.w	r9, r9, #1
 800289e:	b11b      	cbz	r3, 80028a8 <_scanf_float+0x158>
 80028a0:	3b01      	subs	r3, #1
 80028a2:	3201      	adds	r2, #1
 80028a4:	9302      	str	r3, [sp, #8]
 80028a6:	60a2      	str	r2, [r4, #8]
 80028a8:	68a3      	ldr	r3, [r4, #8]
 80028aa:	3b01      	subs	r3, #1
 80028ac:	60a3      	str	r3, [r4, #8]
 80028ae:	6923      	ldr	r3, [r4, #16]
 80028b0:	3301      	adds	r3, #1
 80028b2:	6123      	str	r3, [r4, #16]
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	3b01      	subs	r3, #1
 80028b8:	2b00      	cmp	r3, #0
 80028ba:	607b      	str	r3, [r7, #4]
 80028bc:	f340 8084 	ble.w	80029c8 <_scanf_float+0x278>
 80028c0:	683b      	ldr	r3, [r7, #0]
 80028c2:	3301      	adds	r3, #1
 80028c4:	603b      	str	r3, [r7, #0]
 80028c6:	e766      	b.n	8002796 <_scanf_float+0x46>
 80028c8:	eb1a 0f05 	cmn.w	sl, r5
 80028cc:	f47f af70 	bne.w	80027b0 <_scanf_float+0x60>
 80028d0:	6822      	ldr	r2, [r4, #0]
 80028d2:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 80028d6:	6022      	str	r2, [r4, #0]
 80028d8:	f806 3b01 	strb.w	r3, [r6], #1
 80028dc:	e7e4      	b.n	80028a8 <_scanf_float+0x158>
 80028de:	6822      	ldr	r2, [r4, #0]
 80028e0:	0610      	lsls	r0, r2, #24
 80028e2:	f57f af65 	bpl.w	80027b0 <_scanf_float+0x60>
 80028e6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80028ea:	e7f4      	b.n	80028d6 <_scanf_float+0x186>
 80028ec:	f1ba 0f00 	cmp.w	sl, #0
 80028f0:	d10e      	bne.n	8002910 <_scanf_float+0x1c0>
 80028f2:	f1b9 0f00 	cmp.w	r9, #0
 80028f6:	d10e      	bne.n	8002916 <_scanf_float+0x1c6>
 80028f8:	6822      	ldr	r2, [r4, #0]
 80028fa:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80028fe:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002902:	d108      	bne.n	8002916 <_scanf_float+0x1c6>
 8002904:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002908:	6022      	str	r2, [r4, #0]
 800290a:	f04f 0a01 	mov.w	sl, #1
 800290e:	e7e3      	b.n	80028d8 <_scanf_float+0x188>
 8002910:	f1ba 0f02 	cmp.w	sl, #2
 8002914:	d055      	beq.n	80029c2 <_scanf_float+0x272>
 8002916:	2d01      	cmp	r5, #1
 8002918:	d002      	beq.n	8002920 <_scanf_float+0x1d0>
 800291a:	2d04      	cmp	r5, #4
 800291c:	f47f af48 	bne.w	80027b0 <_scanf_float+0x60>
 8002920:	3501      	adds	r5, #1
 8002922:	b2ed      	uxtb	r5, r5
 8002924:	e7d8      	b.n	80028d8 <_scanf_float+0x188>
 8002926:	f1ba 0f01 	cmp.w	sl, #1
 800292a:	f47f af41 	bne.w	80027b0 <_scanf_float+0x60>
 800292e:	f04f 0a02 	mov.w	sl, #2
 8002932:	e7d1      	b.n	80028d8 <_scanf_float+0x188>
 8002934:	b97d      	cbnz	r5, 8002956 <_scanf_float+0x206>
 8002936:	f1b9 0f00 	cmp.w	r9, #0
 800293a:	f47f af3c 	bne.w	80027b6 <_scanf_float+0x66>
 800293e:	6822      	ldr	r2, [r4, #0]
 8002940:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002944:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002948:	f47f af39 	bne.w	80027be <_scanf_float+0x6e>
 800294c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002950:	6022      	str	r2, [r4, #0]
 8002952:	2501      	movs	r5, #1
 8002954:	e7c0      	b.n	80028d8 <_scanf_float+0x188>
 8002956:	2d03      	cmp	r5, #3
 8002958:	d0e2      	beq.n	8002920 <_scanf_float+0x1d0>
 800295a:	2d05      	cmp	r5, #5
 800295c:	e7de      	b.n	800291c <_scanf_float+0x1cc>
 800295e:	2d02      	cmp	r5, #2
 8002960:	f47f af26 	bne.w	80027b0 <_scanf_float+0x60>
 8002964:	2503      	movs	r5, #3
 8002966:	e7b7      	b.n	80028d8 <_scanf_float+0x188>
 8002968:	2d06      	cmp	r5, #6
 800296a:	f47f af21 	bne.w	80027b0 <_scanf_float+0x60>
 800296e:	2507      	movs	r5, #7
 8002970:	e7b2      	b.n	80028d8 <_scanf_float+0x188>
 8002972:	6822      	ldr	r2, [r4, #0]
 8002974:	0591      	lsls	r1, r2, #22
 8002976:	f57f af1b 	bpl.w	80027b0 <_scanf_float+0x60>
 800297a:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800297e:	6022      	str	r2, [r4, #0]
 8002980:	f8cd 9004 	str.w	r9, [sp, #4]
 8002984:	e7a8      	b.n	80028d8 <_scanf_float+0x188>
 8002986:	6822      	ldr	r2, [r4, #0]
 8002988:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 800298c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002990:	d006      	beq.n	80029a0 <_scanf_float+0x250>
 8002992:	0550      	lsls	r0, r2, #21
 8002994:	f57f af0c 	bpl.w	80027b0 <_scanf_float+0x60>
 8002998:	f1b9 0f00 	cmp.w	r9, #0
 800299c:	f43f af0f 	beq.w	80027be <_scanf_float+0x6e>
 80029a0:	0591      	lsls	r1, r2, #22
 80029a2:	bf58      	it	pl
 80029a4:	9901      	ldrpl	r1, [sp, #4]
 80029a6:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80029aa:	bf58      	it	pl
 80029ac:	eba9 0101 	subpl.w	r1, r9, r1
 80029b0:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 80029b4:	bf58      	it	pl
 80029b6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80029ba:	6022      	str	r2, [r4, #0]
 80029bc:	f04f 0900 	mov.w	r9, #0
 80029c0:	e78a      	b.n	80028d8 <_scanf_float+0x188>
 80029c2:	f04f 0a03 	mov.w	sl, #3
 80029c6:	e787      	b.n	80028d8 <_scanf_float+0x188>
 80029c8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80029cc:	4639      	mov	r1, r7
 80029ce:	4640      	mov	r0, r8
 80029d0:	4798      	blx	r3
 80029d2:	2800      	cmp	r0, #0
 80029d4:	f43f aedf 	beq.w	8002796 <_scanf_float+0x46>
 80029d8:	e6ea      	b.n	80027b0 <_scanf_float+0x60>
 80029da:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029de:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029e2:	463a      	mov	r2, r7
 80029e4:	4640      	mov	r0, r8
 80029e6:	4798      	blx	r3
 80029e8:	6923      	ldr	r3, [r4, #16]
 80029ea:	3b01      	subs	r3, #1
 80029ec:	6123      	str	r3, [r4, #16]
 80029ee:	e6ec      	b.n	80027ca <_scanf_float+0x7a>
 80029f0:	1e6b      	subs	r3, r5, #1
 80029f2:	2b06      	cmp	r3, #6
 80029f4:	d825      	bhi.n	8002a42 <_scanf_float+0x2f2>
 80029f6:	2d02      	cmp	r5, #2
 80029f8:	d836      	bhi.n	8002a68 <_scanf_float+0x318>
 80029fa:	455e      	cmp	r6, fp
 80029fc:	f67f aee8 	bls.w	80027d0 <_scanf_float+0x80>
 8002a00:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a04:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a08:	463a      	mov	r2, r7
 8002a0a:	4640      	mov	r0, r8
 8002a0c:	4798      	blx	r3
 8002a0e:	6923      	ldr	r3, [r4, #16]
 8002a10:	3b01      	subs	r3, #1
 8002a12:	6123      	str	r3, [r4, #16]
 8002a14:	e7f1      	b.n	80029fa <_scanf_float+0x2aa>
 8002a16:	9802      	ldr	r0, [sp, #8]
 8002a18:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a1c:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002a20:	9002      	str	r0, [sp, #8]
 8002a22:	463a      	mov	r2, r7
 8002a24:	4640      	mov	r0, r8
 8002a26:	4798      	blx	r3
 8002a28:	6923      	ldr	r3, [r4, #16]
 8002a2a:	3b01      	subs	r3, #1
 8002a2c:	6123      	str	r3, [r4, #16]
 8002a2e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002a32:	fa5f fa8a 	uxtb.w	sl, sl
 8002a36:	f1ba 0f02 	cmp.w	sl, #2
 8002a3a:	d1ec      	bne.n	8002a16 <_scanf_float+0x2c6>
 8002a3c:	3d03      	subs	r5, #3
 8002a3e:	b2ed      	uxtb	r5, r5
 8002a40:	1b76      	subs	r6, r6, r5
 8002a42:	6823      	ldr	r3, [r4, #0]
 8002a44:	05da      	lsls	r2, r3, #23
 8002a46:	d52f      	bpl.n	8002aa8 <_scanf_float+0x358>
 8002a48:	055b      	lsls	r3, r3, #21
 8002a4a:	d510      	bpl.n	8002a6e <_scanf_float+0x31e>
 8002a4c:	455e      	cmp	r6, fp
 8002a4e:	f67f aebf 	bls.w	80027d0 <_scanf_float+0x80>
 8002a52:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a56:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002a5a:	463a      	mov	r2, r7
 8002a5c:	4640      	mov	r0, r8
 8002a5e:	4798      	blx	r3
 8002a60:	6923      	ldr	r3, [r4, #16]
 8002a62:	3b01      	subs	r3, #1
 8002a64:	6123      	str	r3, [r4, #16]
 8002a66:	e7f1      	b.n	8002a4c <_scanf_float+0x2fc>
 8002a68:	46aa      	mov	sl, r5
 8002a6a:	9602      	str	r6, [sp, #8]
 8002a6c:	e7df      	b.n	8002a2e <_scanf_float+0x2de>
 8002a6e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002a72:	6923      	ldr	r3, [r4, #16]
 8002a74:	2965      	cmp	r1, #101	; 0x65
 8002a76:	f103 33ff 	add.w	r3, r3, #4294967295
 8002a7a:	f106 35ff 	add.w	r5, r6, #4294967295
 8002a7e:	6123      	str	r3, [r4, #16]
 8002a80:	d00c      	beq.n	8002a9c <_scanf_float+0x34c>
 8002a82:	2945      	cmp	r1, #69	; 0x45
 8002a84:	d00a      	beq.n	8002a9c <_scanf_float+0x34c>
 8002a86:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002a8a:	463a      	mov	r2, r7
 8002a8c:	4640      	mov	r0, r8
 8002a8e:	4798      	blx	r3
 8002a90:	6923      	ldr	r3, [r4, #16]
 8002a92:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002a96:	3b01      	subs	r3, #1
 8002a98:	1eb5      	subs	r5, r6, #2
 8002a9a:	6123      	str	r3, [r4, #16]
 8002a9c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002aa0:	463a      	mov	r2, r7
 8002aa2:	4640      	mov	r0, r8
 8002aa4:	4798      	blx	r3
 8002aa6:	462e      	mov	r6, r5
 8002aa8:	6825      	ldr	r5, [r4, #0]
 8002aaa:	f015 0510 	ands.w	r5, r5, #16
 8002aae:	d158      	bne.n	8002b62 <_scanf_float+0x412>
 8002ab0:	7035      	strb	r5, [r6, #0]
 8002ab2:	6823      	ldr	r3, [r4, #0]
 8002ab4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002ab8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002abc:	d11c      	bne.n	8002af8 <_scanf_float+0x3a8>
 8002abe:	9b01      	ldr	r3, [sp, #4]
 8002ac0:	454b      	cmp	r3, r9
 8002ac2:	eba3 0209 	sub.w	r2, r3, r9
 8002ac6:	d124      	bne.n	8002b12 <_scanf_float+0x3c2>
 8002ac8:	2200      	movs	r2, #0
 8002aca:	4659      	mov	r1, fp
 8002acc:	4640      	mov	r0, r8
 8002ace:	f002 fc4f 	bl	8005370 <_strtod_r>
 8002ad2:	9b03      	ldr	r3, [sp, #12]
 8002ad4:	6821      	ldr	r1, [r4, #0]
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	f011 0f02 	tst.w	r1, #2
 8002adc:	ec57 6b10 	vmov	r6, r7, d0
 8002ae0:	f103 0204 	add.w	r2, r3, #4
 8002ae4:	d020      	beq.n	8002b28 <_scanf_float+0x3d8>
 8002ae6:	9903      	ldr	r1, [sp, #12]
 8002ae8:	600a      	str	r2, [r1, #0]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	e9c3 6700 	strd	r6, r7, [r3]
 8002af0:	68e3      	ldr	r3, [r4, #12]
 8002af2:	3301      	adds	r3, #1
 8002af4:	60e3      	str	r3, [r4, #12]
 8002af6:	e66c      	b.n	80027d2 <_scanf_float+0x82>
 8002af8:	9b04      	ldr	r3, [sp, #16]
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d0e4      	beq.n	8002ac8 <_scanf_float+0x378>
 8002afe:	9905      	ldr	r1, [sp, #20]
 8002b00:	230a      	movs	r3, #10
 8002b02:	462a      	mov	r2, r5
 8002b04:	3101      	adds	r1, #1
 8002b06:	4640      	mov	r0, r8
 8002b08:	f002 fcba 	bl	8005480 <_strtol_r>
 8002b0c:	9b04      	ldr	r3, [sp, #16]
 8002b0e:	9e05      	ldr	r6, [sp, #20]
 8002b10:	1ac2      	subs	r2, r0, r3
 8002b12:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002b16:	429e      	cmp	r6, r3
 8002b18:	bf28      	it	cs
 8002b1a:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002b1e:	4912      	ldr	r1, [pc, #72]	; (8002b68 <_scanf_float+0x418>)
 8002b20:	4630      	mov	r0, r6
 8002b22:	f000 f8e7 	bl	8002cf4 <siprintf>
 8002b26:	e7cf      	b.n	8002ac8 <_scanf_float+0x378>
 8002b28:	f011 0f04 	tst.w	r1, #4
 8002b2c:	9903      	ldr	r1, [sp, #12]
 8002b2e:	600a      	str	r2, [r1, #0]
 8002b30:	d1db      	bne.n	8002aea <_scanf_float+0x39a>
 8002b32:	f8d3 8000 	ldr.w	r8, [r3]
 8002b36:	ee10 2a10 	vmov	r2, s0
 8002b3a:	ee10 0a10 	vmov	r0, s0
 8002b3e:	463b      	mov	r3, r7
 8002b40:	4639      	mov	r1, r7
 8002b42:	f7fd fff3 	bl	8000b2c <__aeabi_dcmpun>
 8002b46:	b128      	cbz	r0, 8002b54 <_scanf_float+0x404>
 8002b48:	4808      	ldr	r0, [pc, #32]	; (8002b6c <_scanf_float+0x41c>)
 8002b4a:	f000 f9d7 	bl	8002efc <nanf>
 8002b4e:	ed88 0a00 	vstr	s0, [r8]
 8002b52:	e7cd      	b.n	8002af0 <_scanf_float+0x3a0>
 8002b54:	4630      	mov	r0, r6
 8002b56:	4639      	mov	r1, r7
 8002b58:	f7fe f846 	bl	8000be8 <__aeabi_d2f>
 8002b5c:	f8c8 0000 	str.w	r0, [r8]
 8002b60:	e7c6      	b.n	8002af0 <_scanf_float+0x3a0>
 8002b62:	2500      	movs	r5, #0
 8002b64:	e635      	b.n	80027d2 <_scanf_float+0x82>
 8002b66:	bf00      	nop
 8002b68:	08006a03 	.word	0x08006a03
 8002b6c:	08006c94 	.word	0x08006c94

08002b70 <std>:
 8002b70:	2300      	movs	r3, #0
 8002b72:	b510      	push	{r4, lr}
 8002b74:	4604      	mov	r4, r0
 8002b76:	e9c0 3300 	strd	r3, r3, [r0]
 8002b7a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002b7e:	6083      	str	r3, [r0, #8]
 8002b80:	8181      	strh	r1, [r0, #12]
 8002b82:	6643      	str	r3, [r0, #100]	; 0x64
 8002b84:	81c2      	strh	r2, [r0, #14]
 8002b86:	6183      	str	r3, [r0, #24]
 8002b88:	4619      	mov	r1, r3
 8002b8a:	2208      	movs	r2, #8
 8002b8c:	305c      	adds	r0, #92	; 0x5c
 8002b8e:	f000 f935 	bl	8002dfc <memset>
 8002b92:	4b0d      	ldr	r3, [pc, #52]	; (8002bc8 <std+0x58>)
 8002b94:	6263      	str	r3, [r4, #36]	; 0x24
 8002b96:	4b0d      	ldr	r3, [pc, #52]	; (8002bcc <std+0x5c>)
 8002b98:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b9a:	4b0d      	ldr	r3, [pc, #52]	; (8002bd0 <std+0x60>)
 8002b9c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002b9e:	4b0d      	ldr	r3, [pc, #52]	; (8002bd4 <std+0x64>)
 8002ba0:	6323      	str	r3, [r4, #48]	; 0x30
 8002ba2:	4b0d      	ldr	r3, [pc, #52]	; (8002bd8 <std+0x68>)
 8002ba4:	6224      	str	r4, [r4, #32]
 8002ba6:	429c      	cmp	r4, r3
 8002ba8:	d006      	beq.n	8002bb8 <std+0x48>
 8002baa:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8002bae:	4294      	cmp	r4, r2
 8002bb0:	d002      	beq.n	8002bb8 <std+0x48>
 8002bb2:	33d0      	adds	r3, #208	; 0xd0
 8002bb4:	429c      	cmp	r4, r3
 8002bb6:	d105      	bne.n	8002bc4 <std+0x54>
 8002bb8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002bbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002bc0:	f000 b998 	b.w	8002ef4 <__retarget_lock_init_recursive>
 8002bc4:	bd10      	pop	{r4, pc}
 8002bc6:	bf00      	nop
 8002bc8:	08002d35 	.word	0x08002d35
 8002bcc:	08002d57 	.word	0x08002d57
 8002bd0:	08002d8f 	.word	0x08002d8f
 8002bd4:	08002db3 	.word	0x08002db3
 8002bd8:	20000604 	.word	0x20000604

08002bdc <stdio_exit_handler>:
 8002bdc:	4a02      	ldr	r2, [pc, #8]	; (8002be8 <stdio_exit_handler+0xc>)
 8002bde:	4903      	ldr	r1, [pc, #12]	; (8002bec <stdio_exit_handler+0x10>)
 8002be0:	4803      	ldr	r0, [pc, #12]	; (8002bf0 <stdio_exit_handler+0x14>)
 8002be2:	f000 b869 	b.w	8002cb8 <_fwalk_sglue>
 8002be6:	bf00      	nop
 8002be8:	20000008 	.word	0x20000008
 8002bec:	08005841 	.word	0x08005841
 8002bf0:	20000014 	.word	0x20000014

08002bf4 <cleanup_stdio>:
 8002bf4:	6841      	ldr	r1, [r0, #4]
 8002bf6:	4b0c      	ldr	r3, [pc, #48]	; (8002c28 <cleanup_stdio+0x34>)
 8002bf8:	4299      	cmp	r1, r3
 8002bfa:	b510      	push	{r4, lr}
 8002bfc:	4604      	mov	r4, r0
 8002bfe:	d001      	beq.n	8002c04 <cleanup_stdio+0x10>
 8002c00:	f002 fe1e 	bl	8005840 <_fflush_r>
 8002c04:	68a1      	ldr	r1, [r4, #8]
 8002c06:	4b09      	ldr	r3, [pc, #36]	; (8002c2c <cleanup_stdio+0x38>)
 8002c08:	4299      	cmp	r1, r3
 8002c0a:	d002      	beq.n	8002c12 <cleanup_stdio+0x1e>
 8002c0c:	4620      	mov	r0, r4
 8002c0e:	f002 fe17 	bl	8005840 <_fflush_r>
 8002c12:	68e1      	ldr	r1, [r4, #12]
 8002c14:	4b06      	ldr	r3, [pc, #24]	; (8002c30 <cleanup_stdio+0x3c>)
 8002c16:	4299      	cmp	r1, r3
 8002c18:	d004      	beq.n	8002c24 <cleanup_stdio+0x30>
 8002c1a:	4620      	mov	r0, r4
 8002c1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c20:	f002 be0e 	b.w	8005840 <_fflush_r>
 8002c24:	bd10      	pop	{r4, pc}
 8002c26:	bf00      	nop
 8002c28:	20000604 	.word	0x20000604
 8002c2c:	2000066c 	.word	0x2000066c
 8002c30:	200006d4 	.word	0x200006d4

08002c34 <global_stdio_init.part.0>:
 8002c34:	b510      	push	{r4, lr}
 8002c36:	4b0b      	ldr	r3, [pc, #44]	; (8002c64 <global_stdio_init.part.0+0x30>)
 8002c38:	4c0b      	ldr	r4, [pc, #44]	; (8002c68 <global_stdio_init.part.0+0x34>)
 8002c3a:	4a0c      	ldr	r2, [pc, #48]	; (8002c6c <global_stdio_init.part.0+0x38>)
 8002c3c:	601a      	str	r2, [r3, #0]
 8002c3e:	4620      	mov	r0, r4
 8002c40:	2200      	movs	r2, #0
 8002c42:	2104      	movs	r1, #4
 8002c44:	f7ff ff94 	bl	8002b70 <std>
 8002c48:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002c4c:	2201      	movs	r2, #1
 8002c4e:	2109      	movs	r1, #9
 8002c50:	f7ff ff8e 	bl	8002b70 <std>
 8002c54:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8002c58:	2202      	movs	r2, #2
 8002c5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c5e:	2112      	movs	r1, #18
 8002c60:	f7ff bf86 	b.w	8002b70 <std>
 8002c64:	2000073c 	.word	0x2000073c
 8002c68:	20000604 	.word	0x20000604
 8002c6c:	08002bdd 	.word	0x08002bdd

08002c70 <__sfp_lock_acquire>:
 8002c70:	4801      	ldr	r0, [pc, #4]	; (8002c78 <__sfp_lock_acquire+0x8>)
 8002c72:	f000 b940 	b.w	8002ef6 <__retarget_lock_acquire_recursive>
 8002c76:	bf00      	nop
 8002c78:	20000745 	.word	0x20000745

08002c7c <__sfp_lock_release>:
 8002c7c:	4801      	ldr	r0, [pc, #4]	; (8002c84 <__sfp_lock_release+0x8>)
 8002c7e:	f000 b93b 	b.w	8002ef8 <__retarget_lock_release_recursive>
 8002c82:	bf00      	nop
 8002c84:	20000745 	.word	0x20000745

08002c88 <__sinit>:
 8002c88:	b510      	push	{r4, lr}
 8002c8a:	4604      	mov	r4, r0
 8002c8c:	f7ff fff0 	bl	8002c70 <__sfp_lock_acquire>
 8002c90:	6a23      	ldr	r3, [r4, #32]
 8002c92:	b11b      	cbz	r3, 8002c9c <__sinit+0x14>
 8002c94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c98:	f7ff bff0 	b.w	8002c7c <__sfp_lock_release>
 8002c9c:	4b04      	ldr	r3, [pc, #16]	; (8002cb0 <__sinit+0x28>)
 8002c9e:	6223      	str	r3, [r4, #32]
 8002ca0:	4b04      	ldr	r3, [pc, #16]	; (8002cb4 <__sinit+0x2c>)
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	d1f5      	bne.n	8002c94 <__sinit+0xc>
 8002ca8:	f7ff ffc4 	bl	8002c34 <global_stdio_init.part.0>
 8002cac:	e7f2      	b.n	8002c94 <__sinit+0xc>
 8002cae:	bf00      	nop
 8002cb0:	08002bf5 	.word	0x08002bf5
 8002cb4:	2000073c 	.word	0x2000073c

08002cb8 <_fwalk_sglue>:
 8002cb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002cbc:	4607      	mov	r7, r0
 8002cbe:	4688      	mov	r8, r1
 8002cc0:	4614      	mov	r4, r2
 8002cc2:	2600      	movs	r6, #0
 8002cc4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002cc8:	f1b9 0901 	subs.w	r9, r9, #1
 8002ccc:	d505      	bpl.n	8002cda <_fwalk_sglue+0x22>
 8002cce:	6824      	ldr	r4, [r4, #0]
 8002cd0:	2c00      	cmp	r4, #0
 8002cd2:	d1f7      	bne.n	8002cc4 <_fwalk_sglue+0xc>
 8002cd4:	4630      	mov	r0, r6
 8002cd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002cda:	89ab      	ldrh	r3, [r5, #12]
 8002cdc:	2b01      	cmp	r3, #1
 8002cde:	d907      	bls.n	8002cf0 <_fwalk_sglue+0x38>
 8002ce0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002ce4:	3301      	adds	r3, #1
 8002ce6:	d003      	beq.n	8002cf0 <_fwalk_sglue+0x38>
 8002ce8:	4629      	mov	r1, r5
 8002cea:	4638      	mov	r0, r7
 8002cec:	47c0      	blx	r8
 8002cee:	4306      	orrs	r6, r0
 8002cf0:	3568      	adds	r5, #104	; 0x68
 8002cf2:	e7e9      	b.n	8002cc8 <_fwalk_sglue+0x10>

08002cf4 <siprintf>:
 8002cf4:	b40e      	push	{r1, r2, r3}
 8002cf6:	b500      	push	{lr}
 8002cf8:	b09c      	sub	sp, #112	; 0x70
 8002cfa:	ab1d      	add	r3, sp, #116	; 0x74
 8002cfc:	9002      	str	r0, [sp, #8]
 8002cfe:	9006      	str	r0, [sp, #24]
 8002d00:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002d04:	4809      	ldr	r0, [pc, #36]	; (8002d2c <siprintf+0x38>)
 8002d06:	9107      	str	r1, [sp, #28]
 8002d08:	9104      	str	r1, [sp, #16]
 8002d0a:	4909      	ldr	r1, [pc, #36]	; (8002d30 <siprintf+0x3c>)
 8002d0c:	f853 2b04 	ldr.w	r2, [r3], #4
 8002d10:	9105      	str	r1, [sp, #20]
 8002d12:	6800      	ldr	r0, [r0, #0]
 8002d14:	9301      	str	r3, [sp, #4]
 8002d16:	a902      	add	r1, sp, #8
 8002d18:	f002 fc0e 	bl	8005538 <_svfiprintf_r>
 8002d1c:	9b02      	ldr	r3, [sp, #8]
 8002d1e:	2200      	movs	r2, #0
 8002d20:	701a      	strb	r2, [r3, #0]
 8002d22:	b01c      	add	sp, #112	; 0x70
 8002d24:	f85d eb04 	ldr.w	lr, [sp], #4
 8002d28:	b003      	add	sp, #12
 8002d2a:	4770      	bx	lr
 8002d2c:	20000060 	.word	0x20000060
 8002d30:	ffff0208 	.word	0xffff0208

08002d34 <__sread>:
 8002d34:	b510      	push	{r4, lr}
 8002d36:	460c      	mov	r4, r1
 8002d38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d3c:	f000 f88c 	bl	8002e58 <_read_r>
 8002d40:	2800      	cmp	r0, #0
 8002d42:	bfab      	itete	ge
 8002d44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002d46:	89a3      	ldrhlt	r3, [r4, #12]
 8002d48:	181b      	addge	r3, r3, r0
 8002d4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002d4e:	bfac      	ite	ge
 8002d50:	6563      	strge	r3, [r4, #84]	; 0x54
 8002d52:	81a3      	strhlt	r3, [r4, #12]
 8002d54:	bd10      	pop	{r4, pc}

08002d56 <__swrite>:
 8002d56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d5a:	461f      	mov	r7, r3
 8002d5c:	898b      	ldrh	r3, [r1, #12]
 8002d5e:	05db      	lsls	r3, r3, #23
 8002d60:	4605      	mov	r5, r0
 8002d62:	460c      	mov	r4, r1
 8002d64:	4616      	mov	r6, r2
 8002d66:	d505      	bpl.n	8002d74 <__swrite+0x1e>
 8002d68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d6c:	2302      	movs	r3, #2
 8002d6e:	2200      	movs	r2, #0
 8002d70:	f000 f860 	bl	8002e34 <_lseek_r>
 8002d74:	89a3      	ldrh	r3, [r4, #12]
 8002d76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002d7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002d7e:	81a3      	strh	r3, [r4, #12]
 8002d80:	4632      	mov	r2, r6
 8002d82:	463b      	mov	r3, r7
 8002d84:	4628      	mov	r0, r5
 8002d86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002d8a:	f000 b877 	b.w	8002e7c <_write_r>

08002d8e <__sseek>:
 8002d8e:	b510      	push	{r4, lr}
 8002d90:	460c      	mov	r4, r1
 8002d92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d96:	f000 f84d 	bl	8002e34 <_lseek_r>
 8002d9a:	1c43      	adds	r3, r0, #1
 8002d9c:	89a3      	ldrh	r3, [r4, #12]
 8002d9e:	bf15      	itete	ne
 8002da0:	6560      	strne	r0, [r4, #84]	; 0x54
 8002da2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002da6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002daa:	81a3      	strheq	r3, [r4, #12]
 8002dac:	bf18      	it	ne
 8002dae:	81a3      	strhne	r3, [r4, #12]
 8002db0:	bd10      	pop	{r4, pc}

08002db2 <__sclose>:
 8002db2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002db6:	f000 b82d 	b.w	8002e14 <_close_r>
	...

08002dbc <_vsiprintf_r>:
 8002dbc:	b500      	push	{lr}
 8002dbe:	b09b      	sub	sp, #108	; 0x6c
 8002dc0:	9100      	str	r1, [sp, #0]
 8002dc2:	9104      	str	r1, [sp, #16]
 8002dc4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002dc8:	9105      	str	r1, [sp, #20]
 8002dca:	9102      	str	r1, [sp, #8]
 8002dcc:	4905      	ldr	r1, [pc, #20]	; (8002de4 <_vsiprintf_r+0x28>)
 8002dce:	9103      	str	r1, [sp, #12]
 8002dd0:	4669      	mov	r1, sp
 8002dd2:	f002 fbb1 	bl	8005538 <_svfiprintf_r>
 8002dd6:	9b00      	ldr	r3, [sp, #0]
 8002dd8:	2200      	movs	r2, #0
 8002dda:	701a      	strb	r2, [r3, #0]
 8002ddc:	b01b      	add	sp, #108	; 0x6c
 8002dde:	f85d fb04 	ldr.w	pc, [sp], #4
 8002de2:	bf00      	nop
 8002de4:	ffff0208 	.word	0xffff0208

08002de8 <vsiprintf>:
 8002de8:	4613      	mov	r3, r2
 8002dea:	460a      	mov	r2, r1
 8002dec:	4601      	mov	r1, r0
 8002dee:	4802      	ldr	r0, [pc, #8]	; (8002df8 <vsiprintf+0x10>)
 8002df0:	6800      	ldr	r0, [r0, #0]
 8002df2:	f7ff bfe3 	b.w	8002dbc <_vsiprintf_r>
 8002df6:	bf00      	nop
 8002df8:	20000060 	.word	0x20000060

08002dfc <memset>:
 8002dfc:	4402      	add	r2, r0
 8002dfe:	4603      	mov	r3, r0
 8002e00:	4293      	cmp	r3, r2
 8002e02:	d100      	bne.n	8002e06 <memset+0xa>
 8002e04:	4770      	bx	lr
 8002e06:	f803 1b01 	strb.w	r1, [r3], #1
 8002e0a:	e7f9      	b.n	8002e00 <memset+0x4>

08002e0c <_localeconv_r>:
 8002e0c:	4800      	ldr	r0, [pc, #0]	; (8002e10 <_localeconv_r+0x4>)
 8002e0e:	4770      	bx	lr
 8002e10:	20000154 	.word	0x20000154

08002e14 <_close_r>:
 8002e14:	b538      	push	{r3, r4, r5, lr}
 8002e16:	4d06      	ldr	r5, [pc, #24]	; (8002e30 <_close_r+0x1c>)
 8002e18:	2300      	movs	r3, #0
 8002e1a:	4604      	mov	r4, r0
 8002e1c:	4608      	mov	r0, r1
 8002e1e:	602b      	str	r3, [r5, #0]
 8002e20:	f7fe fdbb 	bl	800199a <_close>
 8002e24:	1c43      	adds	r3, r0, #1
 8002e26:	d102      	bne.n	8002e2e <_close_r+0x1a>
 8002e28:	682b      	ldr	r3, [r5, #0]
 8002e2a:	b103      	cbz	r3, 8002e2e <_close_r+0x1a>
 8002e2c:	6023      	str	r3, [r4, #0]
 8002e2e:	bd38      	pop	{r3, r4, r5, pc}
 8002e30:	20000740 	.word	0x20000740

08002e34 <_lseek_r>:
 8002e34:	b538      	push	{r3, r4, r5, lr}
 8002e36:	4d07      	ldr	r5, [pc, #28]	; (8002e54 <_lseek_r+0x20>)
 8002e38:	4604      	mov	r4, r0
 8002e3a:	4608      	mov	r0, r1
 8002e3c:	4611      	mov	r1, r2
 8002e3e:	2200      	movs	r2, #0
 8002e40:	602a      	str	r2, [r5, #0]
 8002e42:	461a      	mov	r2, r3
 8002e44:	f7fe fdd0 	bl	80019e8 <_lseek>
 8002e48:	1c43      	adds	r3, r0, #1
 8002e4a:	d102      	bne.n	8002e52 <_lseek_r+0x1e>
 8002e4c:	682b      	ldr	r3, [r5, #0]
 8002e4e:	b103      	cbz	r3, 8002e52 <_lseek_r+0x1e>
 8002e50:	6023      	str	r3, [r4, #0]
 8002e52:	bd38      	pop	{r3, r4, r5, pc}
 8002e54:	20000740 	.word	0x20000740

08002e58 <_read_r>:
 8002e58:	b538      	push	{r3, r4, r5, lr}
 8002e5a:	4d07      	ldr	r5, [pc, #28]	; (8002e78 <_read_r+0x20>)
 8002e5c:	4604      	mov	r4, r0
 8002e5e:	4608      	mov	r0, r1
 8002e60:	4611      	mov	r1, r2
 8002e62:	2200      	movs	r2, #0
 8002e64:	602a      	str	r2, [r5, #0]
 8002e66:	461a      	mov	r2, r3
 8002e68:	f7fe fd5e 	bl	8001928 <_read>
 8002e6c:	1c43      	adds	r3, r0, #1
 8002e6e:	d102      	bne.n	8002e76 <_read_r+0x1e>
 8002e70:	682b      	ldr	r3, [r5, #0]
 8002e72:	b103      	cbz	r3, 8002e76 <_read_r+0x1e>
 8002e74:	6023      	str	r3, [r4, #0]
 8002e76:	bd38      	pop	{r3, r4, r5, pc}
 8002e78:	20000740 	.word	0x20000740

08002e7c <_write_r>:
 8002e7c:	b538      	push	{r3, r4, r5, lr}
 8002e7e:	4d07      	ldr	r5, [pc, #28]	; (8002e9c <_write_r+0x20>)
 8002e80:	4604      	mov	r4, r0
 8002e82:	4608      	mov	r0, r1
 8002e84:	4611      	mov	r1, r2
 8002e86:	2200      	movs	r2, #0
 8002e88:	602a      	str	r2, [r5, #0]
 8002e8a:	461a      	mov	r2, r3
 8002e8c:	f7fe fd69 	bl	8001962 <_write>
 8002e90:	1c43      	adds	r3, r0, #1
 8002e92:	d102      	bne.n	8002e9a <_write_r+0x1e>
 8002e94:	682b      	ldr	r3, [r5, #0]
 8002e96:	b103      	cbz	r3, 8002e9a <_write_r+0x1e>
 8002e98:	6023      	str	r3, [r4, #0]
 8002e9a:	bd38      	pop	{r3, r4, r5, pc}
 8002e9c:	20000740 	.word	0x20000740

08002ea0 <__errno>:
 8002ea0:	4b01      	ldr	r3, [pc, #4]	; (8002ea8 <__errno+0x8>)
 8002ea2:	6818      	ldr	r0, [r3, #0]
 8002ea4:	4770      	bx	lr
 8002ea6:	bf00      	nop
 8002ea8:	20000060 	.word	0x20000060

08002eac <__libc_init_array>:
 8002eac:	b570      	push	{r4, r5, r6, lr}
 8002eae:	4d0d      	ldr	r5, [pc, #52]	; (8002ee4 <__libc_init_array+0x38>)
 8002eb0:	4c0d      	ldr	r4, [pc, #52]	; (8002ee8 <__libc_init_array+0x3c>)
 8002eb2:	1b64      	subs	r4, r4, r5
 8002eb4:	10a4      	asrs	r4, r4, #2
 8002eb6:	2600      	movs	r6, #0
 8002eb8:	42a6      	cmp	r6, r4
 8002eba:	d109      	bne.n	8002ed0 <__libc_init_array+0x24>
 8002ebc:	4d0b      	ldr	r5, [pc, #44]	; (8002eec <__libc_init_array+0x40>)
 8002ebe:	4c0c      	ldr	r4, [pc, #48]	; (8002ef0 <__libc_init_array+0x44>)
 8002ec0:	f003 fbd6 	bl	8006670 <_init>
 8002ec4:	1b64      	subs	r4, r4, r5
 8002ec6:	10a4      	asrs	r4, r4, #2
 8002ec8:	2600      	movs	r6, #0
 8002eca:	42a6      	cmp	r6, r4
 8002ecc:	d105      	bne.n	8002eda <__libc_init_array+0x2e>
 8002ece:	bd70      	pop	{r4, r5, r6, pc}
 8002ed0:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ed4:	4798      	blx	r3
 8002ed6:	3601      	adds	r6, #1
 8002ed8:	e7ee      	b.n	8002eb8 <__libc_init_array+0xc>
 8002eda:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ede:	4798      	blx	r3
 8002ee0:	3601      	adds	r6, #1
 8002ee2:	e7f2      	b.n	8002eca <__libc_init_array+0x1e>
 8002ee4:	08006cf8 	.word	0x08006cf8
 8002ee8:	08006cf8 	.word	0x08006cf8
 8002eec:	08006cf8 	.word	0x08006cf8
 8002ef0:	08006cfc 	.word	0x08006cfc

08002ef4 <__retarget_lock_init_recursive>:
 8002ef4:	4770      	bx	lr

08002ef6 <__retarget_lock_acquire_recursive>:
 8002ef6:	4770      	bx	lr

08002ef8 <__retarget_lock_release_recursive>:
 8002ef8:	4770      	bx	lr
	...

08002efc <nanf>:
 8002efc:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8002f04 <nanf+0x8>
 8002f00:	4770      	bx	lr
 8002f02:	bf00      	nop
 8002f04:	7fc00000 	.word	0x7fc00000

08002f08 <quorem>:
 8002f08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f0c:	6903      	ldr	r3, [r0, #16]
 8002f0e:	690c      	ldr	r4, [r1, #16]
 8002f10:	42a3      	cmp	r3, r4
 8002f12:	4607      	mov	r7, r0
 8002f14:	db7e      	blt.n	8003014 <quorem+0x10c>
 8002f16:	3c01      	subs	r4, #1
 8002f18:	f101 0814 	add.w	r8, r1, #20
 8002f1c:	f100 0514 	add.w	r5, r0, #20
 8002f20:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002f24:	9301      	str	r3, [sp, #4]
 8002f26:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002f2a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002f2e:	3301      	adds	r3, #1
 8002f30:	429a      	cmp	r2, r3
 8002f32:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002f36:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002f3a:	fbb2 f6f3 	udiv	r6, r2, r3
 8002f3e:	d331      	bcc.n	8002fa4 <quorem+0x9c>
 8002f40:	f04f 0e00 	mov.w	lr, #0
 8002f44:	4640      	mov	r0, r8
 8002f46:	46ac      	mov	ip, r5
 8002f48:	46f2      	mov	sl, lr
 8002f4a:	f850 2b04 	ldr.w	r2, [r0], #4
 8002f4e:	b293      	uxth	r3, r2
 8002f50:	fb06 e303 	mla	r3, r6, r3, lr
 8002f54:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002f58:	0c1a      	lsrs	r2, r3, #16
 8002f5a:	b29b      	uxth	r3, r3
 8002f5c:	ebaa 0303 	sub.w	r3, sl, r3
 8002f60:	f8dc a000 	ldr.w	sl, [ip]
 8002f64:	fa13 f38a 	uxtah	r3, r3, sl
 8002f68:	fb06 220e 	mla	r2, r6, lr, r2
 8002f6c:	9300      	str	r3, [sp, #0]
 8002f6e:	9b00      	ldr	r3, [sp, #0]
 8002f70:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002f74:	b292      	uxth	r2, r2
 8002f76:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002f7a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002f7e:	f8bd 3000 	ldrh.w	r3, [sp]
 8002f82:	4581      	cmp	r9, r0
 8002f84:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002f88:	f84c 3b04 	str.w	r3, [ip], #4
 8002f8c:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002f90:	d2db      	bcs.n	8002f4a <quorem+0x42>
 8002f92:	f855 300b 	ldr.w	r3, [r5, fp]
 8002f96:	b92b      	cbnz	r3, 8002fa4 <quorem+0x9c>
 8002f98:	9b01      	ldr	r3, [sp, #4]
 8002f9a:	3b04      	subs	r3, #4
 8002f9c:	429d      	cmp	r5, r3
 8002f9e:	461a      	mov	r2, r3
 8002fa0:	d32c      	bcc.n	8002ffc <quorem+0xf4>
 8002fa2:	613c      	str	r4, [r7, #16]
 8002fa4:	4638      	mov	r0, r7
 8002fa6:	f001 f9ef 	bl	8004388 <__mcmp>
 8002faa:	2800      	cmp	r0, #0
 8002fac:	db22      	blt.n	8002ff4 <quorem+0xec>
 8002fae:	3601      	adds	r6, #1
 8002fb0:	4629      	mov	r1, r5
 8002fb2:	2000      	movs	r0, #0
 8002fb4:	f858 2b04 	ldr.w	r2, [r8], #4
 8002fb8:	f8d1 c000 	ldr.w	ip, [r1]
 8002fbc:	b293      	uxth	r3, r2
 8002fbe:	1ac3      	subs	r3, r0, r3
 8002fc0:	0c12      	lsrs	r2, r2, #16
 8002fc2:	fa13 f38c 	uxtah	r3, r3, ip
 8002fc6:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002fca:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002fce:	b29b      	uxth	r3, r3
 8002fd0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002fd4:	45c1      	cmp	r9, r8
 8002fd6:	f841 3b04 	str.w	r3, [r1], #4
 8002fda:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002fde:	d2e9      	bcs.n	8002fb4 <quorem+0xac>
 8002fe0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002fe4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002fe8:	b922      	cbnz	r2, 8002ff4 <quorem+0xec>
 8002fea:	3b04      	subs	r3, #4
 8002fec:	429d      	cmp	r5, r3
 8002fee:	461a      	mov	r2, r3
 8002ff0:	d30a      	bcc.n	8003008 <quorem+0x100>
 8002ff2:	613c      	str	r4, [r7, #16]
 8002ff4:	4630      	mov	r0, r6
 8002ff6:	b003      	add	sp, #12
 8002ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ffc:	6812      	ldr	r2, [r2, #0]
 8002ffe:	3b04      	subs	r3, #4
 8003000:	2a00      	cmp	r2, #0
 8003002:	d1ce      	bne.n	8002fa2 <quorem+0x9a>
 8003004:	3c01      	subs	r4, #1
 8003006:	e7c9      	b.n	8002f9c <quorem+0x94>
 8003008:	6812      	ldr	r2, [r2, #0]
 800300a:	3b04      	subs	r3, #4
 800300c:	2a00      	cmp	r2, #0
 800300e:	d1f0      	bne.n	8002ff2 <quorem+0xea>
 8003010:	3c01      	subs	r4, #1
 8003012:	e7eb      	b.n	8002fec <quorem+0xe4>
 8003014:	2000      	movs	r0, #0
 8003016:	e7ee      	b.n	8002ff6 <quorem+0xee>

08003018 <_dtoa_r>:
 8003018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800301c:	ed2d 8b04 	vpush	{d8-d9}
 8003020:	69c5      	ldr	r5, [r0, #28]
 8003022:	b093      	sub	sp, #76	; 0x4c
 8003024:	ed8d 0b02 	vstr	d0, [sp, #8]
 8003028:	ec57 6b10 	vmov	r6, r7, d0
 800302c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8003030:	9107      	str	r1, [sp, #28]
 8003032:	4604      	mov	r4, r0
 8003034:	920a      	str	r2, [sp, #40]	; 0x28
 8003036:	930d      	str	r3, [sp, #52]	; 0x34
 8003038:	b975      	cbnz	r5, 8003058 <_dtoa_r+0x40>
 800303a:	2010      	movs	r0, #16
 800303c:	f000 fe2a 	bl	8003c94 <malloc>
 8003040:	4602      	mov	r2, r0
 8003042:	61e0      	str	r0, [r4, #28]
 8003044:	b920      	cbnz	r0, 8003050 <_dtoa_r+0x38>
 8003046:	4bae      	ldr	r3, [pc, #696]	; (8003300 <_dtoa_r+0x2e8>)
 8003048:	21ef      	movs	r1, #239	; 0xef
 800304a:	48ae      	ldr	r0, [pc, #696]	; (8003304 <_dtoa_r+0x2ec>)
 800304c:	f002 fc74 	bl	8005938 <__assert_func>
 8003050:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8003054:	6005      	str	r5, [r0, #0]
 8003056:	60c5      	str	r5, [r0, #12]
 8003058:	69e3      	ldr	r3, [r4, #28]
 800305a:	6819      	ldr	r1, [r3, #0]
 800305c:	b151      	cbz	r1, 8003074 <_dtoa_r+0x5c>
 800305e:	685a      	ldr	r2, [r3, #4]
 8003060:	604a      	str	r2, [r1, #4]
 8003062:	2301      	movs	r3, #1
 8003064:	4093      	lsls	r3, r2
 8003066:	608b      	str	r3, [r1, #8]
 8003068:	4620      	mov	r0, r4
 800306a:	f000 ff07 	bl	8003e7c <_Bfree>
 800306e:	69e3      	ldr	r3, [r4, #28]
 8003070:	2200      	movs	r2, #0
 8003072:	601a      	str	r2, [r3, #0]
 8003074:	1e3b      	subs	r3, r7, #0
 8003076:	bfbb      	ittet	lt
 8003078:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800307c:	9303      	strlt	r3, [sp, #12]
 800307e:	2300      	movge	r3, #0
 8003080:	2201      	movlt	r2, #1
 8003082:	bfac      	ite	ge
 8003084:	f8c8 3000 	strge.w	r3, [r8]
 8003088:	f8c8 2000 	strlt.w	r2, [r8]
 800308c:	4b9e      	ldr	r3, [pc, #632]	; (8003308 <_dtoa_r+0x2f0>)
 800308e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8003092:	ea33 0308 	bics.w	r3, r3, r8
 8003096:	d11b      	bne.n	80030d0 <_dtoa_r+0xb8>
 8003098:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800309a:	f242 730f 	movw	r3, #9999	; 0x270f
 800309e:	6013      	str	r3, [r2, #0]
 80030a0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80030a4:	4333      	orrs	r3, r6
 80030a6:	f000 8593 	beq.w	8003bd0 <_dtoa_r+0xbb8>
 80030aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030ac:	b963      	cbnz	r3, 80030c8 <_dtoa_r+0xb0>
 80030ae:	4b97      	ldr	r3, [pc, #604]	; (800330c <_dtoa_r+0x2f4>)
 80030b0:	e027      	b.n	8003102 <_dtoa_r+0xea>
 80030b2:	4b97      	ldr	r3, [pc, #604]	; (8003310 <_dtoa_r+0x2f8>)
 80030b4:	9300      	str	r3, [sp, #0]
 80030b6:	3308      	adds	r3, #8
 80030b8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80030ba:	6013      	str	r3, [r2, #0]
 80030bc:	9800      	ldr	r0, [sp, #0]
 80030be:	b013      	add	sp, #76	; 0x4c
 80030c0:	ecbd 8b04 	vpop	{d8-d9}
 80030c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030c8:	4b90      	ldr	r3, [pc, #576]	; (800330c <_dtoa_r+0x2f4>)
 80030ca:	9300      	str	r3, [sp, #0]
 80030cc:	3303      	adds	r3, #3
 80030ce:	e7f3      	b.n	80030b8 <_dtoa_r+0xa0>
 80030d0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80030d4:	2200      	movs	r2, #0
 80030d6:	ec51 0b17 	vmov	r0, r1, d7
 80030da:	eeb0 8a47 	vmov.f32	s16, s14
 80030de:	eef0 8a67 	vmov.f32	s17, s15
 80030e2:	2300      	movs	r3, #0
 80030e4:	f7fd fcf0 	bl	8000ac8 <__aeabi_dcmpeq>
 80030e8:	4681      	mov	r9, r0
 80030ea:	b160      	cbz	r0, 8003106 <_dtoa_r+0xee>
 80030ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80030ee:	2301      	movs	r3, #1
 80030f0:	6013      	str	r3, [r2, #0]
 80030f2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	f000 8568 	beq.w	8003bca <_dtoa_r+0xbb2>
 80030fa:	4b86      	ldr	r3, [pc, #536]	; (8003314 <_dtoa_r+0x2fc>)
 80030fc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80030fe:	6013      	str	r3, [r2, #0]
 8003100:	3b01      	subs	r3, #1
 8003102:	9300      	str	r3, [sp, #0]
 8003104:	e7da      	b.n	80030bc <_dtoa_r+0xa4>
 8003106:	aa10      	add	r2, sp, #64	; 0x40
 8003108:	a911      	add	r1, sp, #68	; 0x44
 800310a:	4620      	mov	r0, r4
 800310c:	eeb0 0a48 	vmov.f32	s0, s16
 8003110:	eef0 0a68 	vmov.f32	s1, s17
 8003114:	f001 fa4e 	bl	80045b4 <__d2b>
 8003118:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800311c:	4682      	mov	sl, r0
 800311e:	2d00      	cmp	r5, #0
 8003120:	d07f      	beq.n	8003222 <_dtoa_r+0x20a>
 8003122:	ee18 3a90 	vmov	r3, s17
 8003126:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800312a:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800312e:	ec51 0b18 	vmov	r0, r1, d8
 8003132:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8003136:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800313a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800313e:	4619      	mov	r1, r3
 8003140:	2200      	movs	r2, #0
 8003142:	4b75      	ldr	r3, [pc, #468]	; (8003318 <_dtoa_r+0x300>)
 8003144:	f7fd f8a0 	bl	8000288 <__aeabi_dsub>
 8003148:	a367      	add	r3, pc, #412	; (adr r3, 80032e8 <_dtoa_r+0x2d0>)
 800314a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800314e:	f7fd fa53 	bl	80005f8 <__aeabi_dmul>
 8003152:	a367      	add	r3, pc, #412	; (adr r3, 80032f0 <_dtoa_r+0x2d8>)
 8003154:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003158:	f7fd f898 	bl	800028c <__adddf3>
 800315c:	4606      	mov	r6, r0
 800315e:	4628      	mov	r0, r5
 8003160:	460f      	mov	r7, r1
 8003162:	f7fd f9df 	bl	8000524 <__aeabi_i2d>
 8003166:	a364      	add	r3, pc, #400	; (adr r3, 80032f8 <_dtoa_r+0x2e0>)
 8003168:	e9d3 2300 	ldrd	r2, r3, [r3]
 800316c:	f7fd fa44 	bl	80005f8 <__aeabi_dmul>
 8003170:	4602      	mov	r2, r0
 8003172:	460b      	mov	r3, r1
 8003174:	4630      	mov	r0, r6
 8003176:	4639      	mov	r1, r7
 8003178:	f7fd f888 	bl	800028c <__adddf3>
 800317c:	4606      	mov	r6, r0
 800317e:	460f      	mov	r7, r1
 8003180:	f7fd fcea 	bl	8000b58 <__aeabi_d2iz>
 8003184:	2200      	movs	r2, #0
 8003186:	4683      	mov	fp, r0
 8003188:	2300      	movs	r3, #0
 800318a:	4630      	mov	r0, r6
 800318c:	4639      	mov	r1, r7
 800318e:	f7fd fca5 	bl	8000adc <__aeabi_dcmplt>
 8003192:	b148      	cbz	r0, 80031a8 <_dtoa_r+0x190>
 8003194:	4658      	mov	r0, fp
 8003196:	f7fd f9c5 	bl	8000524 <__aeabi_i2d>
 800319a:	4632      	mov	r2, r6
 800319c:	463b      	mov	r3, r7
 800319e:	f7fd fc93 	bl	8000ac8 <__aeabi_dcmpeq>
 80031a2:	b908      	cbnz	r0, 80031a8 <_dtoa_r+0x190>
 80031a4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80031a8:	f1bb 0f16 	cmp.w	fp, #22
 80031ac:	d857      	bhi.n	800325e <_dtoa_r+0x246>
 80031ae:	4b5b      	ldr	r3, [pc, #364]	; (800331c <_dtoa_r+0x304>)
 80031b0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80031b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031b8:	ec51 0b18 	vmov	r0, r1, d8
 80031bc:	f7fd fc8e 	bl	8000adc <__aeabi_dcmplt>
 80031c0:	2800      	cmp	r0, #0
 80031c2:	d04e      	beq.n	8003262 <_dtoa_r+0x24a>
 80031c4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80031c8:	2300      	movs	r3, #0
 80031ca:	930c      	str	r3, [sp, #48]	; 0x30
 80031cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80031ce:	1b5b      	subs	r3, r3, r5
 80031d0:	1e5a      	subs	r2, r3, #1
 80031d2:	bf45      	ittet	mi
 80031d4:	f1c3 0301 	rsbmi	r3, r3, #1
 80031d8:	9305      	strmi	r3, [sp, #20]
 80031da:	2300      	movpl	r3, #0
 80031dc:	2300      	movmi	r3, #0
 80031de:	9206      	str	r2, [sp, #24]
 80031e0:	bf54      	ite	pl
 80031e2:	9305      	strpl	r3, [sp, #20]
 80031e4:	9306      	strmi	r3, [sp, #24]
 80031e6:	f1bb 0f00 	cmp.w	fp, #0
 80031ea:	db3c      	blt.n	8003266 <_dtoa_r+0x24e>
 80031ec:	9b06      	ldr	r3, [sp, #24]
 80031ee:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80031f2:	445b      	add	r3, fp
 80031f4:	9306      	str	r3, [sp, #24]
 80031f6:	2300      	movs	r3, #0
 80031f8:	9308      	str	r3, [sp, #32]
 80031fa:	9b07      	ldr	r3, [sp, #28]
 80031fc:	2b09      	cmp	r3, #9
 80031fe:	d868      	bhi.n	80032d2 <_dtoa_r+0x2ba>
 8003200:	2b05      	cmp	r3, #5
 8003202:	bfc4      	itt	gt
 8003204:	3b04      	subgt	r3, #4
 8003206:	9307      	strgt	r3, [sp, #28]
 8003208:	9b07      	ldr	r3, [sp, #28]
 800320a:	f1a3 0302 	sub.w	r3, r3, #2
 800320e:	bfcc      	ite	gt
 8003210:	2500      	movgt	r5, #0
 8003212:	2501      	movle	r5, #1
 8003214:	2b03      	cmp	r3, #3
 8003216:	f200 8085 	bhi.w	8003324 <_dtoa_r+0x30c>
 800321a:	e8df f003 	tbb	[pc, r3]
 800321e:	3b2e      	.short	0x3b2e
 8003220:	5839      	.short	0x5839
 8003222:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8003226:	441d      	add	r5, r3
 8003228:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800322c:	2b20      	cmp	r3, #32
 800322e:	bfc1      	itttt	gt
 8003230:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8003234:	fa08 f803 	lslgt.w	r8, r8, r3
 8003238:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 800323c:	fa26 f303 	lsrgt.w	r3, r6, r3
 8003240:	bfd6      	itet	le
 8003242:	f1c3 0320 	rsble	r3, r3, #32
 8003246:	ea48 0003 	orrgt.w	r0, r8, r3
 800324a:	fa06 f003 	lslle.w	r0, r6, r3
 800324e:	f7fd f959 	bl	8000504 <__aeabi_ui2d>
 8003252:	2201      	movs	r2, #1
 8003254:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8003258:	3d01      	subs	r5, #1
 800325a:	920e      	str	r2, [sp, #56]	; 0x38
 800325c:	e76f      	b.n	800313e <_dtoa_r+0x126>
 800325e:	2301      	movs	r3, #1
 8003260:	e7b3      	b.n	80031ca <_dtoa_r+0x1b2>
 8003262:	900c      	str	r0, [sp, #48]	; 0x30
 8003264:	e7b2      	b.n	80031cc <_dtoa_r+0x1b4>
 8003266:	9b05      	ldr	r3, [sp, #20]
 8003268:	eba3 030b 	sub.w	r3, r3, fp
 800326c:	9305      	str	r3, [sp, #20]
 800326e:	f1cb 0300 	rsb	r3, fp, #0
 8003272:	9308      	str	r3, [sp, #32]
 8003274:	2300      	movs	r3, #0
 8003276:	930b      	str	r3, [sp, #44]	; 0x2c
 8003278:	e7bf      	b.n	80031fa <_dtoa_r+0x1e2>
 800327a:	2300      	movs	r3, #0
 800327c:	9309      	str	r3, [sp, #36]	; 0x24
 800327e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003280:	2b00      	cmp	r3, #0
 8003282:	dc52      	bgt.n	800332a <_dtoa_r+0x312>
 8003284:	2301      	movs	r3, #1
 8003286:	9301      	str	r3, [sp, #4]
 8003288:	9304      	str	r3, [sp, #16]
 800328a:	461a      	mov	r2, r3
 800328c:	920a      	str	r2, [sp, #40]	; 0x28
 800328e:	e00b      	b.n	80032a8 <_dtoa_r+0x290>
 8003290:	2301      	movs	r3, #1
 8003292:	e7f3      	b.n	800327c <_dtoa_r+0x264>
 8003294:	2300      	movs	r3, #0
 8003296:	9309      	str	r3, [sp, #36]	; 0x24
 8003298:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800329a:	445b      	add	r3, fp
 800329c:	9301      	str	r3, [sp, #4]
 800329e:	3301      	adds	r3, #1
 80032a0:	2b01      	cmp	r3, #1
 80032a2:	9304      	str	r3, [sp, #16]
 80032a4:	bfb8      	it	lt
 80032a6:	2301      	movlt	r3, #1
 80032a8:	69e0      	ldr	r0, [r4, #28]
 80032aa:	2100      	movs	r1, #0
 80032ac:	2204      	movs	r2, #4
 80032ae:	f102 0614 	add.w	r6, r2, #20
 80032b2:	429e      	cmp	r6, r3
 80032b4:	d93d      	bls.n	8003332 <_dtoa_r+0x31a>
 80032b6:	6041      	str	r1, [r0, #4]
 80032b8:	4620      	mov	r0, r4
 80032ba:	f000 fd9f 	bl	8003dfc <_Balloc>
 80032be:	9000      	str	r0, [sp, #0]
 80032c0:	2800      	cmp	r0, #0
 80032c2:	d139      	bne.n	8003338 <_dtoa_r+0x320>
 80032c4:	4b16      	ldr	r3, [pc, #88]	; (8003320 <_dtoa_r+0x308>)
 80032c6:	4602      	mov	r2, r0
 80032c8:	f240 11af 	movw	r1, #431	; 0x1af
 80032cc:	e6bd      	b.n	800304a <_dtoa_r+0x32>
 80032ce:	2301      	movs	r3, #1
 80032d0:	e7e1      	b.n	8003296 <_dtoa_r+0x27e>
 80032d2:	2501      	movs	r5, #1
 80032d4:	2300      	movs	r3, #0
 80032d6:	9307      	str	r3, [sp, #28]
 80032d8:	9509      	str	r5, [sp, #36]	; 0x24
 80032da:	f04f 33ff 	mov.w	r3, #4294967295
 80032de:	9301      	str	r3, [sp, #4]
 80032e0:	9304      	str	r3, [sp, #16]
 80032e2:	2200      	movs	r2, #0
 80032e4:	2312      	movs	r3, #18
 80032e6:	e7d1      	b.n	800328c <_dtoa_r+0x274>
 80032e8:	636f4361 	.word	0x636f4361
 80032ec:	3fd287a7 	.word	0x3fd287a7
 80032f0:	8b60c8b3 	.word	0x8b60c8b3
 80032f4:	3fc68a28 	.word	0x3fc68a28
 80032f8:	509f79fb 	.word	0x509f79fb
 80032fc:	3fd34413 	.word	0x3fd34413
 8003300:	08006a15 	.word	0x08006a15
 8003304:	08006a2c 	.word	0x08006a2c
 8003308:	7ff00000 	.word	0x7ff00000
 800330c:	08006a11 	.word	0x08006a11
 8003310:	08006a08 	.word	0x08006a08
 8003314:	080069e0 	.word	0x080069e0
 8003318:	3ff80000 	.word	0x3ff80000
 800331c:	08006b18 	.word	0x08006b18
 8003320:	08006a84 	.word	0x08006a84
 8003324:	2301      	movs	r3, #1
 8003326:	9309      	str	r3, [sp, #36]	; 0x24
 8003328:	e7d7      	b.n	80032da <_dtoa_r+0x2c2>
 800332a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800332c:	9301      	str	r3, [sp, #4]
 800332e:	9304      	str	r3, [sp, #16]
 8003330:	e7ba      	b.n	80032a8 <_dtoa_r+0x290>
 8003332:	3101      	adds	r1, #1
 8003334:	0052      	lsls	r2, r2, #1
 8003336:	e7ba      	b.n	80032ae <_dtoa_r+0x296>
 8003338:	69e3      	ldr	r3, [r4, #28]
 800333a:	9a00      	ldr	r2, [sp, #0]
 800333c:	601a      	str	r2, [r3, #0]
 800333e:	9b04      	ldr	r3, [sp, #16]
 8003340:	2b0e      	cmp	r3, #14
 8003342:	f200 80a8 	bhi.w	8003496 <_dtoa_r+0x47e>
 8003346:	2d00      	cmp	r5, #0
 8003348:	f000 80a5 	beq.w	8003496 <_dtoa_r+0x47e>
 800334c:	f1bb 0f00 	cmp.w	fp, #0
 8003350:	dd38      	ble.n	80033c4 <_dtoa_r+0x3ac>
 8003352:	4bc0      	ldr	r3, [pc, #768]	; (8003654 <_dtoa_r+0x63c>)
 8003354:	f00b 020f 	and.w	r2, fp, #15
 8003358:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800335c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8003360:	e9d3 6700 	ldrd	r6, r7, [r3]
 8003364:	ea4f 182b 	mov.w	r8, fp, asr #4
 8003368:	d019      	beq.n	800339e <_dtoa_r+0x386>
 800336a:	4bbb      	ldr	r3, [pc, #748]	; (8003658 <_dtoa_r+0x640>)
 800336c:	ec51 0b18 	vmov	r0, r1, d8
 8003370:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003374:	f7fd fa6a 	bl	800084c <__aeabi_ddiv>
 8003378:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800337c:	f008 080f 	and.w	r8, r8, #15
 8003380:	2503      	movs	r5, #3
 8003382:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8003658 <_dtoa_r+0x640>
 8003386:	f1b8 0f00 	cmp.w	r8, #0
 800338a:	d10a      	bne.n	80033a2 <_dtoa_r+0x38a>
 800338c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003390:	4632      	mov	r2, r6
 8003392:	463b      	mov	r3, r7
 8003394:	f7fd fa5a 	bl	800084c <__aeabi_ddiv>
 8003398:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800339c:	e02b      	b.n	80033f6 <_dtoa_r+0x3de>
 800339e:	2502      	movs	r5, #2
 80033a0:	e7ef      	b.n	8003382 <_dtoa_r+0x36a>
 80033a2:	f018 0f01 	tst.w	r8, #1
 80033a6:	d008      	beq.n	80033ba <_dtoa_r+0x3a2>
 80033a8:	4630      	mov	r0, r6
 80033aa:	4639      	mov	r1, r7
 80033ac:	e9d9 2300 	ldrd	r2, r3, [r9]
 80033b0:	f7fd f922 	bl	80005f8 <__aeabi_dmul>
 80033b4:	3501      	adds	r5, #1
 80033b6:	4606      	mov	r6, r0
 80033b8:	460f      	mov	r7, r1
 80033ba:	ea4f 0868 	mov.w	r8, r8, asr #1
 80033be:	f109 0908 	add.w	r9, r9, #8
 80033c2:	e7e0      	b.n	8003386 <_dtoa_r+0x36e>
 80033c4:	f000 809f 	beq.w	8003506 <_dtoa_r+0x4ee>
 80033c8:	f1cb 0600 	rsb	r6, fp, #0
 80033cc:	4ba1      	ldr	r3, [pc, #644]	; (8003654 <_dtoa_r+0x63c>)
 80033ce:	4fa2      	ldr	r7, [pc, #648]	; (8003658 <_dtoa_r+0x640>)
 80033d0:	f006 020f 	and.w	r2, r6, #15
 80033d4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80033d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033dc:	ec51 0b18 	vmov	r0, r1, d8
 80033e0:	f7fd f90a 	bl	80005f8 <__aeabi_dmul>
 80033e4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80033e8:	1136      	asrs	r6, r6, #4
 80033ea:	2300      	movs	r3, #0
 80033ec:	2502      	movs	r5, #2
 80033ee:	2e00      	cmp	r6, #0
 80033f0:	d17e      	bne.n	80034f0 <_dtoa_r+0x4d8>
 80033f2:	2b00      	cmp	r3, #0
 80033f4:	d1d0      	bne.n	8003398 <_dtoa_r+0x380>
 80033f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80033f8:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	f000 8084 	beq.w	800350a <_dtoa_r+0x4f2>
 8003402:	4b96      	ldr	r3, [pc, #600]	; (800365c <_dtoa_r+0x644>)
 8003404:	2200      	movs	r2, #0
 8003406:	4640      	mov	r0, r8
 8003408:	4649      	mov	r1, r9
 800340a:	f7fd fb67 	bl	8000adc <__aeabi_dcmplt>
 800340e:	2800      	cmp	r0, #0
 8003410:	d07b      	beq.n	800350a <_dtoa_r+0x4f2>
 8003412:	9b04      	ldr	r3, [sp, #16]
 8003414:	2b00      	cmp	r3, #0
 8003416:	d078      	beq.n	800350a <_dtoa_r+0x4f2>
 8003418:	9b01      	ldr	r3, [sp, #4]
 800341a:	2b00      	cmp	r3, #0
 800341c:	dd39      	ble.n	8003492 <_dtoa_r+0x47a>
 800341e:	4b90      	ldr	r3, [pc, #576]	; (8003660 <_dtoa_r+0x648>)
 8003420:	2200      	movs	r2, #0
 8003422:	4640      	mov	r0, r8
 8003424:	4649      	mov	r1, r9
 8003426:	f7fd f8e7 	bl	80005f8 <__aeabi_dmul>
 800342a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800342e:	9e01      	ldr	r6, [sp, #4]
 8003430:	f10b 37ff 	add.w	r7, fp, #4294967295
 8003434:	3501      	adds	r5, #1
 8003436:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800343a:	4628      	mov	r0, r5
 800343c:	f7fd f872 	bl	8000524 <__aeabi_i2d>
 8003440:	4642      	mov	r2, r8
 8003442:	464b      	mov	r3, r9
 8003444:	f7fd f8d8 	bl	80005f8 <__aeabi_dmul>
 8003448:	4b86      	ldr	r3, [pc, #536]	; (8003664 <_dtoa_r+0x64c>)
 800344a:	2200      	movs	r2, #0
 800344c:	f7fc ff1e 	bl	800028c <__adddf3>
 8003450:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8003454:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003458:	9303      	str	r3, [sp, #12]
 800345a:	2e00      	cmp	r6, #0
 800345c:	d158      	bne.n	8003510 <_dtoa_r+0x4f8>
 800345e:	4b82      	ldr	r3, [pc, #520]	; (8003668 <_dtoa_r+0x650>)
 8003460:	2200      	movs	r2, #0
 8003462:	4640      	mov	r0, r8
 8003464:	4649      	mov	r1, r9
 8003466:	f7fc ff0f 	bl	8000288 <__aeabi_dsub>
 800346a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800346e:	4680      	mov	r8, r0
 8003470:	4689      	mov	r9, r1
 8003472:	f7fd fb51 	bl	8000b18 <__aeabi_dcmpgt>
 8003476:	2800      	cmp	r0, #0
 8003478:	f040 8296 	bne.w	80039a8 <_dtoa_r+0x990>
 800347c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8003480:	4640      	mov	r0, r8
 8003482:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003486:	4649      	mov	r1, r9
 8003488:	f7fd fb28 	bl	8000adc <__aeabi_dcmplt>
 800348c:	2800      	cmp	r0, #0
 800348e:	f040 8289 	bne.w	80039a4 <_dtoa_r+0x98c>
 8003492:	ed8d 8b02 	vstr	d8, [sp, #8]
 8003496:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003498:	2b00      	cmp	r3, #0
 800349a:	f2c0 814e 	blt.w	800373a <_dtoa_r+0x722>
 800349e:	f1bb 0f0e 	cmp.w	fp, #14
 80034a2:	f300 814a 	bgt.w	800373a <_dtoa_r+0x722>
 80034a6:	4b6b      	ldr	r3, [pc, #428]	; (8003654 <_dtoa_r+0x63c>)
 80034a8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80034ac:	e9d3 8900 	ldrd	r8, r9, [r3]
 80034b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	f280 80dc 	bge.w	8003670 <_dtoa_r+0x658>
 80034b8:	9b04      	ldr	r3, [sp, #16]
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	f300 80d8 	bgt.w	8003670 <_dtoa_r+0x658>
 80034c0:	f040 826f 	bne.w	80039a2 <_dtoa_r+0x98a>
 80034c4:	4b68      	ldr	r3, [pc, #416]	; (8003668 <_dtoa_r+0x650>)
 80034c6:	2200      	movs	r2, #0
 80034c8:	4640      	mov	r0, r8
 80034ca:	4649      	mov	r1, r9
 80034cc:	f7fd f894 	bl	80005f8 <__aeabi_dmul>
 80034d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80034d4:	f7fd fb16 	bl	8000b04 <__aeabi_dcmpge>
 80034d8:	9e04      	ldr	r6, [sp, #16]
 80034da:	4637      	mov	r7, r6
 80034dc:	2800      	cmp	r0, #0
 80034de:	f040 8245 	bne.w	800396c <_dtoa_r+0x954>
 80034e2:	9d00      	ldr	r5, [sp, #0]
 80034e4:	2331      	movs	r3, #49	; 0x31
 80034e6:	f805 3b01 	strb.w	r3, [r5], #1
 80034ea:	f10b 0b01 	add.w	fp, fp, #1
 80034ee:	e241      	b.n	8003974 <_dtoa_r+0x95c>
 80034f0:	07f2      	lsls	r2, r6, #31
 80034f2:	d505      	bpl.n	8003500 <_dtoa_r+0x4e8>
 80034f4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80034f8:	f7fd f87e 	bl	80005f8 <__aeabi_dmul>
 80034fc:	3501      	adds	r5, #1
 80034fe:	2301      	movs	r3, #1
 8003500:	1076      	asrs	r6, r6, #1
 8003502:	3708      	adds	r7, #8
 8003504:	e773      	b.n	80033ee <_dtoa_r+0x3d6>
 8003506:	2502      	movs	r5, #2
 8003508:	e775      	b.n	80033f6 <_dtoa_r+0x3de>
 800350a:	9e04      	ldr	r6, [sp, #16]
 800350c:	465f      	mov	r7, fp
 800350e:	e792      	b.n	8003436 <_dtoa_r+0x41e>
 8003510:	9900      	ldr	r1, [sp, #0]
 8003512:	4b50      	ldr	r3, [pc, #320]	; (8003654 <_dtoa_r+0x63c>)
 8003514:	ed9d 7b02 	vldr	d7, [sp, #8]
 8003518:	4431      	add	r1, r6
 800351a:	9102      	str	r1, [sp, #8]
 800351c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800351e:	eeb0 9a47 	vmov.f32	s18, s14
 8003522:	eef0 9a67 	vmov.f32	s19, s15
 8003526:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800352a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800352e:	2900      	cmp	r1, #0
 8003530:	d044      	beq.n	80035bc <_dtoa_r+0x5a4>
 8003532:	494e      	ldr	r1, [pc, #312]	; (800366c <_dtoa_r+0x654>)
 8003534:	2000      	movs	r0, #0
 8003536:	f7fd f989 	bl	800084c <__aeabi_ddiv>
 800353a:	ec53 2b19 	vmov	r2, r3, d9
 800353e:	f7fc fea3 	bl	8000288 <__aeabi_dsub>
 8003542:	9d00      	ldr	r5, [sp, #0]
 8003544:	ec41 0b19 	vmov	d9, r0, r1
 8003548:	4649      	mov	r1, r9
 800354a:	4640      	mov	r0, r8
 800354c:	f7fd fb04 	bl	8000b58 <__aeabi_d2iz>
 8003550:	4606      	mov	r6, r0
 8003552:	f7fc ffe7 	bl	8000524 <__aeabi_i2d>
 8003556:	4602      	mov	r2, r0
 8003558:	460b      	mov	r3, r1
 800355a:	4640      	mov	r0, r8
 800355c:	4649      	mov	r1, r9
 800355e:	f7fc fe93 	bl	8000288 <__aeabi_dsub>
 8003562:	3630      	adds	r6, #48	; 0x30
 8003564:	f805 6b01 	strb.w	r6, [r5], #1
 8003568:	ec53 2b19 	vmov	r2, r3, d9
 800356c:	4680      	mov	r8, r0
 800356e:	4689      	mov	r9, r1
 8003570:	f7fd fab4 	bl	8000adc <__aeabi_dcmplt>
 8003574:	2800      	cmp	r0, #0
 8003576:	d164      	bne.n	8003642 <_dtoa_r+0x62a>
 8003578:	4642      	mov	r2, r8
 800357a:	464b      	mov	r3, r9
 800357c:	4937      	ldr	r1, [pc, #220]	; (800365c <_dtoa_r+0x644>)
 800357e:	2000      	movs	r0, #0
 8003580:	f7fc fe82 	bl	8000288 <__aeabi_dsub>
 8003584:	ec53 2b19 	vmov	r2, r3, d9
 8003588:	f7fd faa8 	bl	8000adc <__aeabi_dcmplt>
 800358c:	2800      	cmp	r0, #0
 800358e:	f040 80b6 	bne.w	80036fe <_dtoa_r+0x6e6>
 8003592:	9b02      	ldr	r3, [sp, #8]
 8003594:	429d      	cmp	r5, r3
 8003596:	f43f af7c 	beq.w	8003492 <_dtoa_r+0x47a>
 800359a:	4b31      	ldr	r3, [pc, #196]	; (8003660 <_dtoa_r+0x648>)
 800359c:	ec51 0b19 	vmov	r0, r1, d9
 80035a0:	2200      	movs	r2, #0
 80035a2:	f7fd f829 	bl	80005f8 <__aeabi_dmul>
 80035a6:	4b2e      	ldr	r3, [pc, #184]	; (8003660 <_dtoa_r+0x648>)
 80035a8:	ec41 0b19 	vmov	d9, r0, r1
 80035ac:	2200      	movs	r2, #0
 80035ae:	4640      	mov	r0, r8
 80035b0:	4649      	mov	r1, r9
 80035b2:	f7fd f821 	bl	80005f8 <__aeabi_dmul>
 80035b6:	4680      	mov	r8, r0
 80035b8:	4689      	mov	r9, r1
 80035ba:	e7c5      	b.n	8003548 <_dtoa_r+0x530>
 80035bc:	ec51 0b17 	vmov	r0, r1, d7
 80035c0:	f7fd f81a 	bl	80005f8 <__aeabi_dmul>
 80035c4:	9b02      	ldr	r3, [sp, #8]
 80035c6:	9d00      	ldr	r5, [sp, #0]
 80035c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80035ca:	ec41 0b19 	vmov	d9, r0, r1
 80035ce:	4649      	mov	r1, r9
 80035d0:	4640      	mov	r0, r8
 80035d2:	f7fd fac1 	bl	8000b58 <__aeabi_d2iz>
 80035d6:	4606      	mov	r6, r0
 80035d8:	f7fc ffa4 	bl	8000524 <__aeabi_i2d>
 80035dc:	3630      	adds	r6, #48	; 0x30
 80035de:	4602      	mov	r2, r0
 80035e0:	460b      	mov	r3, r1
 80035e2:	4640      	mov	r0, r8
 80035e4:	4649      	mov	r1, r9
 80035e6:	f7fc fe4f 	bl	8000288 <__aeabi_dsub>
 80035ea:	f805 6b01 	strb.w	r6, [r5], #1
 80035ee:	9b02      	ldr	r3, [sp, #8]
 80035f0:	429d      	cmp	r5, r3
 80035f2:	4680      	mov	r8, r0
 80035f4:	4689      	mov	r9, r1
 80035f6:	f04f 0200 	mov.w	r2, #0
 80035fa:	d124      	bne.n	8003646 <_dtoa_r+0x62e>
 80035fc:	4b1b      	ldr	r3, [pc, #108]	; (800366c <_dtoa_r+0x654>)
 80035fe:	ec51 0b19 	vmov	r0, r1, d9
 8003602:	f7fc fe43 	bl	800028c <__adddf3>
 8003606:	4602      	mov	r2, r0
 8003608:	460b      	mov	r3, r1
 800360a:	4640      	mov	r0, r8
 800360c:	4649      	mov	r1, r9
 800360e:	f7fd fa83 	bl	8000b18 <__aeabi_dcmpgt>
 8003612:	2800      	cmp	r0, #0
 8003614:	d173      	bne.n	80036fe <_dtoa_r+0x6e6>
 8003616:	ec53 2b19 	vmov	r2, r3, d9
 800361a:	4914      	ldr	r1, [pc, #80]	; (800366c <_dtoa_r+0x654>)
 800361c:	2000      	movs	r0, #0
 800361e:	f7fc fe33 	bl	8000288 <__aeabi_dsub>
 8003622:	4602      	mov	r2, r0
 8003624:	460b      	mov	r3, r1
 8003626:	4640      	mov	r0, r8
 8003628:	4649      	mov	r1, r9
 800362a:	f7fd fa57 	bl	8000adc <__aeabi_dcmplt>
 800362e:	2800      	cmp	r0, #0
 8003630:	f43f af2f 	beq.w	8003492 <_dtoa_r+0x47a>
 8003634:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8003636:	1e6b      	subs	r3, r5, #1
 8003638:	930f      	str	r3, [sp, #60]	; 0x3c
 800363a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800363e:	2b30      	cmp	r3, #48	; 0x30
 8003640:	d0f8      	beq.n	8003634 <_dtoa_r+0x61c>
 8003642:	46bb      	mov	fp, r7
 8003644:	e04a      	b.n	80036dc <_dtoa_r+0x6c4>
 8003646:	4b06      	ldr	r3, [pc, #24]	; (8003660 <_dtoa_r+0x648>)
 8003648:	f7fc ffd6 	bl	80005f8 <__aeabi_dmul>
 800364c:	4680      	mov	r8, r0
 800364e:	4689      	mov	r9, r1
 8003650:	e7bd      	b.n	80035ce <_dtoa_r+0x5b6>
 8003652:	bf00      	nop
 8003654:	08006b18 	.word	0x08006b18
 8003658:	08006af0 	.word	0x08006af0
 800365c:	3ff00000 	.word	0x3ff00000
 8003660:	40240000 	.word	0x40240000
 8003664:	401c0000 	.word	0x401c0000
 8003668:	40140000 	.word	0x40140000
 800366c:	3fe00000 	.word	0x3fe00000
 8003670:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8003674:	9d00      	ldr	r5, [sp, #0]
 8003676:	4642      	mov	r2, r8
 8003678:	464b      	mov	r3, r9
 800367a:	4630      	mov	r0, r6
 800367c:	4639      	mov	r1, r7
 800367e:	f7fd f8e5 	bl	800084c <__aeabi_ddiv>
 8003682:	f7fd fa69 	bl	8000b58 <__aeabi_d2iz>
 8003686:	9001      	str	r0, [sp, #4]
 8003688:	f7fc ff4c 	bl	8000524 <__aeabi_i2d>
 800368c:	4642      	mov	r2, r8
 800368e:	464b      	mov	r3, r9
 8003690:	f7fc ffb2 	bl	80005f8 <__aeabi_dmul>
 8003694:	4602      	mov	r2, r0
 8003696:	460b      	mov	r3, r1
 8003698:	4630      	mov	r0, r6
 800369a:	4639      	mov	r1, r7
 800369c:	f7fc fdf4 	bl	8000288 <__aeabi_dsub>
 80036a0:	9e01      	ldr	r6, [sp, #4]
 80036a2:	9f04      	ldr	r7, [sp, #16]
 80036a4:	3630      	adds	r6, #48	; 0x30
 80036a6:	f805 6b01 	strb.w	r6, [r5], #1
 80036aa:	9e00      	ldr	r6, [sp, #0]
 80036ac:	1bae      	subs	r6, r5, r6
 80036ae:	42b7      	cmp	r7, r6
 80036b0:	4602      	mov	r2, r0
 80036b2:	460b      	mov	r3, r1
 80036b4:	d134      	bne.n	8003720 <_dtoa_r+0x708>
 80036b6:	f7fc fde9 	bl	800028c <__adddf3>
 80036ba:	4642      	mov	r2, r8
 80036bc:	464b      	mov	r3, r9
 80036be:	4606      	mov	r6, r0
 80036c0:	460f      	mov	r7, r1
 80036c2:	f7fd fa29 	bl	8000b18 <__aeabi_dcmpgt>
 80036c6:	b9c8      	cbnz	r0, 80036fc <_dtoa_r+0x6e4>
 80036c8:	4642      	mov	r2, r8
 80036ca:	464b      	mov	r3, r9
 80036cc:	4630      	mov	r0, r6
 80036ce:	4639      	mov	r1, r7
 80036d0:	f7fd f9fa 	bl	8000ac8 <__aeabi_dcmpeq>
 80036d4:	b110      	cbz	r0, 80036dc <_dtoa_r+0x6c4>
 80036d6:	9b01      	ldr	r3, [sp, #4]
 80036d8:	07db      	lsls	r3, r3, #31
 80036da:	d40f      	bmi.n	80036fc <_dtoa_r+0x6e4>
 80036dc:	4651      	mov	r1, sl
 80036de:	4620      	mov	r0, r4
 80036e0:	f000 fbcc 	bl	8003e7c <_Bfree>
 80036e4:	2300      	movs	r3, #0
 80036e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80036e8:	702b      	strb	r3, [r5, #0]
 80036ea:	f10b 0301 	add.w	r3, fp, #1
 80036ee:	6013      	str	r3, [r2, #0]
 80036f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	f43f ace2 	beq.w	80030bc <_dtoa_r+0xa4>
 80036f8:	601d      	str	r5, [r3, #0]
 80036fa:	e4df      	b.n	80030bc <_dtoa_r+0xa4>
 80036fc:	465f      	mov	r7, fp
 80036fe:	462b      	mov	r3, r5
 8003700:	461d      	mov	r5, r3
 8003702:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003706:	2a39      	cmp	r2, #57	; 0x39
 8003708:	d106      	bne.n	8003718 <_dtoa_r+0x700>
 800370a:	9a00      	ldr	r2, [sp, #0]
 800370c:	429a      	cmp	r2, r3
 800370e:	d1f7      	bne.n	8003700 <_dtoa_r+0x6e8>
 8003710:	9900      	ldr	r1, [sp, #0]
 8003712:	2230      	movs	r2, #48	; 0x30
 8003714:	3701      	adds	r7, #1
 8003716:	700a      	strb	r2, [r1, #0]
 8003718:	781a      	ldrb	r2, [r3, #0]
 800371a:	3201      	adds	r2, #1
 800371c:	701a      	strb	r2, [r3, #0]
 800371e:	e790      	b.n	8003642 <_dtoa_r+0x62a>
 8003720:	4ba3      	ldr	r3, [pc, #652]	; (80039b0 <_dtoa_r+0x998>)
 8003722:	2200      	movs	r2, #0
 8003724:	f7fc ff68 	bl	80005f8 <__aeabi_dmul>
 8003728:	2200      	movs	r2, #0
 800372a:	2300      	movs	r3, #0
 800372c:	4606      	mov	r6, r0
 800372e:	460f      	mov	r7, r1
 8003730:	f7fd f9ca 	bl	8000ac8 <__aeabi_dcmpeq>
 8003734:	2800      	cmp	r0, #0
 8003736:	d09e      	beq.n	8003676 <_dtoa_r+0x65e>
 8003738:	e7d0      	b.n	80036dc <_dtoa_r+0x6c4>
 800373a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800373c:	2a00      	cmp	r2, #0
 800373e:	f000 80ca 	beq.w	80038d6 <_dtoa_r+0x8be>
 8003742:	9a07      	ldr	r2, [sp, #28]
 8003744:	2a01      	cmp	r2, #1
 8003746:	f300 80ad 	bgt.w	80038a4 <_dtoa_r+0x88c>
 800374a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800374c:	2a00      	cmp	r2, #0
 800374e:	f000 80a5 	beq.w	800389c <_dtoa_r+0x884>
 8003752:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003756:	9e08      	ldr	r6, [sp, #32]
 8003758:	9d05      	ldr	r5, [sp, #20]
 800375a:	9a05      	ldr	r2, [sp, #20]
 800375c:	441a      	add	r2, r3
 800375e:	9205      	str	r2, [sp, #20]
 8003760:	9a06      	ldr	r2, [sp, #24]
 8003762:	2101      	movs	r1, #1
 8003764:	441a      	add	r2, r3
 8003766:	4620      	mov	r0, r4
 8003768:	9206      	str	r2, [sp, #24]
 800376a:	f000 fc87 	bl	800407c <__i2b>
 800376e:	4607      	mov	r7, r0
 8003770:	b165      	cbz	r5, 800378c <_dtoa_r+0x774>
 8003772:	9b06      	ldr	r3, [sp, #24]
 8003774:	2b00      	cmp	r3, #0
 8003776:	dd09      	ble.n	800378c <_dtoa_r+0x774>
 8003778:	42ab      	cmp	r3, r5
 800377a:	9a05      	ldr	r2, [sp, #20]
 800377c:	bfa8      	it	ge
 800377e:	462b      	movge	r3, r5
 8003780:	1ad2      	subs	r2, r2, r3
 8003782:	9205      	str	r2, [sp, #20]
 8003784:	9a06      	ldr	r2, [sp, #24]
 8003786:	1aed      	subs	r5, r5, r3
 8003788:	1ad3      	subs	r3, r2, r3
 800378a:	9306      	str	r3, [sp, #24]
 800378c:	9b08      	ldr	r3, [sp, #32]
 800378e:	b1f3      	cbz	r3, 80037ce <_dtoa_r+0x7b6>
 8003790:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003792:	2b00      	cmp	r3, #0
 8003794:	f000 80a3 	beq.w	80038de <_dtoa_r+0x8c6>
 8003798:	2e00      	cmp	r6, #0
 800379a:	dd10      	ble.n	80037be <_dtoa_r+0x7a6>
 800379c:	4639      	mov	r1, r7
 800379e:	4632      	mov	r2, r6
 80037a0:	4620      	mov	r0, r4
 80037a2:	f000 fd2b 	bl	80041fc <__pow5mult>
 80037a6:	4652      	mov	r2, sl
 80037a8:	4601      	mov	r1, r0
 80037aa:	4607      	mov	r7, r0
 80037ac:	4620      	mov	r0, r4
 80037ae:	f000 fc7b 	bl	80040a8 <__multiply>
 80037b2:	4651      	mov	r1, sl
 80037b4:	4680      	mov	r8, r0
 80037b6:	4620      	mov	r0, r4
 80037b8:	f000 fb60 	bl	8003e7c <_Bfree>
 80037bc:	46c2      	mov	sl, r8
 80037be:	9b08      	ldr	r3, [sp, #32]
 80037c0:	1b9a      	subs	r2, r3, r6
 80037c2:	d004      	beq.n	80037ce <_dtoa_r+0x7b6>
 80037c4:	4651      	mov	r1, sl
 80037c6:	4620      	mov	r0, r4
 80037c8:	f000 fd18 	bl	80041fc <__pow5mult>
 80037cc:	4682      	mov	sl, r0
 80037ce:	2101      	movs	r1, #1
 80037d0:	4620      	mov	r0, r4
 80037d2:	f000 fc53 	bl	800407c <__i2b>
 80037d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80037d8:	2b00      	cmp	r3, #0
 80037da:	4606      	mov	r6, r0
 80037dc:	f340 8081 	ble.w	80038e2 <_dtoa_r+0x8ca>
 80037e0:	461a      	mov	r2, r3
 80037e2:	4601      	mov	r1, r0
 80037e4:	4620      	mov	r0, r4
 80037e6:	f000 fd09 	bl	80041fc <__pow5mult>
 80037ea:	9b07      	ldr	r3, [sp, #28]
 80037ec:	2b01      	cmp	r3, #1
 80037ee:	4606      	mov	r6, r0
 80037f0:	dd7a      	ble.n	80038e8 <_dtoa_r+0x8d0>
 80037f2:	f04f 0800 	mov.w	r8, #0
 80037f6:	6933      	ldr	r3, [r6, #16]
 80037f8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80037fc:	6918      	ldr	r0, [r3, #16]
 80037fe:	f000 fbef 	bl	8003fe0 <__hi0bits>
 8003802:	f1c0 0020 	rsb	r0, r0, #32
 8003806:	9b06      	ldr	r3, [sp, #24]
 8003808:	4418      	add	r0, r3
 800380a:	f010 001f 	ands.w	r0, r0, #31
 800380e:	f000 8094 	beq.w	800393a <_dtoa_r+0x922>
 8003812:	f1c0 0320 	rsb	r3, r0, #32
 8003816:	2b04      	cmp	r3, #4
 8003818:	f340 8085 	ble.w	8003926 <_dtoa_r+0x90e>
 800381c:	9b05      	ldr	r3, [sp, #20]
 800381e:	f1c0 001c 	rsb	r0, r0, #28
 8003822:	4403      	add	r3, r0
 8003824:	9305      	str	r3, [sp, #20]
 8003826:	9b06      	ldr	r3, [sp, #24]
 8003828:	4403      	add	r3, r0
 800382a:	4405      	add	r5, r0
 800382c:	9306      	str	r3, [sp, #24]
 800382e:	9b05      	ldr	r3, [sp, #20]
 8003830:	2b00      	cmp	r3, #0
 8003832:	dd05      	ble.n	8003840 <_dtoa_r+0x828>
 8003834:	4651      	mov	r1, sl
 8003836:	461a      	mov	r2, r3
 8003838:	4620      	mov	r0, r4
 800383a:	f000 fd39 	bl	80042b0 <__lshift>
 800383e:	4682      	mov	sl, r0
 8003840:	9b06      	ldr	r3, [sp, #24]
 8003842:	2b00      	cmp	r3, #0
 8003844:	dd05      	ble.n	8003852 <_dtoa_r+0x83a>
 8003846:	4631      	mov	r1, r6
 8003848:	461a      	mov	r2, r3
 800384a:	4620      	mov	r0, r4
 800384c:	f000 fd30 	bl	80042b0 <__lshift>
 8003850:	4606      	mov	r6, r0
 8003852:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003854:	2b00      	cmp	r3, #0
 8003856:	d072      	beq.n	800393e <_dtoa_r+0x926>
 8003858:	4631      	mov	r1, r6
 800385a:	4650      	mov	r0, sl
 800385c:	f000 fd94 	bl	8004388 <__mcmp>
 8003860:	2800      	cmp	r0, #0
 8003862:	da6c      	bge.n	800393e <_dtoa_r+0x926>
 8003864:	2300      	movs	r3, #0
 8003866:	4651      	mov	r1, sl
 8003868:	220a      	movs	r2, #10
 800386a:	4620      	mov	r0, r4
 800386c:	f000 fb28 	bl	8003ec0 <__multadd>
 8003870:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003872:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003876:	4682      	mov	sl, r0
 8003878:	2b00      	cmp	r3, #0
 800387a:	f000 81b0 	beq.w	8003bde <_dtoa_r+0xbc6>
 800387e:	2300      	movs	r3, #0
 8003880:	4639      	mov	r1, r7
 8003882:	220a      	movs	r2, #10
 8003884:	4620      	mov	r0, r4
 8003886:	f000 fb1b 	bl	8003ec0 <__multadd>
 800388a:	9b01      	ldr	r3, [sp, #4]
 800388c:	2b00      	cmp	r3, #0
 800388e:	4607      	mov	r7, r0
 8003890:	f300 8096 	bgt.w	80039c0 <_dtoa_r+0x9a8>
 8003894:	9b07      	ldr	r3, [sp, #28]
 8003896:	2b02      	cmp	r3, #2
 8003898:	dc59      	bgt.n	800394e <_dtoa_r+0x936>
 800389a:	e091      	b.n	80039c0 <_dtoa_r+0x9a8>
 800389c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800389e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80038a2:	e758      	b.n	8003756 <_dtoa_r+0x73e>
 80038a4:	9b04      	ldr	r3, [sp, #16]
 80038a6:	1e5e      	subs	r6, r3, #1
 80038a8:	9b08      	ldr	r3, [sp, #32]
 80038aa:	42b3      	cmp	r3, r6
 80038ac:	bfbf      	itttt	lt
 80038ae:	9b08      	ldrlt	r3, [sp, #32]
 80038b0:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 80038b2:	9608      	strlt	r6, [sp, #32]
 80038b4:	1af3      	sublt	r3, r6, r3
 80038b6:	bfb4      	ite	lt
 80038b8:	18d2      	addlt	r2, r2, r3
 80038ba:	1b9e      	subge	r6, r3, r6
 80038bc:	9b04      	ldr	r3, [sp, #16]
 80038be:	bfbc      	itt	lt
 80038c0:	920b      	strlt	r2, [sp, #44]	; 0x2c
 80038c2:	2600      	movlt	r6, #0
 80038c4:	2b00      	cmp	r3, #0
 80038c6:	bfb7      	itett	lt
 80038c8:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 80038cc:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 80038d0:	1a9d      	sublt	r5, r3, r2
 80038d2:	2300      	movlt	r3, #0
 80038d4:	e741      	b.n	800375a <_dtoa_r+0x742>
 80038d6:	9e08      	ldr	r6, [sp, #32]
 80038d8:	9d05      	ldr	r5, [sp, #20]
 80038da:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80038dc:	e748      	b.n	8003770 <_dtoa_r+0x758>
 80038de:	9a08      	ldr	r2, [sp, #32]
 80038e0:	e770      	b.n	80037c4 <_dtoa_r+0x7ac>
 80038e2:	9b07      	ldr	r3, [sp, #28]
 80038e4:	2b01      	cmp	r3, #1
 80038e6:	dc19      	bgt.n	800391c <_dtoa_r+0x904>
 80038e8:	9b02      	ldr	r3, [sp, #8]
 80038ea:	b9bb      	cbnz	r3, 800391c <_dtoa_r+0x904>
 80038ec:	9b03      	ldr	r3, [sp, #12]
 80038ee:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80038f2:	b99b      	cbnz	r3, 800391c <_dtoa_r+0x904>
 80038f4:	9b03      	ldr	r3, [sp, #12]
 80038f6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80038fa:	0d1b      	lsrs	r3, r3, #20
 80038fc:	051b      	lsls	r3, r3, #20
 80038fe:	b183      	cbz	r3, 8003922 <_dtoa_r+0x90a>
 8003900:	9b05      	ldr	r3, [sp, #20]
 8003902:	3301      	adds	r3, #1
 8003904:	9305      	str	r3, [sp, #20]
 8003906:	9b06      	ldr	r3, [sp, #24]
 8003908:	3301      	adds	r3, #1
 800390a:	9306      	str	r3, [sp, #24]
 800390c:	f04f 0801 	mov.w	r8, #1
 8003910:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003912:	2b00      	cmp	r3, #0
 8003914:	f47f af6f 	bne.w	80037f6 <_dtoa_r+0x7de>
 8003918:	2001      	movs	r0, #1
 800391a:	e774      	b.n	8003806 <_dtoa_r+0x7ee>
 800391c:	f04f 0800 	mov.w	r8, #0
 8003920:	e7f6      	b.n	8003910 <_dtoa_r+0x8f8>
 8003922:	4698      	mov	r8, r3
 8003924:	e7f4      	b.n	8003910 <_dtoa_r+0x8f8>
 8003926:	d082      	beq.n	800382e <_dtoa_r+0x816>
 8003928:	9a05      	ldr	r2, [sp, #20]
 800392a:	331c      	adds	r3, #28
 800392c:	441a      	add	r2, r3
 800392e:	9205      	str	r2, [sp, #20]
 8003930:	9a06      	ldr	r2, [sp, #24]
 8003932:	441a      	add	r2, r3
 8003934:	441d      	add	r5, r3
 8003936:	9206      	str	r2, [sp, #24]
 8003938:	e779      	b.n	800382e <_dtoa_r+0x816>
 800393a:	4603      	mov	r3, r0
 800393c:	e7f4      	b.n	8003928 <_dtoa_r+0x910>
 800393e:	9b04      	ldr	r3, [sp, #16]
 8003940:	2b00      	cmp	r3, #0
 8003942:	dc37      	bgt.n	80039b4 <_dtoa_r+0x99c>
 8003944:	9b07      	ldr	r3, [sp, #28]
 8003946:	2b02      	cmp	r3, #2
 8003948:	dd34      	ble.n	80039b4 <_dtoa_r+0x99c>
 800394a:	9b04      	ldr	r3, [sp, #16]
 800394c:	9301      	str	r3, [sp, #4]
 800394e:	9b01      	ldr	r3, [sp, #4]
 8003950:	b963      	cbnz	r3, 800396c <_dtoa_r+0x954>
 8003952:	4631      	mov	r1, r6
 8003954:	2205      	movs	r2, #5
 8003956:	4620      	mov	r0, r4
 8003958:	f000 fab2 	bl	8003ec0 <__multadd>
 800395c:	4601      	mov	r1, r0
 800395e:	4606      	mov	r6, r0
 8003960:	4650      	mov	r0, sl
 8003962:	f000 fd11 	bl	8004388 <__mcmp>
 8003966:	2800      	cmp	r0, #0
 8003968:	f73f adbb 	bgt.w	80034e2 <_dtoa_r+0x4ca>
 800396c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800396e:	9d00      	ldr	r5, [sp, #0]
 8003970:	ea6f 0b03 	mvn.w	fp, r3
 8003974:	f04f 0800 	mov.w	r8, #0
 8003978:	4631      	mov	r1, r6
 800397a:	4620      	mov	r0, r4
 800397c:	f000 fa7e 	bl	8003e7c <_Bfree>
 8003980:	2f00      	cmp	r7, #0
 8003982:	f43f aeab 	beq.w	80036dc <_dtoa_r+0x6c4>
 8003986:	f1b8 0f00 	cmp.w	r8, #0
 800398a:	d005      	beq.n	8003998 <_dtoa_r+0x980>
 800398c:	45b8      	cmp	r8, r7
 800398e:	d003      	beq.n	8003998 <_dtoa_r+0x980>
 8003990:	4641      	mov	r1, r8
 8003992:	4620      	mov	r0, r4
 8003994:	f000 fa72 	bl	8003e7c <_Bfree>
 8003998:	4639      	mov	r1, r7
 800399a:	4620      	mov	r0, r4
 800399c:	f000 fa6e 	bl	8003e7c <_Bfree>
 80039a0:	e69c      	b.n	80036dc <_dtoa_r+0x6c4>
 80039a2:	2600      	movs	r6, #0
 80039a4:	4637      	mov	r7, r6
 80039a6:	e7e1      	b.n	800396c <_dtoa_r+0x954>
 80039a8:	46bb      	mov	fp, r7
 80039aa:	4637      	mov	r7, r6
 80039ac:	e599      	b.n	80034e2 <_dtoa_r+0x4ca>
 80039ae:	bf00      	nop
 80039b0:	40240000 	.word	0x40240000
 80039b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	f000 80c8 	beq.w	8003b4c <_dtoa_r+0xb34>
 80039bc:	9b04      	ldr	r3, [sp, #16]
 80039be:	9301      	str	r3, [sp, #4]
 80039c0:	2d00      	cmp	r5, #0
 80039c2:	dd05      	ble.n	80039d0 <_dtoa_r+0x9b8>
 80039c4:	4639      	mov	r1, r7
 80039c6:	462a      	mov	r2, r5
 80039c8:	4620      	mov	r0, r4
 80039ca:	f000 fc71 	bl	80042b0 <__lshift>
 80039ce:	4607      	mov	r7, r0
 80039d0:	f1b8 0f00 	cmp.w	r8, #0
 80039d4:	d05b      	beq.n	8003a8e <_dtoa_r+0xa76>
 80039d6:	6879      	ldr	r1, [r7, #4]
 80039d8:	4620      	mov	r0, r4
 80039da:	f000 fa0f 	bl	8003dfc <_Balloc>
 80039de:	4605      	mov	r5, r0
 80039e0:	b928      	cbnz	r0, 80039ee <_dtoa_r+0x9d6>
 80039e2:	4b83      	ldr	r3, [pc, #524]	; (8003bf0 <_dtoa_r+0xbd8>)
 80039e4:	4602      	mov	r2, r0
 80039e6:	f240 21ef 	movw	r1, #751	; 0x2ef
 80039ea:	f7ff bb2e 	b.w	800304a <_dtoa_r+0x32>
 80039ee:	693a      	ldr	r2, [r7, #16]
 80039f0:	3202      	adds	r2, #2
 80039f2:	0092      	lsls	r2, r2, #2
 80039f4:	f107 010c 	add.w	r1, r7, #12
 80039f8:	300c      	adds	r0, #12
 80039fa:	f001 ff85 	bl	8005908 <memcpy>
 80039fe:	2201      	movs	r2, #1
 8003a00:	4629      	mov	r1, r5
 8003a02:	4620      	mov	r0, r4
 8003a04:	f000 fc54 	bl	80042b0 <__lshift>
 8003a08:	9b00      	ldr	r3, [sp, #0]
 8003a0a:	3301      	adds	r3, #1
 8003a0c:	9304      	str	r3, [sp, #16]
 8003a0e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003a12:	4413      	add	r3, r2
 8003a14:	9308      	str	r3, [sp, #32]
 8003a16:	9b02      	ldr	r3, [sp, #8]
 8003a18:	f003 0301 	and.w	r3, r3, #1
 8003a1c:	46b8      	mov	r8, r7
 8003a1e:	9306      	str	r3, [sp, #24]
 8003a20:	4607      	mov	r7, r0
 8003a22:	9b04      	ldr	r3, [sp, #16]
 8003a24:	4631      	mov	r1, r6
 8003a26:	3b01      	subs	r3, #1
 8003a28:	4650      	mov	r0, sl
 8003a2a:	9301      	str	r3, [sp, #4]
 8003a2c:	f7ff fa6c 	bl	8002f08 <quorem>
 8003a30:	4641      	mov	r1, r8
 8003a32:	9002      	str	r0, [sp, #8]
 8003a34:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003a38:	4650      	mov	r0, sl
 8003a3a:	f000 fca5 	bl	8004388 <__mcmp>
 8003a3e:	463a      	mov	r2, r7
 8003a40:	9005      	str	r0, [sp, #20]
 8003a42:	4631      	mov	r1, r6
 8003a44:	4620      	mov	r0, r4
 8003a46:	f000 fcbb 	bl	80043c0 <__mdiff>
 8003a4a:	68c2      	ldr	r2, [r0, #12]
 8003a4c:	4605      	mov	r5, r0
 8003a4e:	bb02      	cbnz	r2, 8003a92 <_dtoa_r+0xa7a>
 8003a50:	4601      	mov	r1, r0
 8003a52:	4650      	mov	r0, sl
 8003a54:	f000 fc98 	bl	8004388 <__mcmp>
 8003a58:	4602      	mov	r2, r0
 8003a5a:	4629      	mov	r1, r5
 8003a5c:	4620      	mov	r0, r4
 8003a5e:	9209      	str	r2, [sp, #36]	; 0x24
 8003a60:	f000 fa0c 	bl	8003e7c <_Bfree>
 8003a64:	9b07      	ldr	r3, [sp, #28]
 8003a66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003a68:	9d04      	ldr	r5, [sp, #16]
 8003a6a:	ea43 0102 	orr.w	r1, r3, r2
 8003a6e:	9b06      	ldr	r3, [sp, #24]
 8003a70:	4319      	orrs	r1, r3
 8003a72:	d110      	bne.n	8003a96 <_dtoa_r+0xa7e>
 8003a74:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003a78:	d029      	beq.n	8003ace <_dtoa_r+0xab6>
 8003a7a:	9b05      	ldr	r3, [sp, #20]
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	dd02      	ble.n	8003a86 <_dtoa_r+0xa6e>
 8003a80:	9b02      	ldr	r3, [sp, #8]
 8003a82:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8003a86:	9b01      	ldr	r3, [sp, #4]
 8003a88:	f883 9000 	strb.w	r9, [r3]
 8003a8c:	e774      	b.n	8003978 <_dtoa_r+0x960>
 8003a8e:	4638      	mov	r0, r7
 8003a90:	e7ba      	b.n	8003a08 <_dtoa_r+0x9f0>
 8003a92:	2201      	movs	r2, #1
 8003a94:	e7e1      	b.n	8003a5a <_dtoa_r+0xa42>
 8003a96:	9b05      	ldr	r3, [sp, #20]
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	db04      	blt.n	8003aa6 <_dtoa_r+0xa8e>
 8003a9c:	9907      	ldr	r1, [sp, #28]
 8003a9e:	430b      	orrs	r3, r1
 8003aa0:	9906      	ldr	r1, [sp, #24]
 8003aa2:	430b      	orrs	r3, r1
 8003aa4:	d120      	bne.n	8003ae8 <_dtoa_r+0xad0>
 8003aa6:	2a00      	cmp	r2, #0
 8003aa8:	dded      	ble.n	8003a86 <_dtoa_r+0xa6e>
 8003aaa:	4651      	mov	r1, sl
 8003aac:	2201      	movs	r2, #1
 8003aae:	4620      	mov	r0, r4
 8003ab0:	f000 fbfe 	bl	80042b0 <__lshift>
 8003ab4:	4631      	mov	r1, r6
 8003ab6:	4682      	mov	sl, r0
 8003ab8:	f000 fc66 	bl	8004388 <__mcmp>
 8003abc:	2800      	cmp	r0, #0
 8003abe:	dc03      	bgt.n	8003ac8 <_dtoa_r+0xab0>
 8003ac0:	d1e1      	bne.n	8003a86 <_dtoa_r+0xa6e>
 8003ac2:	f019 0f01 	tst.w	r9, #1
 8003ac6:	d0de      	beq.n	8003a86 <_dtoa_r+0xa6e>
 8003ac8:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003acc:	d1d8      	bne.n	8003a80 <_dtoa_r+0xa68>
 8003ace:	9a01      	ldr	r2, [sp, #4]
 8003ad0:	2339      	movs	r3, #57	; 0x39
 8003ad2:	7013      	strb	r3, [r2, #0]
 8003ad4:	462b      	mov	r3, r5
 8003ad6:	461d      	mov	r5, r3
 8003ad8:	3b01      	subs	r3, #1
 8003ada:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003ade:	2a39      	cmp	r2, #57	; 0x39
 8003ae0:	d06c      	beq.n	8003bbc <_dtoa_r+0xba4>
 8003ae2:	3201      	adds	r2, #1
 8003ae4:	701a      	strb	r2, [r3, #0]
 8003ae6:	e747      	b.n	8003978 <_dtoa_r+0x960>
 8003ae8:	2a00      	cmp	r2, #0
 8003aea:	dd07      	ble.n	8003afc <_dtoa_r+0xae4>
 8003aec:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003af0:	d0ed      	beq.n	8003ace <_dtoa_r+0xab6>
 8003af2:	9a01      	ldr	r2, [sp, #4]
 8003af4:	f109 0301 	add.w	r3, r9, #1
 8003af8:	7013      	strb	r3, [r2, #0]
 8003afa:	e73d      	b.n	8003978 <_dtoa_r+0x960>
 8003afc:	9b04      	ldr	r3, [sp, #16]
 8003afe:	9a08      	ldr	r2, [sp, #32]
 8003b00:	f803 9c01 	strb.w	r9, [r3, #-1]
 8003b04:	4293      	cmp	r3, r2
 8003b06:	d043      	beq.n	8003b90 <_dtoa_r+0xb78>
 8003b08:	4651      	mov	r1, sl
 8003b0a:	2300      	movs	r3, #0
 8003b0c:	220a      	movs	r2, #10
 8003b0e:	4620      	mov	r0, r4
 8003b10:	f000 f9d6 	bl	8003ec0 <__multadd>
 8003b14:	45b8      	cmp	r8, r7
 8003b16:	4682      	mov	sl, r0
 8003b18:	f04f 0300 	mov.w	r3, #0
 8003b1c:	f04f 020a 	mov.w	r2, #10
 8003b20:	4641      	mov	r1, r8
 8003b22:	4620      	mov	r0, r4
 8003b24:	d107      	bne.n	8003b36 <_dtoa_r+0xb1e>
 8003b26:	f000 f9cb 	bl	8003ec0 <__multadd>
 8003b2a:	4680      	mov	r8, r0
 8003b2c:	4607      	mov	r7, r0
 8003b2e:	9b04      	ldr	r3, [sp, #16]
 8003b30:	3301      	adds	r3, #1
 8003b32:	9304      	str	r3, [sp, #16]
 8003b34:	e775      	b.n	8003a22 <_dtoa_r+0xa0a>
 8003b36:	f000 f9c3 	bl	8003ec0 <__multadd>
 8003b3a:	4639      	mov	r1, r7
 8003b3c:	4680      	mov	r8, r0
 8003b3e:	2300      	movs	r3, #0
 8003b40:	220a      	movs	r2, #10
 8003b42:	4620      	mov	r0, r4
 8003b44:	f000 f9bc 	bl	8003ec0 <__multadd>
 8003b48:	4607      	mov	r7, r0
 8003b4a:	e7f0      	b.n	8003b2e <_dtoa_r+0xb16>
 8003b4c:	9b04      	ldr	r3, [sp, #16]
 8003b4e:	9301      	str	r3, [sp, #4]
 8003b50:	9d00      	ldr	r5, [sp, #0]
 8003b52:	4631      	mov	r1, r6
 8003b54:	4650      	mov	r0, sl
 8003b56:	f7ff f9d7 	bl	8002f08 <quorem>
 8003b5a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003b5e:	9b00      	ldr	r3, [sp, #0]
 8003b60:	f805 9b01 	strb.w	r9, [r5], #1
 8003b64:	1aea      	subs	r2, r5, r3
 8003b66:	9b01      	ldr	r3, [sp, #4]
 8003b68:	4293      	cmp	r3, r2
 8003b6a:	dd07      	ble.n	8003b7c <_dtoa_r+0xb64>
 8003b6c:	4651      	mov	r1, sl
 8003b6e:	2300      	movs	r3, #0
 8003b70:	220a      	movs	r2, #10
 8003b72:	4620      	mov	r0, r4
 8003b74:	f000 f9a4 	bl	8003ec0 <__multadd>
 8003b78:	4682      	mov	sl, r0
 8003b7a:	e7ea      	b.n	8003b52 <_dtoa_r+0xb3a>
 8003b7c:	9b01      	ldr	r3, [sp, #4]
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	bfc8      	it	gt
 8003b82:	461d      	movgt	r5, r3
 8003b84:	9b00      	ldr	r3, [sp, #0]
 8003b86:	bfd8      	it	le
 8003b88:	2501      	movle	r5, #1
 8003b8a:	441d      	add	r5, r3
 8003b8c:	f04f 0800 	mov.w	r8, #0
 8003b90:	4651      	mov	r1, sl
 8003b92:	2201      	movs	r2, #1
 8003b94:	4620      	mov	r0, r4
 8003b96:	f000 fb8b 	bl	80042b0 <__lshift>
 8003b9a:	4631      	mov	r1, r6
 8003b9c:	4682      	mov	sl, r0
 8003b9e:	f000 fbf3 	bl	8004388 <__mcmp>
 8003ba2:	2800      	cmp	r0, #0
 8003ba4:	dc96      	bgt.n	8003ad4 <_dtoa_r+0xabc>
 8003ba6:	d102      	bne.n	8003bae <_dtoa_r+0xb96>
 8003ba8:	f019 0f01 	tst.w	r9, #1
 8003bac:	d192      	bne.n	8003ad4 <_dtoa_r+0xabc>
 8003bae:	462b      	mov	r3, r5
 8003bb0:	461d      	mov	r5, r3
 8003bb2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003bb6:	2a30      	cmp	r2, #48	; 0x30
 8003bb8:	d0fa      	beq.n	8003bb0 <_dtoa_r+0xb98>
 8003bba:	e6dd      	b.n	8003978 <_dtoa_r+0x960>
 8003bbc:	9a00      	ldr	r2, [sp, #0]
 8003bbe:	429a      	cmp	r2, r3
 8003bc0:	d189      	bne.n	8003ad6 <_dtoa_r+0xabe>
 8003bc2:	f10b 0b01 	add.w	fp, fp, #1
 8003bc6:	2331      	movs	r3, #49	; 0x31
 8003bc8:	e796      	b.n	8003af8 <_dtoa_r+0xae0>
 8003bca:	4b0a      	ldr	r3, [pc, #40]	; (8003bf4 <_dtoa_r+0xbdc>)
 8003bcc:	f7ff ba99 	b.w	8003102 <_dtoa_r+0xea>
 8003bd0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	f47f aa6d 	bne.w	80030b2 <_dtoa_r+0x9a>
 8003bd8:	4b07      	ldr	r3, [pc, #28]	; (8003bf8 <_dtoa_r+0xbe0>)
 8003bda:	f7ff ba92 	b.w	8003102 <_dtoa_r+0xea>
 8003bde:	9b01      	ldr	r3, [sp, #4]
 8003be0:	2b00      	cmp	r3, #0
 8003be2:	dcb5      	bgt.n	8003b50 <_dtoa_r+0xb38>
 8003be4:	9b07      	ldr	r3, [sp, #28]
 8003be6:	2b02      	cmp	r3, #2
 8003be8:	f73f aeb1 	bgt.w	800394e <_dtoa_r+0x936>
 8003bec:	e7b0      	b.n	8003b50 <_dtoa_r+0xb38>
 8003bee:	bf00      	nop
 8003bf0:	08006a84 	.word	0x08006a84
 8003bf4:	080069df 	.word	0x080069df
 8003bf8:	08006a08 	.word	0x08006a08

08003bfc <_free_r>:
 8003bfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003bfe:	2900      	cmp	r1, #0
 8003c00:	d044      	beq.n	8003c8c <_free_r+0x90>
 8003c02:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003c06:	9001      	str	r0, [sp, #4]
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	f1a1 0404 	sub.w	r4, r1, #4
 8003c0e:	bfb8      	it	lt
 8003c10:	18e4      	addlt	r4, r4, r3
 8003c12:	f000 f8e7 	bl	8003de4 <__malloc_lock>
 8003c16:	4a1e      	ldr	r2, [pc, #120]	; (8003c90 <_free_r+0x94>)
 8003c18:	9801      	ldr	r0, [sp, #4]
 8003c1a:	6813      	ldr	r3, [r2, #0]
 8003c1c:	b933      	cbnz	r3, 8003c2c <_free_r+0x30>
 8003c1e:	6063      	str	r3, [r4, #4]
 8003c20:	6014      	str	r4, [r2, #0]
 8003c22:	b003      	add	sp, #12
 8003c24:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003c28:	f000 b8e2 	b.w	8003df0 <__malloc_unlock>
 8003c2c:	42a3      	cmp	r3, r4
 8003c2e:	d908      	bls.n	8003c42 <_free_r+0x46>
 8003c30:	6825      	ldr	r5, [r4, #0]
 8003c32:	1961      	adds	r1, r4, r5
 8003c34:	428b      	cmp	r3, r1
 8003c36:	bf01      	itttt	eq
 8003c38:	6819      	ldreq	r1, [r3, #0]
 8003c3a:	685b      	ldreq	r3, [r3, #4]
 8003c3c:	1949      	addeq	r1, r1, r5
 8003c3e:	6021      	streq	r1, [r4, #0]
 8003c40:	e7ed      	b.n	8003c1e <_free_r+0x22>
 8003c42:	461a      	mov	r2, r3
 8003c44:	685b      	ldr	r3, [r3, #4]
 8003c46:	b10b      	cbz	r3, 8003c4c <_free_r+0x50>
 8003c48:	42a3      	cmp	r3, r4
 8003c4a:	d9fa      	bls.n	8003c42 <_free_r+0x46>
 8003c4c:	6811      	ldr	r1, [r2, #0]
 8003c4e:	1855      	adds	r5, r2, r1
 8003c50:	42a5      	cmp	r5, r4
 8003c52:	d10b      	bne.n	8003c6c <_free_r+0x70>
 8003c54:	6824      	ldr	r4, [r4, #0]
 8003c56:	4421      	add	r1, r4
 8003c58:	1854      	adds	r4, r2, r1
 8003c5a:	42a3      	cmp	r3, r4
 8003c5c:	6011      	str	r1, [r2, #0]
 8003c5e:	d1e0      	bne.n	8003c22 <_free_r+0x26>
 8003c60:	681c      	ldr	r4, [r3, #0]
 8003c62:	685b      	ldr	r3, [r3, #4]
 8003c64:	6053      	str	r3, [r2, #4]
 8003c66:	440c      	add	r4, r1
 8003c68:	6014      	str	r4, [r2, #0]
 8003c6a:	e7da      	b.n	8003c22 <_free_r+0x26>
 8003c6c:	d902      	bls.n	8003c74 <_free_r+0x78>
 8003c6e:	230c      	movs	r3, #12
 8003c70:	6003      	str	r3, [r0, #0]
 8003c72:	e7d6      	b.n	8003c22 <_free_r+0x26>
 8003c74:	6825      	ldr	r5, [r4, #0]
 8003c76:	1961      	adds	r1, r4, r5
 8003c78:	428b      	cmp	r3, r1
 8003c7a:	bf04      	itt	eq
 8003c7c:	6819      	ldreq	r1, [r3, #0]
 8003c7e:	685b      	ldreq	r3, [r3, #4]
 8003c80:	6063      	str	r3, [r4, #4]
 8003c82:	bf04      	itt	eq
 8003c84:	1949      	addeq	r1, r1, r5
 8003c86:	6021      	streq	r1, [r4, #0]
 8003c88:	6054      	str	r4, [r2, #4]
 8003c8a:	e7ca      	b.n	8003c22 <_free_r+0x26>
 8003c8c:	b003      	add	sp, #12
 8003c8e:	bd30      	pop	{r4, r5, pc}
 8003c90:	20000748 	.word	0x20000748

08003c94 <malloc>:
 8003c94:	4b02      	ldr	r3, [pc, #8]	; (8003ca0 <malloc+0xc>)
 8003c96:	4601      	mov	r1, r0
 8003c98:	6818      	ldr	r0, [r3, #0]
 8003c9a:	f000 b823 	b.w	8003ce4 <_malloc_r>
 8003c9e:	bf00      	nop
 8003ca0:	20000060 	.word	0x20000060

08003ca4 <sbrk_aligned>:
 8003ca4:	b570      	push	{r4, r5, r6, lr}
 8003ca6:	4e0e      	ldr	r6, [pc, #56]	; (8003ce0 <sbrk_aligned+0x3c>)
 8003ca8:	460c      	mov	r4, r1
 8003caa:	6831      	ldr	r1, [r6, #0]
 8003cac:	4605      	mov	r5, r0
 8003cae:	b911      	cbnz	r1, 8003cb6 <sbrk_aligned+0x12>
 8003cb0:	f001 fe1a 	bl	80058e8 <_sbrk_r>
 8003cb4:	6030      	str	r0, [r6, #0]
 8003cb6:	4621      	mov	r1, r4
 8003cb8:	4628      	mov	r0, r5
 8003cba:	f001 fe15 	bl	80058e8 <_sbrk_r>
 8003cbe:	1c43      	adds	r3, r0, #1
 8003cc0:	d00a      	beq.n	8003cd8 <sbrk_aligned+0x34>
 8003cc2:	1cc4      	adds	r4, r0, #3
 8003cc4:	f024 0403 	bic.w	r4, r4, #3
 8003cc8:	42a0      	cmp	r0, r4
 8003cca:	d007      	beq.n	8003cdc <sbrk_aligned+0x38>
 8003ccc:	1a21      	subs	r1, r4, r0
 8003cce:	4628      	mov	r0, r5
 8003cd0:	f001 fe0a 	bl	80058e8 <_sbrk_r>
 8003cd4:	3001      	adds	r0, #1
 8003cd6:	d101      	bne.n	8003cdc <sbrk_aligned+0x38>
 8003cd8:	f04f 34ff 	mov.w	r4, #4294967295
 8003cdc:	4620      	mov	r0, r4
 8003cde:	bd70      	pop	{r4, r5, r6, pc}
 8003ce0:	2000074c 	.word	0x2000074c

08003ce4 <_malloc_r>:
 8003ce4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003ce8:	1ccd      	adds	r5, r1, #3
 8003cea:	f025 0503 	bic.w	r5, r5, #3
 8003cee:	3508      	adds	r5, #8
 8003cf0:	2d0c      	cmp	r5, #12
 8003cf2:	bf38      	it	cc
 8003cf4:	250c      	movcc	r5, #12
 8003cf6:	2d00      	cmp	r5, #0
 8003cf8:	4607      	mov	r7, r0
 8003cfa:	db01      	blt.n	8003d00 <_malloc_r+0x1c>
 8003cfc:	42a9      	cmp	r1, r5
 8003cfe:	d905      	bls.n	8003d0c <_malloc_r+0x28>
 8003d00:	230c      	movs	r3, #12
 8003d02:	603b      	str	r3, [r7, #0]
 8003d04:	2600      	movs	r6, #0
 8003d06:	4630      	mov	r0, r6
 8003d08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003d0c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003de0 <_malloc_r+0xfc>
 8003d10:	f000 f868 	bl	8003de4 <__malloc_lock>
 8003d14:	f8d8 3000 	ldr.w	r3, [r8]
 8003d18:	461c      	mov	r4, r3
 8003d1a:	bb5c      	cbnz	r4, 8003d74 <_malloc_r+0x90>
 8003d1c:	4629      	mov	r1, r5
 8003d1e:	4638      	mov	r0, r7
 8003d20:	f7ff ffc0 	bl	8003ca4 <sbrk_aligned>
 8003d24:	1c43      	adds	r3, r0, #1
 8003d26:	4604      	mov	r4, r0
 8003d28:	d155      	bne.n	8003dd6 <_malloc_r+0xf2>
 8003d2a:	f8d8 4000 	ldr.w	r4, [r8]
 8003d2e:	4626      	mov	r6, r4
 8003d30:	2e00      	cmp	r6, #0
 8003d32:	d145      	bne.n	8003dc0 <_malloc_r+0xdc>
 8003d34:	2c00      	cmp	r4, #0
 8003d36:	d048      	beq.n	8003dca <_malloc_r+0xe6>
 8003d38:	6823      	ldr	r3, [r4, #0]
 8003d3a:	4631      	mov	r1, r6
 8003d3c:	4638      	mov	r0, r7
 8003d3e:	eb04 0903 	add.w	r9, r4, r3
 8003d42:	f001 fdd1 	bl	80058e8 <_sbrk_r>
 8003d46:	4581      	cmp	r9, r0
 8003d48:	d13f      	bne.n	8003dca <_malloc_r+0xe6>
 8003d4a:	6821      	ldr	r1, [r4, #0]
 8003d4c:	1a6d      	subs	r5, r5, r1
 8003d4e:	4629      	mov	r1, r5
 8003d50:	4638      	mov	r0, r7
 8003d52:	f7ff ffa7 	bl	8003ca4 <sbrk_aligned>
 8003d56:	3001      	adds	r0, #1
 8003d58:	d037      	beq.n	8003dca <_malloc_r+0xe6>
 8003d5a:	6823      	ldr	r3, [r4, #0]
 8003d5c:	442b      	add	r3, r5
 8003d5e:	6023      	str	r3, [r4, #0]
 8003d60:	f8d8 3000 	ldr.w	r3, [r8]
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d038      	beq.n	8003dda <_malloc_r+0xf6>
 8003d68:	685a      	ldr	r2, [r3, #4]
 8003d6a:	42a2      	cmp	r2, r4
 8003d6c:	d12b      	bne.n	8003dc6 <_malloc_r+0xe2>
 8003d6e:	2200      	movs	r2, #0
 8003d70:	605a      	str	r2, [r3, #4]
 8003d72:	e00f      	b.n	8003d94 <_malloc_r+0xb0>
 8003d74:	6822      	ldr	r2, [r4, #0]
 8003d76:	1b52      	subs	r2, r2, r5
 8003d78:	d41f      	bmi.n	8003dba <_malloc_r+0xd6>
 8003d7a:	2a0b      	cmp	r2, #11
 8003d7c:	d917      	bls.n	8003dae <_malloc_r+0xca>
 8003d7e:	1961      	adds	r1, r4, r5
 8003d80:	42a3      	cmp	r3, r4
 8003d82:	6025      	str	r5, [r4, #0]
 8003d84:	bf18      	it	ne
 8003d86:	6059      	strne	r1, [r3, #4]
 8003d88:	6863      	ldr	r3, [r4, #4]
 8003d8a:	bf08      	it	eq
 8003d8c:	f8c8 1000 	streq.w	r1, [r8]
 8003d90:	5162      	str	r2, [r4, r5]
 8003d92:	604b      	str	r3, [r1, #4]
 8003d94:	4638      	mov	r0, r7
 8003d96:	f104 060b 	add.w	r6, r4, #11
 8003d9a:	f000 f829 	bl	8003df0 <__malloc_unlock>
 8003d9e:	f026 0607 	bic.w	r6, r6, #7
 8003da2:	1d23      	adds	r3, r4, #4
 8003da4:	1af2      	subs	r2, r6, r3
 8003da6:	d0ae      	beq.n	8003d06 <_malloc_r+0x22>
 8003da8:	1b9b      	subs	r3, r3, r6
 8003daa:	50a3      	str	r3, [r4, r2]
 8003dac:	e7ab      	b.n	8003d06 <_malloc_r+0x22>
 8003dae:	42a3      	cmp	r3, r4
 8003db0:	6862      	ldr	r2, [r4, #4]
 8003db2:	d1dd      	bne.n	8003d70 <_malloc_r+0x8c>
 8003db4:	f8c8 2000 	str.w	r2, [r8]
 8003db8:	e7ec      	b.n	8003d94 <_malloc_r+0xb0>
 8003dba:	4623      	mov	r3, r4
 8003dbc:	6864      	ldr	r4, [r4, #4]
 8003dbe:	e7ac      	b.n	8003d1a <_malloc_r+0x36>
 8003dc0:	4634      	mov	r4, r6
 8003dc2:	6876      	ldr	r6, [r6, #4]
 8003dc4:	e7b4      	b.n	8003d30 <_malloc_r+0x4c>
 8003dc6:	4613      	mov	r3, r2
 8003dc8:	e7cc      	b.n	8003d64 <_malloc_r+0x80>
 8003dca:	230c      	movs	r3, #12
 8003dcc:	603b      	str	r3, [r7, #0]
 8003dce:	4638      	mov	r0, r7
 8003dd0:	f000 f80e 	bl	8003df0 <__malloc_unlock>
 8003dd4:	e797      	b.n	8003d06 <_malloc_r+0x22>
 8003dd6:	6025      	str	r5, [r4, #0]
 8003dd8:	e7dc      	b.n	8003d94 <_malloc_r+0xb0>
 8003dda:	605b      	str	r3, [r3, #4]
 8003ddc:	deff      	udf	#255	; 0xff
 8003dde:	bf00      	nop
 8003de0:	20000748 	.word	0x20000748

08003de4 <__malloc_lock>:
 8003de4:	4801      	ldr	r0, [pc, #4]	; (8003dec <__malloc_lock+0x8>)
 8003de6:	f7ff b886 	b.w	8002ef6 <__retarget_lock_acquire_recursive>
 8003dea:	bf00      	nop
 8003dec:	20000744 	.word	0x20000744

08003df0 <__malloc_unlock>:
 8003df0:	4801      	ldr	r0, [pc, #4]	; (8003df8 <__malloc_unlock+0x8>)
 8003df2:	f7ff b881 	b.w	8002ef8 <__retarget_lock_release_recursive>
 8003df6:	bf00      	nop
 8003df8:	20000744 	.word	0x20000744

08003dfc <_Balloc>:
 8003dfc:	b570      	push	{r4, r5, r6, lr}
 8003dfe:	69c6      	ldr	r6, [r0, #28]
 8003e00:	4604      	mov	r4, r0
 8003e02:	460d      	mov	r5, r1
 8003e04:	b976      	cbnz	r6, 8003e24 <_Balloc+0x28>
 8003e06:	2010      	movs	r0, #16
 8003e08:	f7ff ff44 	bl	8003c94 <malloc>
 8003e0c:	4602      	mov	r2, r0
 8003e0e:	61e0      	str	r0, [r4, #28]
 8003e10:	b920      	cbnz	r0, 8003e1c <_Balloc+0x20>
 8003e12:	4b18      	ldr	r3, [pc, #96]	; (8003e74 <_Balloc+0x78>)
 8003e14:	4818      	ldr	r0, [pc, #96]	; (8003e78 <_Balloc+0x7c>)
 8003e16:	216b      	movs	r1, #107	; 0x6b
 8003e18:	f001 fd8e 	bl	8005938 <__assert_func>
 8003e1c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003e20:	6006      	str	r6, [r0, #0]
 8003e22:	60c6      	str	r6, [r0, #12]
 8003e24:	69e6      	ldr	r6, [r4, #28]
 8003e26:	68f3      	ldr	r3, [r6, #12]
 8003e28:	b183      	cbz	r3, 8003e4c <_Balloc+0x50>
 8003e2a:	69e3      	ldr	r3, [r4, #28]
 8003e2c:	68db      	ldr	r3, [r3, #12]
 8003e2e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003e32:	b9b8      	cbnz	r0, 8003e64 <_Balloc+0x68>
 8003e34:	2101      	movs	r1, #1
 8003e36:	fa01 f605 	lsl.w	r6, r1, r5
 8003e3a:	1d72      	adds	r2, r6, #5
 8003e3c:	0092      	lsls	r2, r2, #2
 8003e3e:	4620      	mov	r0, r4
 8003e40:	f001 fd98 	bl	8005974 <_calloc_r>
 8003e44:	b160      	cbz	r0, 8003e60 <_Balloc+0x64>
 8003e46:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003e4a:	e00e      	b.n	8003e6a <_Balloc+0x6e>
 8003e4c:	2221      	movs	r2, #33	; 0x21
 8003e4e:	2104      	movs	r1, #4
 8003e50:	4620      	mov	r0, r4
 8003e52:	f001 fd8f 	bl	8005974 <_calloc_r>
 8003e56:	69e3      	ldr	r3, [r4, #28]
 8003e58:	60f0      	str	r0, [r6, #12]
 8003e5a:	68db      	ldr	r3, [r3, #12]
 8003e5c:	2b00      	cmp	r3, #0
 8003e5e:	d1e4      	bne.n	8003e2a <_Balloc+0x2e>
 8003e60:	2000      	movs	r0, #0
 8003e62:	bd70      	pop	{r4, r5, r6, pc}
 8003e64:	6802      	ldr	r2, [r0, #0]
 8003e66:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003e6a:	2300      	movs	r3, #0
 8003e6c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003e70:	e7f7      	b.n	8003e62 <_Balloc+0x66>
 8003e72:	bf00      	nop
 8003e74:	08006a15 	.word	0x08006a15
 8003e78:	08006a95 	.word	0x08006a95

08003e7c <_Bfree>:
 8003e7c:	b570      	push	{r4, r5, r6, lr}
 8003e7e:	69c6      	ldr	r6, [r0, #28]
 8003e80:	4605      	mov	r5, r0
 8003e82:	460c      	mov	r4, r1
 8003e84:	b976      	cbnz	r6, 8003ea4 <_Bfree+0x28>
 8003e86:	2010      	movs	r0, #16
 8003e88:	f7ff ff04 	bl	8003c94 <malloc>
 8003e8c:	4602      	mov	r2, r0
 8003e8e:	61e8      	str	r0, [r5, #28]
 8003e90:	b920      	cbnz	r0, 8003e9c <_Bfree+0x20>
 8003e92:	4b09      	ldr	r3, [pc, #36]	; (8003eb8 <_Bfree+0x3c>)
 8003e94:	4809      	ldr	r0, [pc, #36]	; (8003ebc <_Bfree+0x40>)
 8003e96:	218f      	movs	r1, #143	; 0x8f
 8003e98:	f001 fd4e 	bl	8005938 <__assert_func>
 8003e9c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003ea0:	6006      	str	r6, [r0, #0]
 8003ea2:	60c6      	str	r6, [r0, #12]
 8003ea4:	b13c      	cbz	r4, 8003eb6 <_Bfree+0x3a>
 8003ea6:	69eb      	ldr	r3, [r5, #28]
 8003ea8:	6862      	ldr	r2, [r4, #4]
 8003eaa:	68db      	ldr	r3, [r3, #12]
 8003eac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003eb0:	6021      	str	r1, [r4, #0]
 8003eb2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003eb6:	bd70      	pop	{r4, r5, r6, pc}
 8003eb8:	08006a15 	.word	0x08006a15
 8003ebc:	08006a95 	.word	0x08006a95

08003ec0 <__multadd>:
 8003ec0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ec4:	690d      	ldr	r5, [r1, #16]
 8003ec6:	4607      	mov	r7, r0
 8003ec8:	460c      	mov	r4, r1
 8003eca:	461e      	mov	r6, r3
 8003ecc:	f101 0c14 	add.w	ip, r1, #20
 8003ed0:	2000      	movs	r0, #0
 8003ed2:	f8dc 3000 	ldr.w	r3, [ip]
 8003ed6:	b299      	uxth	r1, r3
 8003ed8:	fb02 6101 	mla	r1, r2, r1, r6
 8003edc:	0c1e      	lsrs	r6, r3, #16
 8003ede:	0c0b      	lsrs	r3, r1, #16
 8003ee0:	fb02 3306 	mla	r3, r2, r6, r3
 8003ee4:	b289      	uxth	r1, r1
 8003ee6:	3001      	adds	r0, #1
 8003ee8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003eec:	4285      	cmp	r5, r0
 8003eee:	f84c 1b04 	str.w	r1, [ip], #4
 8003ef2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003ef6:	dcec      	bgt.n	8003ed2 <__multadd+0x12>
 8003ef8:	b30e      	cbz	r6, 8003f3e <__multadd+0x7e>
 8003efa:	68a3      	ldr	r3, [r4, #8]
 8003efc:	42ab      	cmp	r3, r5
 8003efe:	dc19      	bgt.n	8003f34 <__multadd+0x74>
 8003f00:	6861      	ldr	r1, [r4, #4]
 8003f02:	4638      	mov	r0, r7
 8003f04:	3101      	adds	r1, #1
 8003f06:	f7ff ff79 	bl	8003dfc <_Balloc>
 8003f0a:	4680      	mov	r8, r0
 8003f0c:	b928      	cbnz	r0, 8003f1a <__multadd+0x5a>
 8003f0e:	4602      	mov	r2, r0
 8003f10:	4b0c      	ldr	r3, [pc, #48]	; (8003f44 <__multadd+0x84>)
 8003f12:	480d      	ldr	r0, [pc, #52]	; (8003f48 <__multadd+0x88>)
 8003f14:	21ba      	movs	r1, #186	; 0xba
 8003f16:	f001 fd0f 	bl	8005938 <__assert_func>
 8003f1a:	6922      	ldr	r2, [r4, #16]
 8003f1c:	3202      	adds	r2, #2
 8003f1e:	f104 010c 	add.w	r1, r4, #12
 8003f22:	0092      	lsls	r2, r2, #2
 8003f24:	300c      	adds	r0, #12
 8003f26:	f001 fcef 	bl	8005908 <memcpy>
 8003f2a:	4621      	mov	r1, r4
 8003f2c:	4638      	mov	r0, r7
 8003f2e:	f7ff ffa5 	bl	8003e7c <_Bfree>
 8003f32:	4644      	mov	r4, r8
 8003f34:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003f38:	3501      	adds	r5, #1
 8003f3a:	615e      	str	r6, [r3, #20]
 8003f3c:	6125      	str	r5, [r4, #16]
 8003f3e:	4620      	mov	r0, r4
 8003f40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f44:	08006a84 	.word	0x08006a84
 8003f48:	08006a95 	.word	0x08006a95

08003f4c <__s2b>:
 8003f4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f50:	460c      	mov	r4, r1
 8003f52:	4615      	mov	r5, r2
 8003f54:	461f      	mov	r7, r3
 8003f56:	2209      	movs	r2, #9
 8003f58:	3308      	adds	r3, #8
 8003f5a:	4606      	mov	r6, r0
 8003f5c:	fb93 f3f2 	sdiv	r3, r3, r2
 8003f60:	2100      	movs	r1, #0
 8003f62:	2201      	movs	r2, #1
 8003f64:	429a      	cmp	r2, r3
 8003f66:	db09      	blt.n	8003f7c <__s2b+0x30>
 8003f68:	4630      	mov	r0, r6
 8003f6a:	f7ff ff47 	bl	8003dfc <_Balloc>
 8003f6e:	b940      	cbnz	r0, 8003f82 <__s2b+0x36>
 8003f70:	4602      	mov	r2, r0
 8003f72:	4b19      	ldr	r3, [pc, #100]	; (8003fd8 <__s2b+0x8c>)
 8003f74:	4819      	ldr	r0, [pc, #100]	; (8003fdc <__s2b+0x90>)
 8003f76:	21d3      	movs	r1, #211	; 0xd3
 8003f78:	f001 fcde 	bl	8005938 <__assert_func>
 8003f7c:	0052      	lsls	r2, r2, #1
 8003f7e:	3101      	adds	r1, #1
 8003f80:	e7f0      	b.n	8003f64 <__s2b+0x18>
 8003f82:	9b08      	ldr	r3, [sp, #32]
 8003f84:	6143      	str	r3, [r0, #20]
 8003f86:	2d09      	cmp	r5, #9
 8003f88:	f04f 0301 	mov.w	r3, #1
 8003f8c:	6103      	str	r3, [r0, #16]
 8003f8e:	dd16      	ble.n	8003fbe <__s2b+0x72>
 8003f90:	f104 0909 	add.w	r9, r4, #9
 8003f94:	46c8      	mov	r8, r9
 8003f96:	442c      	add	r4, r5
 8003f98:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003f9c:	4601      	mov	r1, r0
 8003f9e:	3b30      	subs	r3, #48	; 0x30
 8003fa0:	220a      	movs	r2, #10
 8003fa2:	4630      	mov	r0, r6
 8003fa4:	f7ff ff8c 	bl	8003ec0 <__multadd>
 8003fa8:	45a0      	cmp	r8, r4
 8003faa:	d1f5      	bne.n	8003f98 <__s2b+0x4c>
 8003fac:	f1a5 0408 	sub.w	r4, r5, #8
 8003fb0:	444c      	add	r4, r9
 8003fb2:	1b2d      	subs	r5, r5, r4
 8003fb4:	1963      	adds	r3, r4, r5
 8003fb6:	42bb      	cmp	r3, r7
 8003fb8:	db04      	blt.n	8003fc4 <__s2b+0x78>
 8003fba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003fbe:	340a      	adds	r4, #10
 8003fc0:	2509      	movs	r5, #9
 8003fc2:	e7f6      	b.n	8003fb2 <__s2b+0x66>
 8003fc4:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003fc8:	4601      	mov	r1, r0
 8003fca:	3b30      	subs	r3, #48	; 0x30
 8003fcc:	220a      	movs	r2, #10
 8003fce:	4630      	mov	r0, r6
 8003fd0:	f7ff ff76 	bl	8003ec0 <__multadd>
 8003fd4:	e7ee      	b.n	8003fb4 <__s2b+0x68>
 8003fd6:	bf00      	nop
 8003fd8:	08006a84 	.word	0x08006a84
 8003fdc:	08006a95 	.word	0x08006a95

08003fe0 <__hi0bits>:
 8003fe0:	0c03      	lsrs	r3, r0, #16
 8003fe2:	041b      	lsls	r3, r3, #16
 8003fe4:	b9d3      	cbnz	r3, 800401c <__hi0bits+0x3c>
 8003fe6:	0400      	lsls	r0, r0, #16
 8003fe8:	2310      	movs	r3, #16
 8003fea:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8003fee:	bf04      	itt	eq
 8003ff0:	0200      	lsleq	r0, r0, #8
 8003ff2:	3308      	addeq	r3, #8
 8003ff4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003ff8:	bf04      	itt	eq
 8003ffa:	0100      	lsleq	r0, r0, #4
 8003ffc:	3304      	addeq	r3, #4
 8003ffe:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8004002:	bf04      	itt	eq
 8004004:	0080      	lsleq	r0, r0, #2
 8004006:	3302      	addeq	r3, #2
 8004008:	2800      	cmp	r0, #0
 800400a:	db05      	blt.n	8004018 <__hi0bits+0x38>
 800400c:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8004010:	f103 0301 	add.w	r3, r3, #1
 8004014:	bf08      	it	eq
 8004016:	2320      	moveq	r3, #32
 8004018:	4618      	mov	r0, r3
 800401a:	4770      	bx	lr
 800401c:	2300      	movs	r3, #0
 800401e:	e7e4      	b.n	8003fea <__hi0bits+0xa>

08004020 <__lo0bits>:
 8004020:	6803      	ldr	r3, [r0, #0]
 8004022:	f013 0207 	ands.w	r2, r3, #7
 8004026:	d00c      	beq.n	8004042 <__lo0bits+0x22>
 8004028:	07d9      	lsls	r1, r3, #31
 800402a:	d422      	bmi.n	8004072 <__lo0bits+0x52>
 800402c:	079a      	lsls	r2, r3, #30
 800402e:	bf49      	itett	mi
 8004030:	085b      	lsrmi	r3, r3, #1
 8004032:	089b      	lsrpl	r3, r3, #2
 8004034:	6003      	strmi	r3, [r0, #0]
 8004036:	2201      	movmi	r2, #1
 8004038:	bf5c      	itt	pl
 800403a:	6003      	strpl	r3, [r0, #0]
 800403c:	2202      	movpl	r2, #2
 800403e:	4610      	mov	r0, r2
 8004040:	4770      	bx	lr
 8004042:	b299      	uxth	r1, r3
 8004044:	b909      	cbnz	r1, 800404a <__lo0bits+0x2a>
 8004046:	0c1b      	lsrs	r3, r3, #16
 8004048:	2210      	movs	r2, #16
 800404a:	b2d9      	uxtb	r1, r3
 800404c:	b909      	cbnz	r1, 8004052 <__lo0bits+0x32>
 800404e:	3208      	adds	r2, #8
 8004050:	0a1b      	lsrs	r3, r3, #8
 8004052:	0719      	lsls	r1, r3, #28
 8004054:	bf04      	itt	eq
 8004056:	091b      	lsreq	r3, r3, #4
 8004058:	3204      	addeq	r2, #4
 800405a:	0799      	lsls	r1, r3, #30
 800405c:	bf04      	itt	eq
 800405e:	089b      	lsreq	r3, r3, #2
 8004060:	3202      	addeq	r2, #2
 8004062:	07d9      	lsls	r1, r3, #31
 8004064:	d403      	bmi.n	800406e <__lo0bits+0x4e>
 8004066:	085b      	lsrs	r3, r3, #1
 8004068:	f102 0201 	add.w	r2, r2, #1
 800406c:	d003      	beq.n	8004076 <__lo0bits+0x56>
 800406e:	6003      	str	r3, [r0, #0]
 8004070:	e7e5      	b.n	800403e <__lo0bits+0x1e>
 8004072:	2200      	movs	r2, #0
 8004074:	e7e3      	b.n	800403e <__lo0bits+0x1e>
 8004076:	2220      	movs	r2, #32
 8004078:	e7e1      	b.n	800403e <__lo0bits+0x1e>
	...

0800407c <__i2b>:
 800407c:	b510      	push	{r4, lr}
 800407e:	460c      	mov	r4, r1
 8004080:	2101      	movs	r1, #1
 8004082:	f7ff febb 	bl	8003dfc <_Balloc>
 8004086:	4602      	mov	r2, r0
 8004088:	b928      	cbnz	r0, 8004096 <__i2b+0x1a>
 800408a:	4b05      	ldr	r3, [pc, #20]	; (80040a0 <__i2b+0x24>)
 800408c:	4805      	ldr	r0, [pc, #20]	; (80040a4 <__i2b+0x28>)
 800408e:	f240 1145 	movw	r1, #325	; 0x145
 8004092:	f001 fc51 	bl	8005938 <__assert_func>
 8004096:	2301      	movs	r3, #1
 8004098:	6144      	str	r4, [r0, #20]
 800409a:	6103      	str	r3, [r0, #16]
 800409c:	bd10      	pop	{r4, pc}
 800409e:	bf00      	nop
 80040a0:	08006a84 	.word	0x08006a84
 80040a4:	08006a95 	.word	0x08006a95

080040a8 <__multiply>:
 80040a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040ac:	4691      	mov	r9, r2
 80040ae:	690a      	ldr	r2, [r1, #16]
 80040b0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80040b4:	429a      	cmp	r2, r3
 80040b6:	bfb8      	it	lt
 80040b8:	460b      	movlt	r3, r1
 80040ba:	460c      	mov	r4, r1
 80040bc:	bfbc      	itt	lt
 80040be:	464c      	movlt	r4, r9
 80040c0:	4699      	movlt	r9, r3
 80040c2:	6927      	ldr	r7, [r4, #16]
 80040c4:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80040c8:	68a3      	ldr	r3, [r4, #8]
 80040ca:	6861      	ldr	r1, [r4, #4]
 80040cc:	eb07 060a 	add.w	r6, r7, sl
 80040d0:	42b3      	cmp	r3, r6
 80040d2:	b085      	sub	sp, #20
 80040d4:	bfb8      	it	lt
 80040d6:	3101      	addlt	r1, #1
 80040d8:	f7ff fe90 	bl	8003dfc <_Balloc>
 80040dc:	b930      	cbnz	r0, 80040ec <__multiply+0x44>
 80040de:	4602      	mov	r2, r0
 80040e0:	4b44      	ldr	r3, [pc, #272]	; (80041f4 <__multiply+0x14c>)
 80040e2:	4845      	ldr	r0, [pc, #276]	; (80041f8 <__multiply+0x150>)
 80040e4:	f44f 71b1 	mov.w	r1, #354	; 0x162
 80040e8:	f001 fc26 	bl	8005938 <__assert_func>
 80040ec:	f100 0514 	add.w	r5, r0, #20
 80040f0:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80040f4:	462b      	mov	r3, r5
 80040f6:	2200      	movs	r2, #0
 80040f8:	4543      	cmp	r3, r8
 80040fa:	d321      	bcc.n	8004140 <__multiply+0x98>
 80040fc:	f104 0314 	add.w	r3, r4, #20
 8004100:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8004104:	f109 0314 	add.w	r3, r9, #20
 8004108:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800410c:	9202      	str	r2, [sp, #8]
 800410e:	1b3a      	subs	r2, r7, r4
 8004110:	3a15      	subs	r2, #21
 8004112:	f022 0203 	bic.w	r2, r2, #3
 8004116:	3204      	adds	r2, #4
 8004118:	f104 0115 	add.w	r1, r4, #21
 800411c:	428f      	cmp	r7, r1
 800411e:	bf38      	it	cc
 8004120:	2204      	movcc	r2, #4
 8004122:	9201      	str	r2, [sp, #4]
 8004124:	9a02      	ldr	r2, [sp, #8]
 8004126:	9303      	str	r3, [sp, #12]
 8004128:	429a      	cmp	r2, r3
 800412a:	d80c      	bhi.n	8004146 <__multiply+0x9e>
 800412c:	2e00      	cmp	r6, #0
 800412e:	dd03      	ble.n	8004138 <__multiply+0x90>
 8004130:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004134:	2b00      	cmp	r3, #0
 8004136:	d05b      	beq.n	80041f0 <__multiply+0x148>
 8004138:	6106      	str	r6, [r0, #16]
 800413a:	b005      	add	sp, #20
 800413c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004140:	f843 2b04 	str.w	r2, [r3], #4
 8004144:	e7d8      	b.n	80040f8 <__multiply+0x50>
 8004146:	f8b3 a000 	ldrh.w	sl, [r3]
 800414a:	f1ba 0f00 	cmp.w	sl, #0
 800414e:	d024      	beq.n	800419a <__multiply+0xf2>
 8004150:	f104 0e14 	add.w	lr, r4, #20
 8004154:	46a9      	mov	r9, r5
 8004156:	f04f 0c00 	mov.w	ip, #0
 800415a:	f85e 2b04 	ldr.w	r2, [lr], #4
 800415e:	f8d9 1000 	ldr.w	r1, [r9]
 8004162:	fa1f fb82 	uxth.w	fp, r2
 8004166:	b289      	uxth	r1, r1
 8004168:	fb0a 110b 	mla	r1, sl, fp, r1
 800416c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8004170:	f8d9 2000 	ldr.w	r2, [r9]
 8004174:	4461      	add	r1, ip
 8004176:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800417a:	fb0a c20b 	mla	r2, sl, fp, ip
 800417e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8004182:	b289      	uxth	r1, r1
 8004184:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004188:	4577      	cmp	r7, lr
 800418a:	f849 1b04 	str.w	r1, [r9], #4
 800418e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8004192:	d8e2      	bhi.n	800415a <__multiply+0xb2>
 8004194:	9a01      	ldr	r2, [sp, #4]
 8004196:	f845 c002 	str.w	ip, [r5, r2]
 800419a:	9a03      	ldr	r2, [sp, #12]
 800419c:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80041a0:	3304      	adds	r3, #4
 80041a2:	f1b9 0f00 	cmp.w	r9, #0
 80041a6:	d021      	beq.n	80041ec <__multiply+0x144>
 80041a8:	6829      	ldr	r1, [r5, #0]
 80041aa:	f104 0c14 	add.w	ip, r4, #20
 80041ae:	46ae      	mov	lr, r5
 80041b0:	f04f 0a00 	mov.w	sl, #0
 80041b4:	f8bc b000 	ldrh.w	fp, [ip]
 80041b8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80041bc:	fb09 220b 	mla	r2, r9, fp, r2
 80041c0:	4452      	add	r2, sl
 80041c2:	b289      	uxth	r1, r1
 80041c4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80041c8:	f84e 1b04 	str.w	r1, [lr], #4
 80041cc:	f85c 1b04 	ldr.w	r1, [ip], #4
 80041d0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80041d4:	f8be 1000 	ldrh.w	r1, [lr]
 80041d8:	fb09 110a 	mla	r1, r9, sl, r1
 80041dc:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80041e0:	4567      	cmp	r7, ip
 80041e2:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80041e6:	d8e5      	bhi.n	80041b4 <__multiply+0x10c>
 80041e8:	9a01      	ldr	r2, [sp, #4]
 80041ea:	50a9      	str	r1, [r5, r2]
 80041ec:	3504      	adds	r5, #4
 80041ee:	e799      	b.n	8004124 <__multiply+0x7c>
 80041f0:	3e01      	subs	r6, #1
 80041f2:	e79b      	b.n	800412c <__multiply+0x84>
 80041f4:	08006a84 	.word	0x08006a84
 80041f8:	08006a95 	.word	0x08006a95

080041fc <__pow5mult>:
 80041fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004200:	4615      	mov	r5, r2
 8004202:	f012 0203 	ands.w	r2, r2, #3
 8004206:	4606      	mov	r6, r0
 8004208:	460f      	mov	r7, r1
 800420a:	d007      	beq.n	800421c <__pow5mult+0x20>
 800420c:	4c25      	ldr	r4, [pc, #148]	; (80042a4 <__pow5mult+0xa8>)
 800420e:	3a01      	subs	r2, #1
 8004210:	2300      	movs	r3, #0
 8004212:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004216:	f7ff fe53 	bl	8003ec0 <__multadd>
 800421a:	4607      	mov	r7, r0
 800421c:	10ad      	asrs	r5, r5, #2
 800421e:	d03d      	beq.n	800429c <__pow5mult+0xa0>
 8004220:	69f4      	ldr	r4, [r6, #28]
 8004222:	b97c      	cbnz	r4, 8004244 <__pow5mult+0x48>
 8004224:	2010      	movs	r0, #16
 8004226:	f7ff fd35 	bl	8003c94 <malloc>
 800422a:	4602      	mov	r2, r0
 800422c:	61f0      	str	r0, [r6, #28]
 800422e:	b928      	cbnz	r0, 800423c <__pow5mult+0x40>
 8004230:	4b1d      	ldr	r3, [pc, #116]	; (80042a8 <__pow5mult+0xac>)
 8004232:	481e      	ldr	r0, [pc, #120]	; (80042ac <__pow5mult+0xb0>)
 8004234:	f240 11b3 	movw	r1, #435	; 0x1b3
 8004238:	f001 fb7e 	bl	8005938 <__assert_func>
 800423c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004240:	6004      	str	r4, [r0, #0]
 8004242:	60c4      	str	r4, [r0, #12]
 8004244:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8004248:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800424c:	b94c      	cbnz	r4, 8004262 <__pow5mult+0x66>
 800424e:	f240 2171 	movw	r1, #625	; 0x271
 8004252:	4630      	mov	r0, r6
 8004254:	f7ff ff12 	bl	800407c <__i2b>
 8004258:	2300      	movs	r3, #0
 800425a:	f8c8 0008 	str.w	r0, [r8, #8]
 800425e:	4604      	mov	r4, r0
 8004260:	6003      	str	r3, [r0, #0]
 8004262:	f04f 0900 	mov.w	r9, #0
 8004266:	07eb      	lsls	r3, r5, #31
 8004268:	d50a      	bpl.n	8004280 <__pow5mult+0x84>
 800426a:	4639      	mov	r1, r7
 800426c:	4622      	mov	r2, r4
 800426e:	4630      	mov	r0, r6
 8004270:	f7ff ff1a 	bl	80040a8 <__multiply>
 8004274:	4639      	mov	r1, r7
 8004276:	4680      	mov	r8, r0
 8004278:	4630      	mov	r0, r6
 800427a:	f7ff fdff 	bl	8003e7c <_Bfree>
 800427e:	4647      	mov	r7, r8
 8004280:	106d      	asrs	r5, r5, #1
 8004282:	d00b      	beq.n	800429c <__pow5mult+0xa0>
 8004284:	6820      	ldr	r0, [r4, #0]
 8004286:	b938      	cbnz	r0, 8004298 <__pow5mult+0x9c>
 8004288:	4622      	mov	r2, r4
 800428a:	4621      	mov	r1, r4
 800428c:	4630      	mov	r0, r6
 800428e:	f7ff ff0b 	bl	80040a8 <__multiply>
 8004292:	6020      	str	r0, [r4, #0]
 8004294:	f8c0 9000 	str.w	r9, [r0]
 8004298:	4604      	mov	r4, r0
 800429a:	e7e4      	b.n	8004266 <__pow5mult+0x6a>
 800429c:	4638      	mov	r0, r7
 800429e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80042a2:	bf00      	nop
 80042a4:	08006be0 	.word	0x08006be0
 80042a8:	08006a15 	.word	0x08006a15
 80042ac:	08006a95 	.word	0x08006a95

080042b0 <__lshift>:
 80042b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80042b4:	460c      	mov	r4, r1
 80042b6:	6849      	ldr	r1, [r1, #4]
 80042b8:	6923      	ldr	r3, [r4, #16]
 80042ba:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80042be:	68a3      	ldr	r3, [r4, #8]
 80042c0:	4607      	mov	r7, r0
 80042c2:	4691      	mov	r9, r2
 80042c4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80042c8:	f108 0601 	add.w	r6, r8, #1
 80042cc:	42b3      	cmp	r3, r6
 80042ce:	db0b      	blt.n	80042e8 <__lshift+0x38>
 80042d0:	4638      	mov	r0, r7
 80042d2:	f7ff fd93 	bl	8003dfc <_Balloc>
 80042d6:	4605      	mov	r5, r0
 80042d8:	b948      	cbnz	r0, 80042ee <__lshift+0x3e>
 80042da:	4602      	mov	r2, r0
 80042dc:	4b28      	ldr	r3, [pc, #160]	; (8004380 <__lshift+0xd0>)
 80042de:	4829      	ldr	r0, [pc, #164]	; (8004384 <__lshift+0xd4>)
 80042e0:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80042e4:	f001 fb28 	bl	8005938 <__assert_func>
 80042e8:	3101      	adds	r1, #1
 80042ea:	005b      	lsls	r3, r3, #1
 80042ec:	e7ee      	b.n	80042cc <__lshift+0x1c>
 80042ee:	2300      	movs	r3, #0
 80042f0:	f100 0114 	add.w	r1, r0, #20
 80042f4:	f100 0210 	add.w	r2, r0, #16
 80042f8:	4618      	mov	r0, r3
 80042fa:	4553      	cmp	r3, sl
 80042fc:	db33      	blt.n	8004366 <__lshift+0xb6>
 80042fe:	6920      	ldr	r0, [r4, #16]
 8004300:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004304:	f104 0314 	add.w	r3, r4, #20
 8004308:	f019 091f 	ands.w	r9, r9, #31
 800430c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004310:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004314:	d02b      	beq.n	800436e <__lshift+0xbe>
 8004316:	f1c9 0e20 	rsb	lr, r9, #32
 800431a:	468a      	mov	sl, r1
 800431c:	2200      	movs	r2, #0
 800431e:	6818      	ldr	r0, [r3, #0]
 8004320:	fa00 f009 	lsl.w	r0, r0, r9
 8004324:	4310      	orrs	r0, r2
 8004326:	f84a 0b04 	str.w	r0, [sl], #4
 800432a:	f853 2b04 	ldr.w	r2, [r3], #4
 800432e:	459c      	cmp	ip, r3
 8004330:	fa22 f20e 	lsr.w	r2, r2, lr
 8004334:	d8f3      	bhi.n	800431e <__lshift+0x6e>
 8004336:	ebac 0304 	sub.w	r3, ip, r4
 800433a:	3b15      	subs	r3, #21
 800433c:	f023 0303 	bic.w	r3, r3, #3
 8004340:	3304      	adds	r3, #4
 8004342:	f104 0015 	add.w	r0, r4, #21
 8004346:	4584      	cmp	ip, r0
 8004348:	bf38      	it	cc
 800434a:	2304      	movcc	r3, #4
 800434c:	50ca      	str	r2, [r1, r3]
 800434e:	b10a      	cbz	r2, 8004354 <__lshift+0xa4>
 8004350:	f108 0602 	add.w	r6, r8, #2
 8004354:	3e01      	subs	r6, #1
 8004356:	4638      	mov	r0, r7
 8004358:	612e      	str	r6, [r5, #16]
 800435a:	4621      	mov	r1, r4
 800435c:	f7ff fd8e 	bl	8003e7c <_Bfree>
 8004360:	4628      	mov	r0, r5
 8004362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004366:	f842 0f04 	str.w	r0, [r2, #4]!
 800436a:	3301      	adds	r3, #1
 800436c:	e7c5      	b.n	80042fa <__lshift+0x4a>
 800436e:	3904      	subs	r1, #4
 8004370:	f853 2b04 	ldr.w	r2, [r3], #4
 8004374:	f841 2f04 	str.w	r2, [r1, #4]!
 8004378:	459c      	cmp	ip, r3
 800437a:	d8f9      	bhi.n	8004370 <__lshift+0xc0>
 800437c:	e7ea      	b.n	8004354 <__lshift+0xa4>
 800437e:	bf00      	nop
 8004380:	08006a84 	.word	0x08006a84
 8004384:	08006a95 	.word	0x08006a95

08004388 <__mcmp>:
 8004388:	b530      	push	{r4, r5, lr}
 800438a:	6902      	ldr	r2, [r0, #16]
 800438c:	690c      	ldr	r4, [r1, #16]
 800438e:	1b12      	subs	r2, r2, r4
 8004390:	d10e      	bne.n	80043b0 <__mcmp+0x28>
 8004392:	f100 0314 	add.w	r3, r0, #20
 8004396:	3114      	adds	r1, #20
 8004398:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800439c:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80043a0:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80043a4:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80043a8:	42a5      	cmp	r5, r4
 80043aa:	d003      	beq.n	80043b4 <__mcmp+0x2c>
 80043ac:	d305      	bcc.n	80043ba <__mcmp+0x32>
 80043ae:	2201      	movs	r2, #1
 80043b0:	4610      	mov	r0, r2
 80043b2:	bd30      	pop	{r4, r5, pc}
 80043b4:	4283      	cmp	r3, r0
 80043b6:	d3f3      	bcc.n	80043a0 <__mcmp+0x18>
 80043b8:	e7fa      	b.n	80043b0 <__mcmp+0x28>
 80043ba:	f04f 32ff 	mov.w	r2, #4294967295
 80043be:	e7f7      	b.n	80043b0 <__mcmp+0x28>

080043c0 <__mdiff>:
 80043c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043c4:	460c      	mov	r4, r1
 80043c6:	4606      	mov	r6, r0
 80043c8:	4611      	mov	r1, r2
 80043ca:	4620      	mov	r0, r4
 80043cc:	4690      	mov	r8, r2
 80043ce:	f7ff ffdb 	bl	8004388 <__mcmp>
 80043d2:	1e05      	subs	r5, r0, #0
 80043d4:	d110      	bne.n	80043f8 <__mdiff+0x38>
 80043d6:	4629      	mov	r1, r5
 80043d8:	4630      	mov	r0, r6
 80043da:	f7ff fd0f 	bl	8003dfc <_Balloc>
 80043de:	b930      	cbnz	r0, 80043ee <__mdiff+0x2e>
 80043e0:	4b3a      	ldr	r3, [pc, #232]	; (80044cc <__mdiff+0x10c>)
 80043e2:	4602      	mov	r2, r0
 80043e4:	f240 2137 	movw	r1, #567	; 0x237
 80043e8:	4839      	ldr	r0, [pc, #228]	; (80044d0 <__mdiff+0x110>)
 80043ea:	f001 faa5 	bl	8005938 <__assert_func>
 80043ee:	2301      	movs	r3, #1
 80043f0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80043f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043f8:	bfa4      	itt	ge
 80043fa:	4643      	movge	r3, r8
 80043fc:	46a0      	movge	r8, r4
 80043fe:	4630      	mov	r0, r6
 8004400:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8004404:	bfa6      	itte	ge
 8004406:	461c      	movge	r4, r3
 8004408:	2500      	movge	r5, #0
 800440a:	2501      	movlt	r5, #1
 800440c:	f7ff fcf6 	bl	8003dfc <_Balloc>
 8004410:	b920      	cbnz	r0, 800441c <__mdiff+0x5c>
 8004412:	4b2e      	ldr	r3, [pc, #184]	; (80044cc <__mdiff+0x10c>)
 8004414:	4602      	mov	r2, r0
 8004416:	f240 2145 	movw	r1, #581	; 0x245
 800441a:	e7e5      	b.n	80043e8 <__mdiff+0x28>
 800441c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8004420:	6926      	ldr	r6, [r4, #16]
 8004422:	60c5      	str	r5, [r0, #12]
 8004424:	f104 0914 	add.w	r9, r4, #20
 8004428:	f108 0514 	add.w	r5, r8, #20
 800442c:	f100 0e14 	add.w	lr, r0, #20
 8004430:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8004434:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8004438:	f108 0210 	add.w	r2, r8, #16
 800443c:	46f2      	mov	sl, lr
 800443e:	2100      	movs	r1, #0
 8004440:	f859 3b04 	ldr.w	r3, [r9], #4
 8004444:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8004448:	fa11 f88b 	uxtah	r8, r1, fp
 800444c:	b299      	uxth	r1, r3
 800444e:	0c1b      	lsrs	r3, r3, #16
 8004450:	eba8 0801 	sub.w	r8, r8, r1
 8004454:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8004458:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800445c:	fa1f f888 	uxth.w	r8, r8
 8004460:	1419      	asrs	r1, r3, #16
 8004462:	454e      	cmp	r6, r9
 8004464:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8004468:	f84a 3b04 	str.w	r3, [sl], #4
 800446c:	d8e8      	bhi.n	8004440 <__mdiff+0x80>
 800446e:	1b33      	subs	r3, r6, r4
 8004470:	3b15      	subs	r3, #21
 8004472:	f023 0303 	bic.w	r3, r3, #3
 8004476:	3304      	adds	r3, #4
 8004478:	3415      	adds	r4, #21
 800447a:	42a6      	cmp	r6, r4
 800447c:	bf38      	it	cc
 800447e:	2304      	movcc	r3, #4
 8004480:	441d      	add	r5, r3
 8004482:	4473      	add	r3, lr
 8004484:	469e      	mov	lr, r3
 8004486:	462e      	mov	r6, r5
 8004488:	4566      	cmp	r6, ip
 800448a:	d30e      	bcc.n	80044aa <__mdiff+0xea>
 800448c:	f10c 0203 	add.w	r2, ip, #3
 8004490:	1b52      	subs	r2, r2, r5
 8004492:	f022 0203 	bic.w	r2, r2, #3
 8004496:	3d03      	subs	r5, #3
 8004498:	45ac      	cmp	ip, r5
 800449a:	bf38      	it	cc
 800449c:	2200      	movcc	r2, #0
 800449e:	4413      	add	r3, r2
 80044a0:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80044a4:	b17a      	cbz	r2, 80044c6 <__mdiff+0x106>
 80044a6:	6107      	str	r7, [r0, #16]
 80044a8:	e7a4      	b.n	80043f4 <__mdiff+0x34>
 80044aa:	f856 8b04 	ldr.w	r8, [r6], #4
 80044ae:	fa11 f288 	uxtah	r2, r1, r8
 80044b2:	1414      	asrs	r4, r2, #16
 80044b4:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80044b8:	b292      	uxth	r2, r2
 80044ba:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80044be:	f84e 2b04 	str.w	r2, [lr], #4
 80044c2:	1421      	asrs	r1, r4, #16
 80044c4:	e7e0      	b.n	8004488 <__mdiff+0xc8>
 80044c6:	3f01      	subs	r7, #1
 80044c8:	e7ea      	b.n	80044a0 <__mdiff+0xe0>
 80044ca:	bf00      	nop
 80044cc:	08006a84 	.word	0x08006a84
 80044d0:	08006a95 	.word	0x08006a95

080044d4 <__ulp>:
 80044d4:	b082      	sub	sp, #8
 80044d6:	ed8d 0b00 	vstr	d0, [sp]
 80044da:	9a01      	ldr	r2, [sp, #4]
 80044dc:	4b0f      	ldr	r3, [pc, #60]	; (800451c <__ulp+0x48>)
 80044de:	4013      	ands	r3, r2
 80044e0:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	dc08      	bgt.n	80044fa <__ulp+0x26>
 80044e8:	425b      	negs	r3, r3
 80044ea:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 80044ee:	ea4f 5223 	mov.w	r2, r3, asr #20
 80044f2:	da04      	bge.n	80044fe <__ulp+0x2a>
 80044f4:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80044f8:	4113      	asrs	r3, r2
 80044fa:	2200      	movs	r2, #0
 80044fc:	e008      	b.n	8004510 <__ulp+0x3c>
 80044fe:	f1a2 0314 	sub.w	r3, r2, #20
 8004502:	2b1e      	cmp	r3, #30
 8004504:	bfda      	itte	le
 8004506:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800450a:	40da      	lsrle	r2, r3
 800450c:	2201      	movgt	r2, #1
 800450e:	2300      	movs	r3, #0
 8004510:	4619      	mov	r1, r3
 8004512:	4610      	mov	r0, r2
 8004514:	ec41 0b10 	vmov	d0, r0, r1
 8004518:	b002      	add	sp, #8
 800451a:	4770      	bx	lr
 800451c:	7ff00000 	.word	0x7ff00000

08004520 <__b2d>:
 8004520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004524:	6906      	ldr	r6, [r0, #16]
 8004526:	f100 0814 	add.w	r8, r0, #20
 800452a:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800452e:	1f37      	subs	r7, r6, #4
 8004530:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004534:	4610      	mov	r0, r2
 8004536:	f7ff fd53 	bl	8003fe0 <__hi0bits>
 800453a:	f1c0 0320 	rsb	r3, r0, #32
 800453e:	280a      	cmp	r0, #10
 8004540:	600b      	str	r3, [r1, #0]
 8004542:	491b      	ldr	r1, [pc, #108]	; (80045b0 <__b2d+0x90>)
 8004544:	dc15      	bgt.n	8004572 <__b2d+0x52>
 8004546:	f1c0 0c0b 	rsb	ip, r0, #11
 800454a:	fa22 f30c 	lsr.w	r3, r2, ip
 800454e:	45b8      	cmp	r8, r7
 8004550:	ea43 0501 	orr.w	r5, r3, r1
 8004554:	bf34      	ite	cc
 8004556:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800455a:	2300      	movcs	r3, #0
 800455c:	3015      	adds	r0, #21
 800455e:	fa02 f000 	lsl.w	r0, r2, r0
 8004562:	fa23 f30c 	lsr.w	r3, r3, ip
 8004566:	4303      	orrs	r3, r0
 8004568:	461c      	mov	r4, r3
 800456a:	ec45 4b10 	vmov	d0, r4, r5
 800456e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004572:	45b8      	cmp	r8, r7
 8004574:	bf3a      	itte	cc
 8004576:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800457a:	f1a6 0708 	subcc.w	r7, r6, #8
 800457e:	2300      	movcs	r3, #0
 8004580:	380b      	subs	r0, #11
 8004582:	d012      	beq.n	80045aa <__b2d+0x8a>
 8004584:	f1c0 0120 	rsb	r1, r0, #32
 8004588:	fa23 f401 	lsr.w	r4, r3, r1
 800458c:	4082      	lsls	r2, r0
 800458e:	4322      	orrs	r2, r4
 8004590:	4547      	cmp	r7, r8
 8004592:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 8004596:	bf8c      	ite	hi
 8004598:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800459c:	2200      	movls	r2, #0
 800459e:	4083      	lsls	r3, r0
 80045a0:	40ca      	lsrs	r2, r1
 80045a2:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80045a6:	4313      	orrs	r3, r2
 80045a8:	e7de      	b.n	8004568 <__b2d+0x48>
 80045aa:	ea42 0501 	orr.w	r5, r2, r1
 80045ae:	e7db      	b.n	8004568 <__b2d+0x48>
 80045b0:	3ff00000 	.word	0x3ff00000

080045b4 <__d2b>:
 80045b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80045b8:	460f      	mov	r7, r1
 80045ba:	2101      	movs	r1, #1
 80045bc:	ec59 8b10 	vmov	r8, r9, d0
 80045c0:	4616      	mov	r6, r2
 80045c2:	f7ff fc1b 	bl	8003dfc <_Balloc>
 80045c6:	4604      	mov	r4, r0
 80045c8:	b930      	cbnz	r0, 80045d8 <__d2b+0x24>
 80045ca:	4602      	mov	r2, r0
 80045cc:	4b24      	ldr	r3, [pc, #144]	; (8004660 <__d2b+0xac>)
 80045ce:	4825      	ldr	r0, [pc, #148]	; (8004664 <__d2b+0xb0>)
 80045d0:	f240 310f 	movw	r1, #783	; 0x30f
 80045d4:	f001 f9b0 	bl	8005938 <__assert_func>
 80045d8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80045dc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80045e0:	bb2d      	cbnz	r5, 800462e <__d2b+0x7a>
 80045e2:	9301      	str	r3, [sp, #4]
 80045e4:	f1b8 0300 	subs.w	r3, r8, #0
 80045e8:	d026      	beq.n	8004638 <__d2b+0x84>
 80045ea:	4668      	mov	r0, sp
 80045ec:	9300      	str	r3, [sp, #0]
 80045ee:	f7ff fd17 	bl	8004020 <__lo0bits>
 80045f2:	e9dd 1200 	ldrd	r1, r2, [sp]
 80045f6:	b1e8      	cbz	r0, 8004634 <__d2b+0x80>
 80045f8:	f1c0 0320 	rsb	r3, r0, #32
 80045fc:	fa02 f303 	lsl.w	r3, r2, r3
 8004600:	430b      	orrs	r3, r1
 8004602:	40c2      	lsrs	r2, r0
 8004604:	6163      	str	r3, [r4, #20]
 8004606:	9201      	str	r2, [sp, #4]
 8004608:	9b01      	ldr	r3, [sp, #4]
 800460a:	61a3      	str	r3, [r4, #24]
 800460c:	2b00      	cmp	r3, #0
 800460e:	bf14      	ite	ne
 8004610:	2202      	movne	r2, #2
 8004612:	2201      	moveq	r2, #1
 8004614:	6122      	str	r2, [r4, #16]
 8004616:	b1bd      	cbz	r5, 8004648 <__d2b+0x94>
 8004618:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800461c:	4405      	add	r5, r0
 800461e:	603d      	str	r5, [r7, #0]
 8004620:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004624:	6030      	str	r0, [r6, #0]
 8004626:	4620      	mov	r0, r4
 8004628:	b003      	add	sp, #12
 800462a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800462e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004632:	e7d6      	b.n	80045e2 <__d2b+0x2e>
 8004634:	6161      	str	r1, [r4, #20]
 8004636:	e7e7      	b.n	8004608 <__d2b+0x54>
 8004638:	a801      	add	r0, sp, #4
 800463a:	f7ff fcf1 	bl	8004020 <__lo0bits>
 800463e:	9b01      	ldr	r3, [sp, #4]
 8004640:	6163      	str	r3, [r4, #20]
 8004642:	3020      	adds	r0, #32
 8004644:	2201      	movs	r2, #1
 8004646:	e7e5      	b.n	8004614 <__d2b+0x60>
 8004648:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800464c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004650:	6038      	str	r0, [r7, #0]
 8004652:	6918      	ldr	r0, [r3, #16]
 8004654:	f7ff fcc4 	bl	8003fe0 <__hi0bits>
 8004658:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800465c:	e7e2      	b.n	8004624 <__d2b+0x70>
 800465e:	bf00      	nop
 8004660:	08006a84 	.word	0x08006a84
 8004664:	08006a95 	.word	0x08006a95

08004668 <__ratio>:
 8004668:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800466c:	4688      	mov	r8, r1
 800466e:	4669      	mov	r1, sp
 8004670:	4681      	mov	r9, r0
 8004672:	f7ff ff55 	bl	8004520 <__b2d>
 8004676:	a901      	add	r1, sp, #4
 8004678:	4640      	mov	r0, r8
 800467a:	ec55 4b10 	vmov	r4, r5, d0
 800467e:	f7ff ff4f 	bl	8004520 <__b2d>
 8004682:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004686:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800468a:	eba3 0c02 	sub.w	ip, r3, r2
 800468e:	e9dd 3200 	ldrd	r3, r2, [sp]
 8004692:	1a9b      	subs	r3, r3, r2
 8004694:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8004698:	ec51 0b10 	vmov	r0, r1, d0
 800469c:	2b00      	cmp	r3, #0
 800469e:	bfd6      	itet	le
 80046a0:	460a      	movle	r2, r1
 80046a2:	462a      	movgt	r2, r5
 80046a4:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80046a8:	468b      	mov	fp, r1
 80046aa:	462f      	mov	r7, r5
 80046ac:	bfd4      	ite	le
 80046ae:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 80046b2:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 80046b6:	4620      	mov	r0, r4
 80046b8:	ee10 2a10 	vmov	r2, s0
 80046bc:	465b      	mov	r3, fp
 80046be:	4639      	mov	r1, r7
 80046c0:	f7fc f8c4 	bl	800084c <__aeabi_ddiv>
 80046c4:	ec41 0b10 	vmov	d0, r0, r1
 80046c8:	b003      	add	sp, #12
 80046ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080046ce <__copybits>:
 80046ce:	3901      	subs	r1, #1
 80046d0:	b570      	push	{r4, r5, r6, lr}
 80046d2:	1149      	asrs	r1, r1, #5
 80046d4:	6914      	ldr	r4, [r2, #16]
 80046d6:	3101      	adds	r1, #1
 80046d8:	f102 0314 	add.w	r3, r2, #20
 80046dc:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80046e0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80046e4:	1f05      	subs	r5, r0, #4
 80046e6:	42a3      	cmp	r3, r4
 80046e8:	d30c      	bcc.n	8004704 <__copybits+0x36>
 80046ea:	1aa3      	subs	r3, r4, r2
 80046ec:	3b11      	subs	r3, #17
 80046ee:	f023 0303 	bic.w	r3, r3, #3
 80046f2:	3211      	adds	r2, #17
 80046f4:	42a2      	cmp	r2, r4
 80046f6:	bf88      	it	hi
 80046f8:	2300      	movhi	r3, #0
 80046fa:	4418      	add	r0, r3
 80046fc:	2300      	movs	r3, #0
 80046fe:	4288      	cmp	r0, r1
 8004700:	d305      	bcc.n	800470e <__copybits+0x40>
 8004702:	bd70      	pop	{r4, r5, r6, pc}
 8004704:	f853 6b04 	ldr.w	r6, [r3], #4
 8004708:	f845 6f04 	str.w	r6, [r5, #4]!
 800470c:	e7eb      	b.n	80046e6 <__copybits+0x18>
 800470e:	f840 3b04 	str.w	r3, [r0], #4
 8004712:	e7f4      	b.n	80046fe <__copybits+0x30>

08004714 <__any_on>:
 8004714:	f100 0214 	add.w	r2, r0, #20
 8004718:	6900      	ldr	r0, [r0, #16]
 800471a:	114b      	asrs	r3, r1, #5
 800471c:	4298      	cmp	r0, r3
 800471e:	b510      	push	{r4, lr}
 8004720:	db11      	blt.n	8004746 <__any_on+0x32>
 8004722:	dd0a      	ble.n	800473a <__any_on+0x26>
 8004724:	f011 011f 	ands.w	r1, r1, #31
 8004728:	d007      	beq.n	800473a <__any_on+0x26>
 800472a:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800472e:	fa24 f001 	lsr.w	r0, r4, r1
 8004732:	fa00 f101 	lsl.w	r1, r0, r1
 8004736:	428c      	cmp	r4, r1
 8004738:	d10b      	bne.n	8004752 <__any_on+0x3e>
 800473a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800473e:	4293      	cmp	r3, r2
 8004740:	d803      	bhi.n	800474a <__any_on+0x36>
 8004742:	2000      	movs	r0, #0
 8004744:	bd10      	pop	{r4, pc}
 8004746:	4603      	mov	r3, r0
 8004748:	e7f7      	b.n	800473a <__any_on+0x26>
 800474a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800474e:	2900      	cmp	r1, #0
 8004750:	d0f5      	beq.n	800473e <__any_on+0x2a>
 8004752:	2001      	movs	r0, #1
 8004754:	e7f6      	b.n	8004744 <__any_on+0x30>

08004756 <sulp>:
 8004756:	b570      	push	{r4, r5, r6, lr}
 8004758:	4604      	mov	r4, r0
 800475a:	460d      	mov	r5, r1
 800475c:	ec45 4b10 	vmov	d0, r4, r5
 8004760:	4616      	mov	r6, r2
 8004762:	f7ff feb7 	bl	80044d4 <__ulp>
 8004766:	ec51 0b10 	vmov	r0, r1, d0
 800476a:	b17e      	cbz	r6, 800478c <sulp+0x36>
 800476c:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8004770:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004774:	2b00      	cmp	r3, #0
 8004776:	dd09      	ble.n	800478c <sulp+0x36>
 8004778:	051b      	lsls	r3, r3, #20
 800477a:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800477e:	2400      	movs	r4, #0
 8004780:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8004784:	4622      	mov	r2, r4
 8004786:	462b      	mov	r3, r5
 8004788:	f7fb ff36 	bl	80005f8 <__aeabi_dmul>
 800478c:	bd70      	pop	{r4, r5, r6, pc}
	...

08004790 <_strtod_l>:
 8004790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004794:	ed2d 8b02 	vpush	{d8}
 8004798:	b09b      	sub	sp, #108	; 0x6c
 800479a:	4604      	mov	r4, r0
 800479c:	9213      	str	r2, [sp, #76]	; 0x4c
 800479e:	2200      	movs	r2, #0
 80047a0:	9216      	str	r2, [sp, #88]	; 0x58
 80047a2:	460d      	mov	r5, r1
 80047a4:	f04f 0800 	mov.w	r8, #0
 80047a8:	f04f 0900 	mov.w	r9, #0
 80047ac:	460a      	mov	r2, r1
 80047ae:	9215      	str	r2, [sp, #84]	; 0x54
 80047b0:	7811      	ldrb	r1, [r2, #0]
 80047b2:	292b      	cmp	r1, #43	; 0x2b
 80047b4:	d04c      	beq.n	8004850 <_strtod_l+0xc0>
 80047b6:	d83a      	bhi.n	800482e <_strtod_l+0x9e>
 80047b8:	290d      	cmp	r1, #13
 80047ba:	d834      	bhi.n	8004826 <_strtod_l+0x96>
 80047bc:	2908      	cmp	r1, #8
 80047be:	d834      	bhi.n	800482a <_strtod_l+0x9a>
 80047c0:	2900      	cmp	r1, #0
 80047c2:	d03d      	beq.n	8004840 <_strtod_l+0xb0>
 80047c4:	2200      	movs	r2, #0
 80047c6:	920a      	str	r2, [sp, #40]	; 0x28
 80047c8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80047ca:	7832      	ldrb	r2, [r6, #0]
 80047cc:	2a30      	cmp	r2, #48	; 0x30
 80047ce:	f040 80b4 	bne.w	800493a <_strtod_l+0x1aa>
 80047d2:	7872      	ldrb	r2, [r6, #1]
 80047d4:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 80047d8:	2a58      	cmp	r2, #88	; 0x58
 80047da:	d170      	bne.n	80048be <_strtod_l+0x12e>
 80047dc:	9302      	str	r3, [sp, #8]
 80047de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80047e0:	9301      	str	r3, [sp, #4]
 80047e2:	ab16      	add	r3, sp, #88	; 0x58
 80047e4:	9300      	str	r3, [sp, #0]
 80047e6:	4a8e      	ldr	r2, [pc, #568]	; (8004a20 <_strtod_l+0x290>)
 80047e8:	ab17      	add	r3, sp, #92	; 0x5c
 80047ea:	a915      	add	r1, sp, #84	; 0x54
 80047ec:	4620      	mov	r0, r4
 80047ee:	f001 f93f 	bl	8005a70 <__gethex>
 80047f2:	f010 070f 	ands.w	r7, r0, #15
 80047f6:	4605      	mov	r5, r0
 80047f8:	d005      	beq.n	8004806 <_strtod_l+0x76>
 80047fa:	2f06      	cmp	r7, #6
 80047fc:	d12a      	bne.n	8004854 <_strtod_l+0xc4>
 80047fe:	3601      	adds	r6, #1
 8004800:	2300      	movs	r3, #0
 8004802:	9615      	str	r6, [sp, #84]	; 0x54
 8004804:	930a      	str	r3, [sp, #40]	; 0x28
 8004806:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004808:	2b00      	cmp	r3, #0
 800480a:	f040 857f 	bne.w	800530c <_strtod_l+0xb7c>
 800480e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004810:	b1db      	cbz	r3, 800484a <_strtod_l+0xba>
 8004812:	4642      	mov	r2, r8
 8004814:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8004818:	ec43 2b10 	vmov	d0, r2, r3
 800481c:	b01b      	add	sp, #108	; 0x6c
 800481e:	ecbd 8b02 	vpop	{d8}
 8004822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004826:	2920      	cmp	r1, #32
 8004828:	d1cc      	bne.n	80047c4 <_strtod_l+0x34>
 800482a:	3201      	adds	r2, #1
 800482c:	e7bf      	b.n	80047ae <_strtod_l+0x1e>
 800482e:	292d      	cmp	r1, #45	; 0x2d
 8004830:	d1c8      	bne.n	80047c4 <_strtod_l+0x34>
 8004832:	2101      	movs	r1, #1
 8004834:	910a      	str	r1, [sp, #40]	; 0x28
 8004836:	1c51      	adds	r1, r2, #1
 8004838:	9115      	str	r1, [sp, #84]	; 0x54
 800483a:	7852      	ldrb	r2, [r2, #1]
 800483c:	2a00      	cmp	r2, #0
 800483e:	d1c3      	bne.n	80047c8 <_strtod_l+0x38>
 8004840:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004842:	9515      	str	r5, [sp, #84]	; 0x54
 8004844:	2b00      	cmp	r3, #0
 8004846:	f040 855f 	bne.w	8005308 <_strtod_l+0xb78>
 800484a:	4642      	mov	r2, r8
 800484c:	464b      	mov	r3, r9
 800484e:	e7e3      	b.n	8004818 <_strtod_l+0x88>
 8004850:	2100      	movs	r1, #0
 8004852:	e7ef      	b.n	8004834 <_strtod_l+0xa4>
 8004854:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004856:	b13a      	cbz	r2, 8004868 <_strtod_l+0xd8>
 8004858:	2135      	movs	r1, #53	; 0x35
 800485a:	a818      	add	r0, sp, #96	; 0x60
 800485c:	f7ff ff37 	bl	80046ce <__copybits>
 8004860:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004862:	4620      	mov	r0, r4
 8004864:	f7ff fb0a 	bl	8003e7c <_Bfree>
 8004868:	3f01      	subs	r7, #1
 800486a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800486c:	2f04      	cmp	r7, #4
 800486e:	d806      	bhi.n	800487e <_strtod_l+0xee>
 8004870:	e8df f007 	tbb	[pc, r7]
 8004874:	201d0314 	.word	0x201d0314
 8004878:	14          	.byte	0x14
 8004879:	00          	.byte	0x00
 800487a:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 800487e:	05e9      	lsls	r1, r5, #23
 8004880:	bf48      	it	mi
 8004882:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 8004886:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800488a:	0d1b      	lsrs	r3, r3, #20
 800488c:	051b      	lsls	r3, r3, #20
 800488e:	2b00      	cmp	r3, #0
 8004890:	d1b9      	bne.n	8004806 <_strtod_l+0x76>
 8004892:	f7fe fb05 	bl	8002ea0 <__errno>
 8004896:	2322      	movs	r3, #34	; 0x22
 8004898:	6003      	str	r3, [r0, #0]
 800489a:	e7b4      	b.n	8004806 <_strtod_l+0x76>
 800489c:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 80048a0:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80048a4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80048a8:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 80048ac:	e7e7      	b.n	800487e <_strtod_l+0xee>
 80048ae:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8004a28 <_strtod_l+0x298>
 80048b2:	e7e4      	b.n	800487e <_strtod_l+0xee>
 80048b4:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 80048b8:	f04f 38ff 	mov.w	r8, #4294967295
 80048bc:	e7df      	b.n	800487e <_strtod_l+0xee>
 80048be:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80048c0:	1c5a      	adds	r2, r3, #1
 80048c2:	9215      	str	r2, [sp, #84]	; 0x54
 80048c4:	785b      	ldrb	r3, [r3, #1]
 80048c6:	2b30      	cmp	r3, #48	; 0x30
 80048c8:	d0f9      	beq.n	80048be <_strtod_l+0x12e>
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	d09b      	beq.n	8004806 <_strtod_l+0x76>
 80048ce:	2301      	movs	r3, #1
 80048d0:	f04f 0a00 	mov.w	sl, #0
 80048d4:	9304      	str	r3, [sp, #16]
 80048d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80048d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80048da:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80048de:	46d3      	mov	fp, sl
 80048e0:	220a      	movs	r2, #10
 80048e2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80048e4:	7806      	ldrb	r6, [r0, #0]
 80048e6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80048ea:	b2d9      	uxtb	r1, r3
 80048ec:	2909      	cmp	r1, #9
 80048ee:	d926      	bls.n	800493e <_strtod_l+0x1ae>
 80048f0:	494c      	ldr	r1, [pc, #304]	; (8004a24 <_strtod_l+0x294>)
 80048f2:	2201      	movs	r2, #1
 80048f4:	f000 ffe6 	bl	80058c4 <strncmp>
 80048f8:	2800      	cmp	r0, #0
 80048fa:	d030      	beq.n	800495e <_strtod_l+0x1ce>
 80048fc:	2000      	movs	r0, #0
 80048fe:	4632      	mov	r2, r6
 8004900:	9005      	str	r0, [sp, #20]
 8004902:	465e      	mov	r6, fp
 8004904:	4603      	mov	r3, r0
 8004906:	2a65      	cmp	r2, #101	; 0x65
 8004908:	d001      	beq.n	800490e <_strtod_l+0x17e>
 800490a:	2a45      	cmp	r2, #69	; 0x45
 800490c:	d113      	bne.n	8004936 <_strtod_l+0x1a6>
 800490e:	b91e      	cbnz	r6, 8004918 <_strtod_l+0x188>
 8004910:	9a04      	ldr	r2, [sp, #16]
 8004912:	4302      	orrs	r2, r0
 8004914:	d094      	beq.n	8004840 <_strtod_l+0xb0>
 8004916:	2600      	movs	r6, #0
 8004918:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800491a:	1c6a      	adds	r2, r5, #1
 800491c:	9215      	str	r2, [sp, #84]	; 0x54
 800491e:	786a      	ldrb	r2, [r5, #1]
 8004920:	2a2b      	cmp	r2, #43	; 0x2b
 8004922:	d074      	beq.n	8004a0e <_strtod_l+0x27e>
 8004924:	2a2d      	cmp	r2, #45	; 0x2d
 8004926:	d078      	beq.n	8004a1a <_strtod_l+0x28a>
 8004928:	f04f 0c00 	mov.w	ip, #0
 800492c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8004930:	2909      	cmp	r1, #9
 8004932:	d97f      	bls.n	8004a34 <_strtod_l+0x2a4>
 8004934:	9515      	str	r5, [sp, #84]	; 0x54
 8004936:	2700      	movs	r7, #0
 8004938:	e09e      	b.n	8004a78 <_strtod_l+0x2e8>
 800493a:	2300      	movs	r3, #0
 800493c:	e7c8      	b.n	80048d0 <_strtod_l+0x140>
 800493e:	f1bb 0f08 	cmp.w	fp, #8
 8004942:	bfd8      	it	le
 8004944:	9909      	ldrle	r1, [sp, #36]	; 0x24
 8004946:	f100 0001 	add.w	r0, r0, #1
 800494a:	bfda      	itte	le
 800494c:	fb02 3301 	mlale	r3, r2, r1, r3
 8004950:	9309      	strle	r3, [sp, #36]	; 0x24
 8004952:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 8004956:	f10b 0b01 	add.w	fp, fp, #1
 800495a:	9015      	str	r0, [sp, #84]	; 0x54
 800495c:	e7c1      	b.n	80048e2 <_strtod_l+0x152>
 800495e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004960:	1c5a      	adds	r2, r3, #1
 8004962:	9215      	str	r2, [sp, #84]	; 0x54
 8004964:	785a      	ldrb	r2, [r3, #1]
 8004966:	f1bb 0f00 	cmp.w	fp, #0
 800496a:	d037      	beq.n	80049dc <_strtod_l+0x24c>
 800496c:	9005      	str	r0, [sp, #20]
 800496e:	465e      	mov	r6, fp
 8004970:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8004974:	2b09      	cmp	r3, #9
 8004976:	d912      	bls.n	800499e <_strtod_l+0x20e>
 8004978:	2301      	movs	r3, #1
 800497a:	e7c4      	b.n	8004906 <_strtod_l+0x176>
 800497c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800497e:	1c5a      	adds	r2, r3, #1
 8004980:	9215      	str	r2, [sp, #84]	; 0x54
 8004982:	785a      	ldrb	r2, [r3, #1]
 8004984:	3001      	adds	r0, #1
 8004986:	2a30      	cmp	r2, #48	; 0x30
 8004988:	d0f8      	beq.n	800497c <_strtod_l+0x1ec>
 800498a:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800498e:	2b08      	cmp	r3, #8
 8004990:	f200 84c1 	bhi.w	8005316 <_strtod_l+0xb86>
 8004994:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004996:	9005      	str	r0, [sp, #20]
 8004998:	2000      	movs	r0, #0
 800499a:	930b      	str	r3, [sp, #44]	; 0x2c
 800499c:	4606      	mov	r6, r0
 800499e:	3a30      	subs	r2, #48	; 0x30
 80049a0:	f100 0301 	add.w	r3, r0, #1
 80049a4:	d014      	beq.n	80049d0 <_strtod_l+0x240>
 80049a6:	9905      	ldr	r1, [sp, #20]
 80049a8:	4419      	add	r1, r3
 80049aa:	9105      	str	r1, [sp, #20]
 80049ac:	4633      	mov	r3, r6
 80049ae:	eb00 0c06 	add.w	ip, r0, r6
 80049b2:	210a      	movs	r1, #10
 80049b4:	4563      	cmp	r3, ip
 80049b6:	d113      	bne.n	80049e0 <_strtod_l+0x250>
 80049b8:	1833      	adds	r3, r6, r0
 80049ba:	2b08      	cmp	r3, #8
 80049bc:	f106 0601 	add.w	r6, r6, #1
 80049c0:	4406      	add	r6, r0
 80049c2:	dc1a      	bgt.n	80049fa <_strtod_l+0x26a>
 80049c4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80049c6:	230a      	movs	r3, #10
 80049c8:	fb03 2301 	mla	r3, r3, r1, r2
 80049cc:	9309      	str	r3, [sp, #36]	; 0x24
 80049ce:	2300      	movs	r3, #0
 80049d0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80049d2:	1c51      	adds	r1, r2, #1
 80049d4:	9115      	str	r1, [sp, #84]	; 0x54
 80049d6:	7852      	ldrb	r2, [r2, #1]
 80049d8:	4618      	mov	r0, r3
 80049da:	e7c9      	b.n	8004970 <_strtod_l+0x1e0>
 80049dc:	4658      	mov	r0, fp
 80049de:	e7d2      	b.n	8004986 <_strtod_l+0x1f6>
 80049e0:	2b08      	cmp	r3, #8
 80049e2:	f103 0301 	add.w	r3, r3, #1
 80049e6:	dc03      	bgt.n	80049f0 <_strtod_l+0x260>
 80049e8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80049ea:	434f      	muls	r7, r1
 80049ec:	9709      	str	r7, [sp, #36]	; 0x24
 80049ee:	e7e1      	b.n	80049b4 <_strtod_l+0x224>
 80049f0:	2b10      	cmp	r3, #16
 80049f2:	bfd8      	it	le
 80049f4:	fb01 fa0a 	mulle.w	sl, r1, sl
 80049f8:	e7dc      	b.n	80049b4 <_strtod_l+0x224>
 80049fa:	2e10      	cmp	r6, #16
 80049fc:	bfdc      	itt	le
 80049fe:	230a      	movle	r3, #10
 8004a00:	fb03 2a0a 	mlale	sl, r3, sl, r2
 8004a04:	e7e3      	b.n	80049ce <_strtod_l+0x23e>
 8004a06:	2300      	movs	r3, #0
 8004a08:	9305      	str	r3, [sp, #20]
 8004a0a:	2301      	movs	r3, #1
 8004a0c:	e780      	b.n	8004910 <_strtod_l+0x180>
 8004a0e:	f04f 0c00 	mov.w	ip, #0
 8004a12:	1caa      	adds	r2, r5, #2
 8004a14:	9215      	str	r2, [sp, #84]	; 0x54
 8004a16:	78aa      	ldrb	r2, [r5, #2]
 8004a18:	e788      	b.n	800492c <_strtod_l+0x19c>
 8004a1a:	f04f 0c01 	mov.w	ip, #1
 8004a1e:	e7f8      	b.n	8004a12 <_strtod_l+0x282>
 8004a20:	08006bf0 	.word	0x08006bf0
 8004a24:	08006bec 	.word	0x08006bec
 8004a28:	7ff00000 	.word	0x7ff00000
 8004a2c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004a2e:	1c51      	adds	r1, r2, #1
 8004a30:	9115      	str	r1, [sp, #84]	; 0x54
 8004a32:	7852      	ldrb	r2, [r2, #1]
 8004a34:	2a30      	cmp	r2, #48	; 0x30
 8004a36:	d0f9      	beq.n	8004a2c <_strtod_l+0x29c>
 8004a38:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8004a3c:	2908      	cmp	r1, #8
 8004a3e:	f63f af7a 	bhi.w	8004936 <_strtod_l+0x1a6>
 8004a42:	3a30      	subs	r2, #48	; 0x30
 8004a44:	9208      	str	r2, [sp, #32]
 8004a46:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004a48:	920c      	str	r2, [sp, #48]	; 0x30
 8004a4a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8004a4c:	1c57      	adds	r7, r2, #1
 8004a4e:	9715      	str	r7, [sp, #84]	; 0x54
 8004a50:	7852      	ldrb	r2, [r2, #1]
 8004a52:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8004a56:	f1be 0f09 	cmp.w	lr, #9
 8004a5a:	d938      	bls.n	8004ace <_strtod_l+0x33e>
 8004a5c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004a5e:	1a7f      	subs	r7, r7, r1
 8004a60:	2f08      	cmp	r7, #8
 8004a62:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8004a66:	dc03      	bgt.n	8004a70 <_strtod_l+0x2e0>
 8004a68:	9908      	ldr	r1, [sp, #32]
 8004a6a:	428f      	cmp	r7, r1
 8004a6c:	bfa8      	it	ge
 8004a6e:	460f      	movge	r7, r1
 8004a70:	f1bc 0f00 	cmp.w	ip, #0
 8004a74:	d000      	beq.n	8004a78 <_strtod_l+0x2e8>
 8004a76:	427f      	negs	r7, r7
 8004a78:	2e00      	cmp	r6, #0
 8004a7a:	d14f      	bne.n	8004b1c <_strtod_l+0x38c>
 8004a7c:	9904      	ldr	r1, [sp, #16]
 8004a7e:	4301      	orrs	r1, r0
 8004a80:	f47f aec1 	bne.w	8004806 <_strtod_l+0x76>
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	f47f aedb 	bne.w	8004840 <_strtod_l+0xb0>
 8004a8a:	2a69      	cmp	r2, #105	; 0x69
 8004a8c:	d029      	beq.n	8004ae2 <_strtod_l+0x352>
 8004a8e:	dc26      	bgt.n	8004ade <_strtod_l+0x34e>
 8004a90:	2a49      	cmp	r2, #73	; 0x49
 8004a92:	d026      	beq.n	8004ae2 <_strtod_l+0x352>
 8004a94:	2a4e      	cmp	r2, #78	; 0x4e
 8004a96:	f47f aed3 	bne.w	8004840 <_strtod_l+0xb0>
 8004a9a:	499b      	ldr	r1, [pc, #620]	; (8004d08 <_strtod_l+0x578>)
 8004a9c:	a815      	add	r0, sp, #84	; 0x54
 8004a9e:	f001 fa27 	bl	8005ef0 <__match>
 8004aa2:	2800      	cmp	r0, #0
 8004aa4:	f43f aecc 	beq.w	8004840 <_strtod_l+0xb0>
 8004aa8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004aaa:	781b      	ldrb	r3, [r3, #0]
 8004aac:	2b28      	cmp	r3, #40	; 0x28
 8004aae:	d12f      	bne.n	8004b10 <_strtod_l+0x380>
 8004ab0:	4996      	ldr	r1, [pc, #600]	; (8004d0c <_strtod_l+0x57c>)
 8004ab2:	aa18      	add	r2, sp, #96	; 0x60
 8004ab4:	a815      	add	r0, sp, #84	; 0x54
 8004ab6:	f001 fa2f 	bl	8005f18 <__hexnan>
 8004aba:	2805      	cmp	r0, #5
 8004abc:	d128      	bne.n	8004b10 <_strtod_l+0x380>
 8004abe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004ac0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8004ac4:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8004ac8:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8004acc:	e69b      	b.n	8004806 <_strtod_l+0x76>
 8004ace:	9f08      	ldr	r7, [sp, #32]
 8004ad0:	210a      	movs	r1, #10
 8004ad2:	fb01 2107 	mla	r1, r1, r7, r2
 8004ad6:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8004ada:	9208      	str	r2, [sp, #32]
 8004adc:	e7b5      	b.n	8004a4a <_strtod_l+0x2ba>
 8004ade:	2a6e      	cmp	r2, #110	; 0x6e
 8004ae0:	e7d9      	b.n	8004a96 <_strtod_l+0x306>
 8004ae2:	498b      	ldr	r1, [pc, #556]	; (8004d10 <_strtod_l+0x580>)
 8004ae4:	a815      	add	r0, sp, #84	; 0x54
 8004ae6:	f001 fa03 	bl	8005ef0 <__match>
 8004aea:	2800      	cmp	r0, #0
 8004aec:	f43f aea8 	beq.w	8004840 <_strtod_l+0xb0>
 8004af0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004af2:	4988      	ldr	r1, [pc, #544]	; (8004d14 <_strtod_l+0x584>)
 8004af4:	3b01      	subs	r3, #1
 8004af6:	a815      	add	r0, sp, #84	; 0x54
 8004af8:	9315      	str	r3, [sp, #84]	; 0x54
 8004afa:	f001 f9f9 	bl	8005ef0 <__match>
 8004afe:	b910      	cbnz	r0, 8004b06 <_strtod_l+0x376>
 8004b00:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004b02:	3301      	adds	r3, #1
 8004b04:	9315      	str	r3, [sp, #84]	; 0x54
 8004b06:	f8df 921c 	ldr.w	r9, [pc, #540]	; 8004d24 <_strtod_l+0x594>
 8004b0a:	f04f 0800 	mov.w	r8, #0
 8004b0e:	e67a      	b.n	8004806 <_strtod_l+0x76>
 8004b10:	4881      	ldr	r0, [pc, #516]	; (8004d18 <_strtod_l+0x588>)
 8004b12:	f000 ff09 	bl	8005928 <nan>
 8004b16:	ec59 8b10 	vmov	r8, r9, d0
 8004b1a:	e674      	b.n	8004806 <_strtod_l+0x76>
 8004b1c:	9b05      	ldr	r3, [sp, #20]
 8004b1e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004b20:	1afb      	subs	r3, r7, r3
 8004b22:	f1bb 0f00 	cmp.w	fp, #0
 8004b26:	bf08      	it	eq
 8004b28:	46b3      	moveq	fp, r6
 8004b2a:	2e10      	cmp	r6, #16
 8004b2c:	9308      	str	r3, [sp, #32]
 8004b2e:	4635      	mov	r5, r6
 8004b30:	bfa8      	it	ge
 8004b32:	2510      	movge	r5, #16
 8004b34:	f7fb fce6 	bl	8000504 <__aeabi_ui2d>
 8004b38:	2e09      	cmp	r6, #9
 8004b3a:	4680      	mov	r8, r0
 8004b3c:	4689      	mov	r9, r1
 8004b3e:	dd13      	ble.n	8004b68 <_strtod_l+0x3d8>
 8004b40:	4b76      	ldr	r3, [pc, #472]	; (8004d1c <_strtod_l+0x58c>)
 8004b42:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8004b46:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8004b4a:	f7fb fd55 	bl	80005f8 <__aeabi_dmul>
 8004b4e:	4680      	mov	r8, r0
 8004b50:	4650      	mov	r0, sl
 8004b52:	4689      	mov	r9, r1
 8004b54:	f7fb fcd6 	bl	8000504 <__aeabi_ui2d>
 8004b58:	4602      	mov	r2, r0
 8004b5a:	460b      	mov	r3, r1
 8004b5c:	4640      	mov	r0, r8
 8004b5e:	4649      	mov	r1, r9
 8004b60:	f7fb fb94 	bl	800028c <__adddf3>
 8004b64:	4680      	mov	r8, r0
 8004b66:	4689      	mov	r9, r1
 8004b68:	2e0f      	cmp	r6, #15
 8004b6a:	dc38      	bgt.n	8004bde <_strtod_l+0x44e>
 8004b6c:	9b08      	ldr	r3, [sp, #32]
 8004b6e:	2b00      	cmp	r3, #0
 8004b70:	f43f ae49 	beq.w	8004806 <_strtod_l+0x76>
 8004b74:	dd24      	ble.n	8004bc0 <_strtod_l+0x430>
 8004b76:	2b16      	cmp	r3, #22
 8004b78:	dc0b      	bgt.n	8004b92 <_strtod_l+0x402>
 8004b7a:	4968      	ldr	r1, [pc, #416]	; (8004d1c <_strtod_l+0x58c>)
 8004b7c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004b80:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b84:	4642      	mov	r2, r8
 8004b86:	464b      	mov	r3, r9
 8004b88:	f7fb fd36 	bl	80005f8 <__aeabi_dmul>
 8004b8c:	4680      	mov	r8, r0
 8004b8e:	4689      	mov	r9, r1
 8004b90:	e639      	b.n	8004806 <_strtod_l+0x76>
 8004b92:	9a08      	ldr	r2, [sp, #32]
 8004b94:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 8004b98:	4293      	cmp	r3, r2
 8004b9a:	db20      	blt.n	8004bde <_strtod_l+0x44e>
 8004b9c:	4c5f      	ldr	r4, [pc, #380]	; (8004d1c <_strtod_l+0x58c>)
 8004b9e:	f1c6 060f 	rsb	r6, r6, #15
 8004ba2:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8004ba6:	4642      	mov	r2, r8
 8004ba8:	464b      	mov	r3, r9
 8004baa:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004bae:	f7fb fd23 	bl	80005f8 <__aeabi_dmul>
 8004bb2:	9b08      	ldr	r3, [sp, #32]
 8004bb4:	1b9e      	subs	r6, r3, r6
 8004bb6:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8004bba:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004bbe:	e7e3      	b.n	8004b88 <_strtod_l+0x3f8>
 8004bc0:	9b08      	ldr	r3, [sp, #32]
 8004bc2:	3316      	adds	r3, #22
 8004bc4:	db0b      	blt.n	8004bde <_strtod_l+0x44e>
 8004bc6:	9b05      	ldr	r3, [sp, #20]
 8004bc8:	1bdf      	subs	r7, r3, r7
 8004bca:	4b54      	ldr	r3, [pc, #336]	; (8004d1c <_strtod_l+0x58c>)
 8004bcc:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8004bd0:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004bd4:	4640      	mov	r0, r8
 8004bd6:	4649      	mov	r1, r9
 8004bd8:	f7fb fe38 	bl	800084c <__aeabi_ddiv>
 8004bdc:	e7d6      	b.n	8004b8c <_strtod_l+0x3fc>
 8004bde:	9b08      	ldr	r3, [sp, #32]
 8004be0:	1b75      	subs	r5, r6, r5
 8004be2:	441d      	add	r5, r3
 8004be4:	2d00      	cmp	r5, #0
 8004be6:	dd70      	ble.n	8004cca <_strtod_l+0x53a>
 8004be8:	f015 030f 	ands.w	r3, r5, #15
 8004bec:	d00a      	beq.n	8004c04 <_strtod_l+0x474>
 8004bee:	494b      	ldr	r1, [pc, #300]	; (8004d1c <_strtod_l+0x58c>)
 8004bf0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004bf4:	4642      	mov	r2, r8
 8004bf6:	464b      	mov	r3, r9
 8004bf8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004bfc:	f7fb fcfc 	bl	80005f8 <__aeabi_dmul>
 8004c00:	4680      	mov	r8, r0
 8004c02:	4689      	mov	r9, r1
 8004c04:	f035 050f 	bics.w	r5, r5, #15
 8004c08:	d04d      	beq.n	8004ca6 <_strtod_l+0x516>
 8004c0a:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 8004c0e:	dd22      	ble.n	8004c56 <_strtod_l+0x4c6>
 8004c10:	2500      	movs	r5, #0
 8004c12:	46ab      	mov	fp, r5
 8004c14:	9509      	str	r5, [sp, #36]	; 0x24
 8004c16:	9505      	str	r5, [sp, #20]
 8004c18:	2322      	movs	r3, #34	; 0x22
 8004c1a:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8004d24 <_strtod_l+0x594>
 8004c1e:	6023      	str	r3, [r4, #0]
 8004c20:	f04f 0800 	mov.w	r8, #0
 8004c24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c26:	2b00      	cmp	r3, #0
 8004c28:	f43f aded 	beq.w	8004806 <_strtod_l+0x76>
 8004c2c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004c2e:	4620      	mov	r0, r4
 8004c30:	f7ff f924 	bl	8003e7c <_Bfree>
 8004c34:	9905      	ldr	r1, [sp, #20]
 8004c36:	4620      	mov	r0, r4
 8004c38:	f7ff f920 	bl	8003e7c <_Bfree>
 8004c3c:	4659      	mov	r1, fp
 8004c3e:	4620      	mov	r0, r4
 8004c40:	f7ff f91c 	bl	8003e7c <_Bfree>
 8004c44:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004c46:	4620      	mov	r0, r4
 8004c48:	f7ff f918 	bl	8003e7c <_Bfree>
 8004c4c:	4629      	mov	r1, r5
 8004c4e:	4620      	mov	r0, r4
 8004c50:	f7ff f914 	bl	8003e7c <_Bfree>
 8004c54:	e5d7      	b.n	8004806 <_strtod_l+0x76>
 8004c56:	4b32      	ldr	r3, [pc, #200]	; (8004d20 <_strtod_l+0x590>)
 8004c58:	9304      	str	r3, [sp, #16]
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	112d      	asrs	r5, r5, #4
 8004c5e:	4640      	mov	r0, r8
 8004c60:	4649      	mov	r1, r9
 8004c62:	469a      	mov	sl, r3
 8004c64:	2d01      	cmp	r5, #1
 8004c66:	dc21      	bgt.n	8004cac <_strtod_l+0x51c>
 8004c68:	b10b      	cbz	r3, 8004c6e <_strtod_l+0x4de>
 8004c6a:	4680      	mov	r8, r0
 8004c6c:	4689      	mov	r9, r1
 8004c6e:	492c      	ldr	r1, [pc, #176]	; (8004d20 <_strtod_l+0x590>)
 8004c70:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8004c74:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8004c78:	4642      	mov	r2, r8
 8004c7a:	464b      	mov	r3, r9
 8004c7c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004c80:	f7fb fcba 	bl	80005f8 <__aeabi_dmul>
 8004c84:	4b27      	ldr	r3, [pc, #156]	; (8004d24 <_strtod_l+0x594>)
 8004c86:	460a      	mov	r2, r1
 8004c88:	400b      	ands	r3, r1
 8004c8a:	4927      	ldr	r1, [pc, #156]	; (8004d28 <_strtod_l+0x598>)
 8004c8c:	428b      	cmp	r3, r1
 8004c8e:	4680      	mov	r8, r0
 8004c90:	d8be      	bhi.n	8004c10 <_strtod_l+0x480>
 8004c92:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8004c96:	428b      	cmp	r3, r1
 8004c98:	bf86      	itte	hi
 8004c9a:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 8004d2c <_strtod_l+0x59c>
 8004c9e:	f04f 38ff 	movhi.w	r8, #4294967295
 8004ca2:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8004ca6:	2300      	movs	r3, #0
 8004ca8:	9304      	str	r3, [sp, #16]
 8004caa:	e07b      	b.n	8004da4 <_strtod_l+0x614>
 8004cac:	07ea      	lsls	r2, r5, #31
 8004cae:	d505      	bpl.n	8004cbc <_strtod_l+0x52c>
 8004cb0:	9b04      	ldr	r3, [sp, #16]
 8004cb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004cb6:	f7fb fc9f 	bl	80005f8 <__aeabi_dmul>
 8004cba:	2301      	movs	r3, #1
 8004cbc:	9a04      	ldr	r2, [sp, #16]
 8004cbe:	3208      	adds	r2, #8
 8004cc0:	f10a 0a01 	add.w	sl, sl, #1
 8004cc4:	106d      	asrs	r5, r5, #1
 8004cc6:	9204      	str	r2, [sp, #16]
 8004cc8:	e7cc      	b.n	8004c64 <_strtod_l+0x4d4>
 8004cca:	d0ec      	beq.n	8004ca6 <_strtod_l+0x516>
 8004ccc:	426d      	negs	r5, r5
 8004cce:	f015 020f 	ands.w	r2, r5, #15
 8004cd2:	d00a      	beq.n	8004cea <_strtod_l+0x55a>
 8004cd4:	4b11      	ldr	r3, [pc, #68]	; (8004d1c <_strtod_l+0x58c>)
 8004cd6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004cda:	4640      	mov	r0, r8
 8004cdc:	4649      	mov	r1, r9
 8004cde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004ce2:	f7fb fdb3 	bl	800084c <__aeabi_ddiv>
 8004ce6:	4680      	mov	r8, r0
 8004ce8:	4689      	mov	r9, r1
 8004cea:	112d      	asrs	r5, r5, #4
 8004cec:	d0db      	beq.n	8004ca6 <_strtod_l+0x516>
 8004cee:	2d1f      	cmp	r5, #31
 8004cf0:	dd1e      	ble.n	8004d30 <_strtod_l+0x5a0>
 8004cf2:	2500      	movs	r5, #0
 8004cf4:	46ab      	mov	fp, r5
 8004cf6:	9509      	str	r5, [sp, #36]	; 0x24
 8004cf8:	9505      	str	r5, [sp, #20]
 8004cfa:	2322      	movs	r3, #34	; 0x22
 8004cfc:	f04f 0800 	mov.w	r8, #0
 8004d00:	f04f 0900 	mov.w	r9, #0
 8004d04:	6023      	str	r3, [r4, #0]
 8004d06:	e78d      	b.n	8004c24 <_strtod_l+0x494>
 8004d08:	080069dc 	.word	0x080069dc
 8004d0c:	08006c04 	.word	0x08006c04
 8004d10:	080069d4 	.word	0x080069d4
 8004d14:	08006a0b 	.word	0x08006a0b
 8004d18:	08006c94 	.word	0x08006c94
 8004d1c:	08006b18 	.word	0x08006b18
 8004d20:	08006af0 	.word	0x08006af0
 8004d24:	7ff00000 	.word	0x7ff00000
 8004d28:	7ca00000 	.word	0x7ca00000
 8004d2c:	7fefffff 	.word	0x7fefffff
 8004d30:	f015 0310 	ands.w	r3, r5, #16
 8004d34:	bf18      	it	ne
 8004d36:	236a      	movne	r3, #106	; 0x6a
 8004d38:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 80050dc <_strtod_l+0x94c>
 8004d3c:	9304      	str	r3, [sp, #16]
 8004d3e:	4640      	mov	r0, r8
 8004d40:	4649      	mov	r1, r9
 8004d42:	2300      	movs	r3, #0
 8004d44:	07ea      	lsls	r2, r5, #31
 8004d46:	d504      	bpl.n	8004d52 <_strtod_l+0x5c2>
 8004d48:	e9da 2300 	ldrd	r2, r3, [sl]
 8004d4c:	f7fb fc54 	bl	80005f8 <__aeabi_dmul>
 8004d50:	2301      	movs	r3, #1
 8004d52:	106d      	asrs	r5, r5, #1
 8004d54:	f10a 0a08 	add.w	sl, sl, #8
 8004d58:	d1f4      	bne.n	8004d44 <_strtod_l+0x5b4>
 8004d5a:	b10b      	cbz	r3, 8004d60 <_strtod_l+0x5d0>
 8004d5c:	4680      	mov	r8, r0
 8004d5e:	4689      	mov	r9, r1
 8004d60:	9b04      	ldr	r3, [sp, #16]
 8004d62:	b1bb      	cbz	r3, 8004d94 <_strtod_l+0x604>
 8004d64:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8004d68:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004d6c:	2b00      	cmp	r3, #0
 8004d6e:	4649      	mov	r1, r9
 8004d70:	dd10      	ble.n	8004d94 <_strtod_l+0x604>
 8004d72:	2b1f      	cmp	r3, #31
 8004d74:	f340 811e 	ble.w	8004fb4 <_strtod_l+0x824>
 8004d78:	2b34      	cmp	r3, #52	; 0x34
 8004d7a:	bfde      	ittt	le
 8004d7c:	f04f 33ff 	movle.w	r3, #4294967295
 8004d80:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8004d84:	4093      	lslle	r3, r2
 8004d86:	f04f 0800 	mov.w	r8, #0
 8004d8a:	bfcc      	ite	gt
 8004d8c:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8004d90:	ea03 0901 	andle.w	r9, r3, r1
 8004d94:	2200      	movs	r2, #0
 8004d96:	2300      	movs	r3, #0
 8004d98:	4640      	mov	r0, r8
 8004d9a:	4649      	mov	r1, r9
 8004d9c:	f7fb fe94 	bl	8000ac8 <__aeabi_dcmpeq>
 8004da0:	2800      	cmp	r0, #0
 8004da2:	d1a6      	bne.n	8004cf2 <_strtod_l+0x562>
 8004da4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004da6:	9300      	str	r3, [sp, #0]
 8004da8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004daa:	4633      	mov	r3, r6
 8004dac:	465a      	mov	r2, fp
 8004dae:	4620      	mov	r0, r4
 8004db0:	f7ff f8cc 	bl	8003f4c <__s2b>
 8004db4:	9009      	str	r0, [sp, #36]	; 0x24
 8004db6:	2800      	cmp	r0, #0
 8004db8:	f43f af2a 	beq.w	8004c10 <_strtod_l+0x480>
 8004dbc:	9a08      	ldr	r2, [sp, #32]
 8004dbe:	9b05      	ldr	r3, [sp, #20]
 8004dc0:	2a00      	cmp	r2, #0
 8004dc2:	eba3 0307 	sub.w	r3, r3, r7
 8004dc6:	bfa8      	it	ge
 8004dc8:	2300      	movge	r3, #0
 8004dca:	930c      	str	r3, [sp, #48]	; 0x30
 8004dcc:	2500      	movs	r5, #0
 8004dce:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8004dd2:	9312      	str	r3, [sp, #72]	; 0x48
 8004dd4:	46ab      	mov	fp, r5
 8004dd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004dd8:	4620      	mov	r0, r4
 8004dda:	6859      	ldr	r1, [r3, #4]
 8004ddc:	f7ff f80e 	bl	8003dfc <_Balloc>
 8004de0:	9005      	str	r0, [sp, #20]
 8004de2:	2800      	cmp	r0, #0
 8004de4:	f43f af18 	beq.w	8004c18 <_strtod_l+0x488>
 8004de8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004dea:	691a      	ldr	r2, [r3, #16]
 8004dec:	3202      	adds	r2, #2
 8004dee:	f103 010c 	add.w	r1, r3, #12
 8004df2:	0092      	lsls	r2, r2, #2
 8004df4:	300c      	adds	r0, #12
 8004df6:	f000 fd87 	bl	8005908 <memcpy>
 8004dfa:	ec49 8b10 	vmov	d0, r8, r9
 8004dfe:	aa18      	add	r2, sp, #96	; 0x60
 8004e00:	a917      	add	r1, sp, #92	; 0x5c
 8004e02:	4620      	mov	r0, r4
 8004e04:	f7ff fbd6 	bl	80045b4 <__d2b>
 8004e08:	ec49 8b18 	vmov	d8, r8, r9
 8004e0c:	9016      	str	r0, [sp, #88]	; 0x58
 8004e0e:	2800      	cmp	r0, #0
 8004e10:	f43f af02 	beq.w	8004c18 <_strtod_l+0x488>
 8004e14:	2101      	movs	r1, #1
 8004e16:	4620      	mov	r0, r4
 8004e18:	f7ff f930 	bl	800407c <__i2b>
 8004e1c:	4683      	mov	fp, r0
 8004e1e:	2800      	cmp	r0, #0
 8004e20:	f43f aefa 	beq.w	8004c18 <_strtod_l+0x488>
 8004e24:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8004e26:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8004e28:	2e00      	cmp	r6, #0
 8004e2a:	bfab      	itete	ge
 8004e2c:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 8004e2e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 8004e30:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8004e32:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 8004e36:	bfac      	ite	ge
 8004e38:	eb06 0a03 	addge.w	sl, r6, r3
 8004e3c:	1b9f      	sublt	r7, r3, r6
 8004e3e:	9b04      	ldr	r3, [sp, #16]
 8004e40:	1af6      	subs	r6, r6, r3
 8004e42:	4416      	add	r6, r2
 8004e44:	4ba0      	ldr	r3, [pc, #640]	; (80050c8 <_strtod_l+0x938>)
 8004e46:	3e01      	subs	r6, #1
 8004e48:	429e      	cmp	r6, r3
 8004e4a:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004e4e:	f280 80c4 	bge.w	8004fda <_strtod_l+0x84a>
 8004e52:	1b9b      	subs	r3, r3, r6
 8004e54:	2b1f      	cmp	r3, #31
 8004e56:	eba2 0203 	sub.w	r2, r2, r3
 8004e5a:	f04f 0101 	mov.w	r1, #1
 8004e5e:	f300 80b0 	bgt.w	8004fc2 <_strtod_l+0x832>
 8004e62:	fa01 f303 	lsl.w	r3, r1, r3
 8004e66:	930e      	str	r3, [sp, #56]	; 0x38
 8004e68:	2300      	movs	r3, #0
 8004e6a:	930d      	str	r3, [sp, #52]	; 0x34
 8004e6c:	eb0a 0602 	add.w	r6, sl, r2
 8004e70:	9b04      	ldr	r3, [sp, #16]
 8004e72:	45b2      	cmp	sl, r6
 8004e74:	4417      	add	r7, r2
 8004e76:	441f      	add	r7, r3
 8004e78:	4653      	mov	r3, sl
 8004e7a:	bfa8      	it	ge
 8004e7c:	4633      	movge	r3, r6
 8004e7e:	42bb      	cmp	r3, r7
 8004e80:	bfa8      	it	ge
 8004e82:	463b      	movge	r3, r7
 8004e84:	2b00      	cmp	r3, #0
 8004e86:	bfc2      	ittt	gt
 8004e88:	1af6      	subgt	r6, r6, r3
 8004e8a:	1aff      	subgt	r7, r7, r3
 8004e8c:	ebaa 0a03 	subgt.w	sl, sl, r3
 8004e90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004e92:	2b00      	cmp	r3, #0
 8004e94:	dd17      	ble.n	8004ec6 <_strtod_l+0x736>
 8004e96:	4659      	mov	r1, fp
 8004e98:	461a      	mov	r2, r3
 8004e9a:	4620      	mov	r0, r4
 8004e9c:	f7ff f9ae 	bl	80041fc <__pow5mult>
 8004ea0:	4683      	mov	fp, r0
 8004ea2:	2800      	cmp	r0, #0
 8004ea4:	f43f aeb8 	beq.w	8004c18 <_strtod_l+0x488>
 8004ea8:	4601      	mov	r1, r0
 8004eaa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004eac:	4620      	mov	r0, r4
 8004eae:	f7ff f8fb 	bl	80040a8 <__multiply>
 8004eb2:	900b      	str	r0, [sp, #44]	; 0x2c
 8004eb4:	2800      	cmp	r0, #0
 8004eb6:	f43f aeaf 	beq.w	8004c18 <_strtod_l+0x488>
 8004eba:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004ebc:	4620      	mov	r0, r4
 8004ebe:	f7fe ffdd 	bl	8003e7c <_Bfree>
 8004ec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ec4:	9316      	str	r3, [sp, #88]	; 0x58
 8004ec6:	2e00      	cmp	r6, #0
 8004ec8:	f300 808c 	bgt.w	8004fe4 <_strtod_l+0x854>
 8004ecc:	9b08      	ldr	r3, [sp, #32]
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	dd08      	ble.n	8004ee4 <_strtod_l+0x754>
 8004ed2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004ed4:	9905      	ldr	r1, [sp, #20]
 8004ed6:	4620      	mov	r0, r4
 8004ed8:	f7ff f990 	bl	80041fc <__pow5mult>
 8004edc:	9005      	str	r0, [sp, #20]
 8004ede:	2800      	cmp	r0, #0
 8004ee0:	f43f ae9a 	beq.w	8004c18 <_strtod_l+0x488>
 8004ee4:	2f00      	cmp	r7, #0
 8004ee6:	dd08      	ble.n	8004efa <_strtod_l+0x76a>
 8004ee8:	9905      	ldr	r1, [sp, #20]
 8004eea:	463a      	mov	r2, r7
 8004eec:	4620      	mov	r0, r4
 8004eee:	f7ff f9df 	bl	80042b0 <__lshift>
 8004ef2:	9005      	str	r0, [sp, #20]
 8004ef4:	2800      	cmp	r0, #0
 8004ef6:	f43f ae8f 	beq.w	8004c18 <_strtod_l+0x488>
 8004efa:	f1ba 0f00 	cmp.w	sl, #0
 8004efe:	dd08      	ble.n	8004f12 <_strtod_l+0x782>
 8004f00:	4659      	mov	r1, fp
 8004f02:	4652      	mov	r2, sl
 8004f04:	4620      	mov	r0, r4
 8004f06:	f7ff f9d3 	bl	80042b0 <__lshift>
 8004f0a:	4683      	mov	fp, r0
 8004f0c:	2800      	cmp	r0, #0
 8004f0e:	f43f ae83 	beq.w	8004c18 <_strtod_l+0x488>
 8004f12:	9a05      	ldr	r2, [sp, #20]
 8004f14:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004f16:	4620      	mov	r0, r4
 8004f18:	f7ff fa52 	bl	80043c0 <__mdiff>
 8004f1c:	4605      	mov	r5, r0
 8004f1e:	2800      	cmp	r0, #0
 8004f20:	f43f ae7a 	beq.w	8004c18 <_strtod_l+0x488>
 8004f24:	68c3      	ldr	r3, [r0, #12]
 8004f26:	930b      	str	r3, [sp, #44]	; 0x2c
 8004f28:	2300      	movs	r3, #0
 8004f2a:	60c3      	str	r3, [r0, #12]
 8004f2c:	4659      	mov	r1, fp
 8004f2e:	f7ff fa2b 	bl	8004388 <__mcmp>
 8004f32:	2800      	cmp	r0, #0
 8004f34:	da60      	bge.n	8004ff8 <_strtod_l+0x868>
 8004f36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004f38:	ea53 0308 	orrs.w	r3, r3, r8
 8004f3c:	f040 8084 	bne.w	8005048 <_strtod_l+0x8b8>
 8004f40:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004f44:	2b00      	cmp	r3, #0
 8004f46:	d17f      	bne.n	8005048 <_strtod_l+0x8b8>
 8004f48:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004f4c:	0d1b      	lsrs	r3, r3, #20
 8004f4e:	051b      	lsls	r3, r3, #20
 8004f50:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004f54:	d978      	bls.n	8005048 <_strtod_l+0x8b8>
 8004f56:	696b      	ldr	r3, [r5, #20]
 8004f58:	b913      	cbnz	r3, 8004f60 <_strtod_l+0x7d0>
 8004f5a:	692b      	ldr	r3, [r5, #16]
 8004f5c:	2b01      	cmp	r3, #1
 8004f5e:	dd73      	ble.n	8005048 <_strtod_l+0x8b8>
 8004f60:	4629      	mov	r1, r5
 8004f62:	2201      	movs	r2, #1
 8004f64:	4620      	mov	r0, r4
 8004f66:	f7ff f9a3 	bl	80042b0 <__lshift>
 8004f6a:	4659      	mov	r1, fp
 8004f6c:	4605      	mov	r5, r0
 8004f6e:	f7ff fa0b 	bl	8004388 <__mcmp>
 8004f72:	2800      	cmp	r0, #0
 8004f74:	dd68      	ble.n	8005048 <_strtod_l+0x8b8>
 8004f76:	9904      	ldr	r1, [sp, #16]
 8004f78:	4a54      	ldr	r2, [pc, #336]	; (80050cc <_strtod_l+0x93c>)
 8004f7a:	464b      	mov	r3, r9
 8004f7c:	2900      	cmp	r1, #0
 8004f7e:	f000 8084 	beq.w	800508a <_strtod_l+0x8fa>
 8004f82:	ea02 0109 	and.w	r1, r2, r9
 8004f86:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004f8a:	dc7e      	bgt.n	800508a <_strtod_l+0x8fa>
 8004f8c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004f90:	f77f aeb3 	ble.w	8004cfa <_strtod_l+0x56a>
 8004f94:	4b4e      	ldr	r3, [pc, #312]	; (80050d0 <_strtod_l+0x940>)
 8004f96:	4640      	mov	r0, r8
 8004f98:	4649      	mov	r1, r9
 8004f9a:	2200      	movs	r2, #0
 8004f9c:	f7fb fb2c 	bl	80005f8 <__aeabi_dmul>
 8004fa0:	4b4a      	ldr	r3, [pc, #296]	; (80050cc <_strtod_l+0x93c>)
 8004fa2:	400b      	ands	r3, r1
 8004fa4:	4680      	mov	r8, r0
 8004fa6:	4689      	mov	r9, r1
 8004fa8:	2b00      	cmp	r3, #0
 8004faa:	f47f ae3f 	bne.w	8004c2c <_strtod_l+0x49c>
 8004fae:	2322      	movs	r3, #34	; 0x22
 8004fb0:	6023      	str	r3, [r4, #0]
 8004fb2:	e63b      	b.n	8004c2c <_strtod_l+0x49c>
 8004fb4:	f04f 32ff 	mov.w	r2, #4294967295
 8004fb8:	fa02 f303 	lsl.w	r3, r2, r3
 8004fbc:	ea03 0808 	and.w	r8, r3, r8
 8004fc0:	e6e8      	b.n	8004d94 <_strtod_l+0x604>
 8004fc2:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 8004fc6:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 8004fca:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 8004fce:	36e2      	adds	r6, #226	; 0xe2
 8004fd0:	fa01 f306 	lsl.w	r3, r1, r6
 8004fd4:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 8004fd8:	e748      	b.n	8004e6c <_strtod_l+0x6dc>
 8004fda:	2100      	movs	r1, #0
 8004fdc:	2301      	movs	r3, #1
 8004fde:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 8004fe2:	e743      	b.n	8004e6c <_strtod_l+0x6dc>
 8004fe4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004fe6:	4632      	mov	r2, r6
 8004fe8:	4620      	mov	r0, r4
 8004fea:	f7ff f961 	bl	80042b0 <__lshift>
 8004fee:	9016      	str	r0, [sp, #88]	; 0x58
 8004ff0:	2800      	cmp	r0, #0
 8004ff2:	f47f af6b 	bne.w	8004ecc <_strtod_l+0x73c>
 8004ff6:	e60f      	b.n	8004c18 <_strtod_l+0x488>
 8004ff8:	46ca      	mov	sl, r9
 8004ffa:	d171      	bne.n	80050e0 <_strtod_l+0x950>
 8004ffc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004ffe:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005002:	b352      	cbz	r2, 800505a <_strtod_l+0x8ca>
 8005004:	4a33      	ldr	r2, [pc, #204]	; (80050d4 <_strtod_l+0x944>)
 8005006:	4293      	cmp	r3, r2
 8005008:	d12a      	bne.n	8005060 <_strtod_l+0x8d0>
 800500a:	9b04      	ldr	r3, [sp, #16]
 800500c:	4641      	mov	r1, r8
 800500e:	b1fb      	cbz	r3, 8005050 <_strtod_l+0x8c0>
 8005010:	4b2e      	ldr	r3, [pc, #184]	; (80050cc <_strtod_l+0x93c>)
 8005012:	ea09 0303 	and.w	r3, r9, r3
 8005016:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800501a:	f04f 32ff 	mov.w	r2, #4294967295
 800501e:	d81a      	bhi.n	8005056 <_strtod_l+0x8c6>
 8005020:	0d1b      	lsrs	r3, r3, #20
 8005022:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8005026:	fa02 f303 	lsl.w	r3, r2, r3
 800502a:	4299      	cmp	r1, r3
 800502c:	d118      	bne.n	8005060 <_strtod_l+0x8d0>
 800502e:	4b2a      	ldr	r3, [pc, #168]	; (80050d8 <_strtod_l+0x948>)
 8005030:	459a      	cmp	sl, r3
 8005032:	d102      	bne.n	800503a <_strtod_l+0x8aa>
 8005034:	3101      	adds	r1, #1
 8005036:	f43f adef 	beq.w	8004c18 <_strtod_l+0x488>
 800503a:	4b24      	ldr	r3, [pc, #144]	; (80050cc <_strtod_l+0x93c>)
 800503c:	ea0a 0303 	and.w	r3, sl, r3
 8005040:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 8005044:	f04f 0800 	mov.w	r8, #0
 8005048:	9b04      	ldr	r3, [sp, #16]
 800504a:	2b00      	cmp	r3, #0
 800504c:	d1a2      	bne.n	8004f94 <_strtod_l+0x804>
 800504e:	e5ed      	b.n	8004c2c <_strtod_l+0x49c>
 8005050:	f04f 33ff 	mov.w	r3, #4294967295
 8005054:	e7e9      	b.n	800502a <_strtod_l+0x89a>
 8005056:	4613      	mov	r3, r2
 8005058:	e7e7      	b.n	800502a <_strtod_l+0x89a>
 800505a:	ea53 0308 	orrs.w	r3, r3, r8
 800505e:	d08a      	beq.n	8004f76 <_strtod_l+0x7e6>
 8005060:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005062:	b1e3      	cbz	r3, 800509e <_strtod_l+0x90e>
 8005064:	ea13 0f0a 	tst.w	r3, sl
 8005068:	d0ee      	beq.n	8005048 <_strtod_l+0x8b8>
 800506a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800506c:	9a04      	ldr	r2, [sp, #16]
 800506e:	4640      	mov	r0, r8
 8005070:	4649      	mov	r1, r9
 8005072:	b1c3      	cbz	r3, 80050a6 <_strtod_l+0x916>
 8005074:	f7ff fb6f 	bl	8004756 <sulp>
 8005078:	4602      	mov	r2, r0
 800507a:	460b      	mov	r3, r1
 800507c:	ec51 0b18 	vmov	r0, r1, d8
 8005080:	f7fb f904 	bl	800028c <__adddf3>
 8005084:	4680      	mov	r8, r0
 8005086:	4689      	mov	r9, r1
 8005088:	e7de      	b.n	8005048 <_strtod_l+0x8b8>
 800508a:	4013      	ands	r3, r2
 800508c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8005090:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8005094:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8005098:	f04f 38ff 	mov.w	r8, #4294967295
 800509c:	e7d4      	b.n	8005048 <_strtod_l+0x8b8>
 800509e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80050a0:	ea13 0f08 	tst.w	r3, r8
 80050a4:	e7e0      	b.n	8005068 <_strtod_l+0x8d8>
 80050a6:	f7ff fb56 	bl	8004756 <sulp>
 80050aa:	4602      	mov	r2, r0
 80050ac:	460b      	mov	r3, r1
 80050ae:	ec51 0b18 	vmov	r0, r1, d8
 80050b2:	f7fb f8e9 	bl	8000288 <__aeabi_dsub>
 80050b6:	2200      	movs	r2, #0
 80050b8:	2300      	movs	r3, #0
 80050ba:	4680      	mov	r8, r0
 80050bc:	4689      	mov	r9, r1
 80050be:	f7fb fd03 	bl	8000ac8 <__aeabi_dcmpeq>
 80050c2:	2800      	cmp	r0, #0
 80050c4:	d0c0      	beq.n	8005048 <_strtod_l+0x8b8>
 80050c6:	e618      	b.n	8004cfa <_strtod_l+0x56a>
 80050c8:	fffffc02 	.word	0xfffffc02
 80050cc:	7ff00000 	.word	0x7ff00000
 80050d0:	39500000 	.word	0x39500000
 80050d4:	000fffff 	.word	0x000fffff
 80050d8:	7fefffff 	.word	0x7fefffff
 80050dc:	08006c18 	.word	0x08006c18
 80050e0:	4659      	mov	r1, fp
 80050e2:	4628      	mov	r0, r5
 80050e4:	f7ff fac0 	bl	8004668 <__ratio>
 80050e8:	ec57 6b10 	vmov	r6, r7, d0
 80050ec:	ee10 0a10 	vmov	r0, s0
 80050f0:	2200      	movs	r2, #0
 80050f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80050f6:	4639      	mov	r1, r7
 80050f8:	f7fb fcfa 	bl	8000af0 <__aeabi_dcmple>
 80050fc:	2800      	cmp	r0, #0
 80050fe:	d071      	beq.n	80051e4 <_strtod_l+0xa54>
 8005100:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005102:	2b00      	cmp	r3, #0
 8005104:	d17c      	bne.n	8005200 <_strtod_l+0xa70>
 8005106:	f1b8 0f00 	cmp.w	r8, #0
 800510a:	d15a      	bne.n	80051c2 <_strtod_l+0xa32>
 800510c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005110:	2b00      	cmp	r3, #0
 8005112:	d15d      	bne.n	80051d0 <_strtod_l+0xa40>
 8005114:	4b90      	ldr	r3, [pc, #576]	; (8005358 <_strtod_l+0xbc8>)
 8005116:	2200      	movs	r2, #0
 8005118:	4630      	mov	r0, r6
 800511a:	4639      	mov	r1, r7
 800511c:	f7fb fcde 	bl	8000adc <__aeabi_dcmplt>
 8005120:	2800      	cmp	r0, #0
 8005122:	d15c      	bne.n	80051de <_strtod_l+0xa4e>
 8005124:	4630      	mov	r0, r6
 8005126:	4639      	mov	r1, r7
 8005128:	4b8c      	ldr	r3, [pc, #560]	; (800535c <_strtod_l+0xbcc>)
 800512a:	2200      	movs	r2, #0
 800512c:	f7fb fa64 	bl	80005f8 <__aeabi_dmul>
 8005130:	4606      	mov	r6, r0
 8005132:	460f      	mov	r7, r1
 8005134:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8005138:	9606      	str	r6, [sp, #24]
 800513a:	9307      	str	r3, [sp, #28]
 800513c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005140:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8005144:	4b86      	ldr	r3, [pc, #536]	; (8005360 <_strtod_l+0xbd0>)
 8005146:	ea0a 0303 	and.w	r3, sl, r3
 800514a:	930d      	str	r3, [sp, #52]	; 0x34
 800514c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800514e:	4b85      	ldr	r3, [pc, #532]	; (8005364 <_strtod_l+0xbd4>)
 8005150:	429a      	cmp	r2, r3
 8005152:	f040 8090 	bne.w	8005276 <_strtod_l+0xae6>
 8005156:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 800515a:	ec49 8b10 	vmov	d0, r8, r9
 800515e:	f7ff f9b9 	bl	80044d4 <__ulp>
 8005162:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005166:	ec51 0b10 	vmov	r0, r1, d0
 800516a:	f7fb fa45 	bl	80005f8 <__aeabi_dmul>
 800516e:	4642      	mov	r2, r8
 8005170:	464b      	mov	r3, r9
 8005172:	f7fb f88b 	bl	800028c <__adddf3>
 8005176:	460b      	mov	r3, r1
 8005178:	4979      	ldr	r1, [pc, #484]	; (8005360 <_strtod_l+0xbd0>)
 800517a:	4a7b      	ldr	r2, [pc, #492]	; (8005368 <_strtod_l+0xbd8>)
 800517c:	4019      	ands	r1, r3
 800517e:	4291      	cmp	r1, r2
 8005180:	4680      	mov	r8, r0
 8005182:	d944      	bls.n	800520e <_strtod_l+0xa7e>
 8005184:	ee18 2a90 	vmov	r2, s17
 8005188:	4b78      	ldr	r3, [pc, #480]	; (800536c <_strtod_l+0xbdc>)
 800518a:	429a      	cmp	r2, r3
 800518c:	d104      	bne.n	8005198 <_strtod_l+0xa08>
 800518e:	ee18 3a10 	vmov	r3, s16
 8005192:	3301      	adds	r3, #1
 8005194:	f43f ad40 	beq.w	8004c18 <_strtod_l+0x488>
 8005198:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 800536c <_strtod_l+0xbdc>
 800519c:	f04f 38ff 	mov.w	r8, #4294967295
 80051a0:	9916      	ldr	r1, [sp, #88]	; 0x58
 80051a2:	4620      	mov	r0, r4
 80051a4:	f7fe fe6a 	bl	8003e7c <_Bfree>
 80051a8:	9905      	ldr	r1, [sp, #20]
 80051aa:	4620      	mov	r0, r4
 80051ac:	f7fe fe66 	bl	8003e7c <_Bfree>
 80051b0:	4659      	mov	r1, fp
 80051b2:	4620      	mov	r0, r4
 80051b4:	f7fe fe62 	bl	8003e7c <_Bfree>
 80051b8:	4629      	mov	r1, r5
 80051ba:	4620      	mov	r0, r4
 80051bc:	f7fe fe5e 	bl	8003e7c <_Bfree>
 80051c0:	e609      	b.n	8004dd6 <_strtod_l+0x646>
 80051c2:	f1b8 0f01 	cmp.w	r8, #1
 80051c6:	d103      	bne.n	80051d0 <_strtod_l+0xa40>
 80051c8:	f1b9 0f00 	cmp.w	r9, #0
 80051cc:	f43f ad95 	beq.w	8004cfa <_strtod_l+0x56a>
 80051d0:	ed9f 7b55 	vldr	d7, [pc, #340]	; 8005328 <_strtod_l+0xb98>
 80051d4:	4f60      	ldr	r7, [pc, #384]	; (8005358 <_strtod_l+0xbc8>)
 80051d6:	ed8d 7b06 	vstr	d7, [sp, #24]
 80051da:	2600      	movs	r6, #0
 80051dc:	e7ae      	b.n	800513c <_strtod_l+0x9ac>
 80051de:	4f5f      	ldr	r7, [pc, #380]	; (800535c <_strtod_l+0xbcc>)
 80051e0:	2600      	movs	r6, #0
 80051e2:	e7a7      	b.n	8005134 <_strtod_l+0x9a4>
 80051e4:	4b5d      	ldr	r3, [pc, #372]	; (800535c <_strtod_l+0xbcc>)
 80051e6:	4630      	mov	r0, r6
 80051e8:	4639      	mov	r1, r7
 80051ea:	2200      	movs	r2, #0
 80051ec:	f7fb fa04 	bl	80005f8 <__aeabi_dmul>
 80051f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80051f2:	4606      	mov	r6, r0
 80051f4:	460f      	mov	r7, r1
 80051f6:	2b00      	cmp	r3, #0
 80051f8:	d09c      	beq.n	8005134 <_strtod_l+0x9a4>
 80051fa:	e9cd 6706 	strd	r6, r7, [sp, #24]
 80051fe:	e79d      	b.n	800513c <_strtod_l+0x9ac>
 8005200:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 8005330 <_strtod_l+0xba0>
 8005204:	ed8d 7b06 	vstr	d7, [sp, #24]
 8005208:	ec57 6b17 	vmov	r6, r7, d7
 800520c:	e796      	b.n	800513c <_strtod_l+0x9ac>
 800520e:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8005212:	9b04      	ldr	r3, [sp, #16]
 8005214:	46ca      	mov	sl, r9
 8005216:	2b00      	cmp	r3, #0
 8005218:	d1c2      	bne.n	80051a0 <_strtod_l+0xa10>
 800521a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800521e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005220:	0d1b      	lsrs	r3, r3, #20
 8005222:	051b      	lsls	r3, r3, #20
 8005224:	429a      	cmp	r2, r3
 8005226:	d1bb      	bne.n	80051a0 <_strtod_l+0xa10>
 8005228:	4630      	mov	r0, r6
 800522a:	4639      	mov	r1, r7
 800522c:	f7fb fd2c 	bl	8000c88 <__aeabi_d2lz>
 8005230:	f7fb f9b4 	bl	800059c <__aeabi_l2d>
 8005234:	4602      	mov	r2, r0
 8005236:	460b      	mov	r3, r1
 8005238:	4630      	mov	r0, r6
 800523a:	4639      	mov	r1, r7
 800523c:	f7fb f824 	bl	8000288 <__aeabi_dsub>
 8005240:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005242:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005246:	ea43 0308 	orr.w	r3, r3, r8
 800524a:	4313      	orrs	r3, r2
 800524c:	4606      	mov	r6, r0
 800524e:	460f      	mov	r7, r1
 8005250:	d054      	beq.n	80052fc <_strtod_l+0xb6c>
 8005252:	a339      	add	r3, pc, #228	; (adr r3, 8005338 <_strtod_l+0xba8>)
 8005254:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005258:	f7fb fc40 	bl	8000adc <__aeabi_dcmplt>
 800525c:	2800      	cmp	r0, #0
 800525e:	f47f ace5 	bne.w	8004c2c <_strtod_l+0x49c>
 8005262:	a337      	add	r3, pc, #220	; (adr r3, 8005340 <_strtod_l+0xbb0>)
 8005264:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005268:	4630      	mov	r0, r6
 800526a:	4639      	mov	r1, r7
 800526c:	f7fb fc54 	bl	8000b18 <__aeabi_dcmpgt>
 8005270:	2800      	cmp	r0, #0
 8005272:	d095      	beq.n	80051a0 <_strtod_l+0xa10>
 8005274:	e4da      	b.n	8004c2c <_strtod_l+0x49c>
 8005276:	9b04      	ldr	r3, [sp, #16]
 8005278:	b333      	cbz	r3, 80052c8 <_strtod_l+0xb38>
 800527a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800527c:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8005280:	d822      	bhi.n	80052c8 <_strtod_l+0xb38>
 8005282:	a331      	add	r3, pc, #196	; (adr r3, 8005348 <_strtod_l+0xbb8>)
 8005284:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005288:	4630      	mov	r0, r6
 800528a:	4639      	mov	r1, r7
 800528c:	f7fb fc30 	bl	8000af0 <__aeabi_dcmple>
 8005290:	b1a0      	cbz	r0, 80052bc <_strtod_l+0xb2c>
 8005292:	4639      	mov	r1, r7
 8005294:	4630      	mov	r0, r6
 8005296:	f7fb fc87 	bl	8000ba8 <__aeabi_d2uiz>
 800529a:	2801      	cmp	r0, #1
 800529c:	bf38      	it	cc
 800529e:	2001      	movcc	r0, #1
 80052a0:	f7fb f930 	bl	8000504 <__aeabi_ui2d>
 80052a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80052a6:	4606      	mov	r6, r0
 80052a8:	460f      	mov	r7, r1
 80052aa:	bb23      	cbnz	r3, 80052f6 <_strtod_l+0xb66>
 80052ac:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80052b0:	9010      	str	r0, [sp, #64]	; 0x40
 80052b2:	9311      	str	r3, [sp, #68]	; 0x44
 80052b4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80052b8:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 80052bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80052be:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80052c0:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80052c4:	1a9b      	subs	r3, r3, r2
 80052c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80052c8:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80052cc:	eeb0 0a48 	vmov.f32	s0, s16
 80052d0:	eef0 0a68 	vmov.f32	s1, s17
 80052d4:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 80052d8:	f7ff f8fc 	bl	80044d4 <__ulp>
 80052dc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80052e0:	ec53 2b10 	vmov	r2, r3, d0
 80052e4:	f7fb f988 	bl	80005f8 <__aeabi_dmul>
 80052e8:	ec53 2b18 	vmov	r2, r3, d8
 80052ec:	f7fa ffce 	bl	800028c <__adddf3>
 80052f0:	4680      	mov	r8, r0
 80052f2:	4689      	mov	r9, r1
 80052f4:	e78d      	b.n	8005212 <_strtod_l+0xa82>
 80052f6:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 80052fa:	e7db      	b.n	80052b4 <_strtod_l+0xb24>
 80052fc:	a314      	add	r3, pc, #80	; (adr r3, 8005350 <_strtod_l+0xbc0>)
 80052fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005302:	f7fb fbeb 	bl	8000adc <__aeabi_dcmplt>
 8005306:	e7b3      	b.n	8005270 <_strtod_l+0xae0>
 8005308:	2300      	movs	r3, #0
 800530a:	930a      	str	r3, [sp, #40]	; 0x28
 800530c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800530e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005310:	6013      	str	r3, [r2, #0]
 8005312:	f7ff ba7c 	b.w	800480e <_strtod_l+0x7e>
 8005316:	2a65      	cmp	r2, #101	; 0x65
 8005318:	f43f ab75 	beq.w	8004a06 <_strtod_l+0x276>
 800531c:	2a45      	cmp	r2, #69	; 0x45
 800531e:	f43f ab72 	beq.w	8004a06 <_strtod_l+0x276>
 8005322:	2301      	movs	r3, #1
 8005324:	f7ff bbaa 	b.w	8004a7c <_strtod_l+0x2ec>
 8005328:	00000000 	.word	0x00000000
 800532c:	bff00000 	.word	0xbff00000
 8005330:	00000000 	.word	0x00000000
 8005334:	3ff00000 	.word	0x3ff00000
 8005338:	94a03595 	.word	0x94a03595
 800533c:	3fdfffff 	.word	0x3fdfffff
 8005340:	35afe535 	.word	0x35afe535
 8005344:	3fe00000 	.word	0x3fe00000
 8005348:	ffc00000 	.word	0xffc00000
 800534c:	41dfffff 	.word	0x41dfffff
 8005350:	94a03595 	.word	0x94a03595
 8005354:	3fcfffff 	.word	0x3fcfffff
 8005358:	3ff00000 	.word	0x3ff00000
 800535c:	3fe00000 	.word	0x3fe00000
 8005360:	7ff00000 	.word	0x7ff00000
 8005364:	7fe00000 	.word	0x7fe00000
 8005368:	7c9fffff 	.word	0x7c9fffff
 800536c:	7fefffff 	.word	0x7fefffff

08005370 <_strtod_r>:
 8005370:	4b01      	ldr	r3, [pc, #4]	; (8005378 <_strtod_r+0x8>)
 8005372:	f7ff ba0d 	b.w	8004790 <_strtod_l>
 8005376:	bf00      	nop
 8005378:	20000064 	.word	0x20000064

0800537c <_strtol_l.constprop.0>:
 800537c:	2b01      	cmp	r3, #1
 800537e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005382:	d001      	beq.n	8005388 <_strtol_l.constprop.0+0xc>
 8005384:	2b24      	cmp	r3, #36	; 0x24
 8005386:	d906      	bls.n	8005396 <_strtol_l.constprop.0+0x1a>
 8005388:	f7fd fd8a 	bl	8002ea0 <__errno>
 800538c:	2316      	movs	r3, #22
 800538e:	6003      	str	r3, [r0, #0]
 8005390:	2000      	movs	r0, #0
 8005392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005396:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800547c <_strtol_l.constprop.0+0x100>
 800539a:	460d      	mov	r5, r1
 800539c:	462e      	mov	r6, r5
 800539e:	f815 4b01 	ldrb.w	r4, [r5], #1
 80053a2:	f81c 7004 	ldrb.w	r7, [ip, r4]
 80053a6:	f017 0708 	ands.w	r7, r7, #8
 80053aa:	d1f7      	bne.n	800539c <_strtol_l.constprop.0+0x20>
 80053ac:	2c2d      	cmp	r4, #45	; 0x2d
 80053ae:	d132      	bne.n	8005416 <_strtol_l.constprop.0+0x9a>
 80053b0:	782c      	ldrb	r4, [r5, #0]
 80053b2:	2701      	movs	r7, #1
 80053b4:	1cb5      	adds	r5, r6, #2
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d05b      	beq.n	8005472 <_strtol_l.constprop.0+0xf6>
 80053ba:	2b10      	cmp	r3, #16
 80053bc:	d109      	bne.n	80053d2 <_strtol_l.constprop.0+0x56>
 80053be:	2c30      	cmp	r4, #48	; 0x30
 80053c0:	d107      	bne.n	80053d2 <_strtol_l.constprop.0+0x56>
 80053c2:	782c      	ldrb	r4, [r5, #0]
 80053c4:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80053c8:	2c58      	cmp	r4, #88	; 0x58
 80053ca:	d14d      	bne.n	8005468 <_strtol_l.constprop.0+0xec>
 80053cc:	786c      	ldrb	r4, [r5, #1]
 80053ce:	2310      	movs	r3, #16
 80053d0:	3502      	adds	r5, #2
 80053d2:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 80053d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80053da:	f04f 0e00 	mov.w	lr, #0
 80053de:	fbb8 f9f3 	udiv	r9, r8, r3
 80053e2:	4676      	mov	r6, lr
 80053e4:	fb03 8a19 	mls	sl, r3, r9, r8
 80053e8:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80053ec:	f1bc 0f09 	cmp.w	ip, #9
 80053f0:	d816      	bhi.n	8005420 <_strtol_l.constprop.0+0xa4>
 80053f2:	4664      	mov	r4, ip
 80053f4:	42a3      	cmp	r3, r4
 80053f6:	dd24      	ble.n	8005442 <_strtol_l.constprop.0+0xc6>
 80053f8:	f1be 3fff 	cmp.w	lr, #4294967295
 80053fc:	d008      	beq.n	8005410 <_strtol_l.constprop.0+0x94>
 80053fe:	45b1      	cmp	r9, r6
 8005400:	d31c      	bcc.n	800543c <_strtol_l.constprop.0+0xc0>
 8005402:	d101      	bne.n	8005408 <_strtol_l.constprop.0+0x8c>
 8005404:	45a2      	cmp	sl, r4
 8005406:	db19      	blt.n	800543c <_strtol_l.constprop.0+0xc0>
 8005408:	fb06 4603 	mla	r6, r6, r3, r4
 800540c:	f04f 0e01 	mov.w	lr, #1
 8005410:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005414:	e7e8      	b.n	80053e8 <_strtol_l.constprop.0+0x6c>
 8005416:	2c2b      	cmp	r4, #43	; 0x2b
 8005418:	bf04      	itt	eq
 800541a:	782c      	ldrbeq	r4, [r5, #0]
 800541c:	1cb5      	addeq	r5, r6, #2
 800541e:	e7ca      	b.n	80053b6 <_strtol_l.constprop.0+0x3a>
 8005420:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8005424:	f1bc 0f19 	cmp.w	ip, #25
 8005428:	d801      	bhi.n	800542e <_strtol_l.constprop.0+0xb2>
 800542a:	3c37      	subs	r4, #55	; 0x37
 800542c:	e7e2      	b.n	80053f4 <_strtol_l.constprop.0+0x78>
 800542e:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8005432:	f1bc 0f19 	cmp.w	ip, #25
 8005436:	d804      	bhi.n	8005442 <_strtol_l.constprop.0+0xc6>
 8005438:	3c57      	subs	r4, #87	; 0x57
 800543a:	e7db      	b.n	80053f4 <_strtol_l.constprop.0+0x78>
 800543c:	f04f 3eff 	mov.w	lr, #4294967295
 8005440:	e7e6      	b.n	8005410 <_strtol_l.constprop.0+0x94>
 8005442:	f1be 3fff 	cmp.w	lr, #4294967295
 8005446:	d105      	bne.n	8005454 <_strtol_l.constprop.0+0xd8>
 8005448:	2322      	movs	r3, #34	; 0x22
 800544a:	6003      	str	r3, [r0, #0]
 800544c:	4646      	mov	r6, r8
 800544e:	b942      	cbnz	r2, 8005462 <_strtol_l.constprop.0+0xe6>
 8005450:	4630      	mov	r0, r6
 8005452:	e79e      	b.n	8005392 <_strtol_l.constprop.0+0x16>
 8005454:	b107      	cbz	r7, 8005458 <_strtol_l.constprop.0+0xdc>
 8005456:	4276      	negs	r6, r6
 8005458:	2a00      	cmp	r2, #0
 800545a:	d0f9      	beq.n	8005450 <_strtol_l.constprop.0+0xd4>
 800545c:	f1be 0f00 	cmp.w	lr, #0
 8005460:	d000      	beq.n	8005464 <_strtol_l.constprop.0+0xe8>
 8005462:	1e69      	subs	r1, r5, #1
 8005464:	6011      	str	r1, [r2, #0]
 8005466:	e7f3      	b.n	8005450 <_strtol_l.constprop.0+0xd4>
 8005468:	2430      	movs	r4, #48	; 0x30
 800546a:	2b00      	cmp	r3, #0
 800546c:	d1b1      	bne.n	80053d2 <_strtol_l.constprop.0+0x56>
 800546e:	2308      	movs	r3, #8
 8005470:	e7af      	b.n	80053d2 <_strtol_l.constprop.0+0x56>
 8005472:	2c30      	cmp	r4, #48	; 0x30
 8005474:	d0a5      	beq.n	80053c2 <_strtol_l.constprop.0+0x46>
 8005476:	230a      	movs	r3, #10
 8005478:	e7ab      	b.n	80053d2 <_strtol_l.constprop.0+0x56>
 800547a:	bf00      	nop
 800547c:	080068cf 	.word	0x080068cf

08005480 <_strtol_r>:
 8005480:	f7ff bf7c 	b.w	800537c <_strtol_l.constprop.0>

08005484 <__ssputs_r>:
 8005484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005488:	688e      	ldr	r6, [r1, #8]
 800548a:	461f      	mov	r7, r3
 800548c:	42be      	cmp	r6, r7
 800548e:	680b      	ldr	r3, [r1, #0]
 8005490:	4682      	mov	sl, r0
 8005492:	460c      	mov	r4, r1
 8005494:	4690      	mov	r8, r2
 8005496:	d82c      	bhi.n	80054f2 <__ssputs_r+0x6e>
 8005498:	898a      	ldrh	r2, [r1, #12]
 800549a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800549e:	d026      	beq.n	80054ee <__ssputs_r+0x6a>
 80054a0:	6965      	ldr	r5, [r4, #20]
 80054a2:	6909      	ldr	r1, [r1, #16]
 80054a4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80054a8:	eba3 0901 	sub.w	r9, r3, r1
 80054ac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80054b0:	1c7b      	adds	r3, r7, #1
 80054b2:	444b      	add	r3, r9
 80054b4:	106d      	asrs	r5, r5, #1
 80054b6:	429d      	cmp	r5, r3
 80054b8:	bf38      	it	cc
 80054ba:	461d      	movcc	r5, r3
 80054bc:	0553      	lsls	r3, r2, #21
 80054be:	d527      	bpl.n	8005510 <__ssputs_r+0x8c>
 80054c0:	4629      	mov	r1, r5
 80054c2:	f7fe fc0f 	bl	8003ce4 <_malloc_r>
 80054c6:	4606      	mov	r6, r0
 80054c8:	b360      	cbz	r0, 8005524 <__ssputs_r+0xa0>
 80054ca:	6921      	ldr	r1, [r4, #16]
 80054cc:	464a      	mov	r2, r9
 80054ce:	f000 fa1b 	bl	8005908 <memcpy>
 80054d2:	89a3      	ldrh	r3, [r4, #12]
 80054d4:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80054d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80054dc:	81a3      	strh	r3, [r4, #12]
 80054de:	6126      	str	r6, [r4, #16]
 80054e0:	6165      	str	r5, [r4, #20]
 80054e2:	444e      	add	r6, r9
 80054e4:	eba5 0509 	sub.w	r5, r5, r9
 80054e8:	6026      	str	r6, [r4, #0]
 80054ea:	60a5      	str	r5, [r4, #8]
 80054ec:	463e      	mov	r6, r7
 80054ee:	42be      	cmp	r6, r7
 80054f0:	d900      	bls.n	80054f4 <__ssputs_r+0x70>
 80054f2:	463e      	mov	r6, r7
 80054f4:	6820      	ldr	r0, [r4, #0]
 80054f6:	4632      	mov	r2, r6
 80054f8:	4641      	mov	r1, r8
 80054fa:	f000 f9c9 	bl	8005890 <memmove>
 80054fe:	68a3      	ldr	r3, [r4, #8]
 8005500:	1b9b      	subs	r3, r3, r6
 8005502:	60a3      	str	r3, [r4, #8]
 8005504:	6823      	ldr	r3, [r4, #0]
 8005506:	4433      	add	r3, r6
 8005508:	6023      	str	r3, [r4, #0]
 800550a:	2000      	movs	r0, #0
 800550c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005510:	462a      	mov	r2, r5
 8005512:	f000 fdae 	bl	8006072 <_realloc_r>
 8005516:	4606      	mov	r6, r0
 8005518:	2800      	cmp	r0, #0
 800551a:	d1e0      	bne.n	80054de <__ssputs_r+0x5a>
 800551c:	6921      	ldr	r1, [r4, #16]
 800551e:	4650      	mov	r0, sl
 8005520:	f7fe fb6c 	bl	8003bfc <_free_r>
 8005524:	230c      	movs	r3, #12
 8005526:	f8ca 3000 	str.w	r3, [sl]
 800552a:	89a3      	ldrh	r3, [r4, #12]
 800552c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005530:	81a3      	strh	r3, [r4, #12]
 8005532:	f04f 30ff 	mov.w	r0, #4294967295
 8005536:	e7e9      	b.n	800550c <__ssputs_r+0x88>

08005538 <_svfiprintf_r>:
 8005538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800553c:	4698      	mov	r8, r3
 800553e:	898b      	ldrh	r3, [r1, #12]
 8005540:	061b      	lsls	r3, r3, #24
 8005542:	b09d      	sub	sp, #116	; 0x74
 8005544:	4607      	mov	r7, r0
 8005546:	460d      	mov	r5, r1
 8005548:	4614      	mov	r4, r2
 800554a:	d50e      	bpl.n	800556a <_svfiprintf_r+0x32>
 800554c:	690b      	ldr	r3, [r1, #16]
 800554e:	b963      	cbnz	r3, 800556a <_svfiprintf_r+0x32>
 8005550:	2140      	movs	r1, #64	; 0x40
 8005552:	f7fe fbc7 	bl	8003ce4 <_malloc_r>
 8005556:	6028      	str	r0, [r5, #0]
 8005558:	6128      	str	r0, [r5, #16]
 800555a:	b920      	cbnz	r0, 8005566 <_svfiprintf_r+0x2e>
 800555c:	230c      	movs	r3, #12
 800555e:	603b      	str	r3, [r7, #0]
 8005560:	f04f 30ff 	mov.w	r0, #4294967295
 8005564:	e0d0      	b.n	8005708 <_svfiprintf_r+0x1d0>
 8005566:	2340      	movs	r3, #64	; 0x40
 8005568:	616b      	str	r3, [r5, #20]
 800556a:	2300      	movs	r3, #0
 800556c:	9309      	str	r3, [sp, #36]	; 0x24
 800556e:	2320      	movs	r3, #32
 8005570:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005574:	f8cd 800c 	str.w	r8, [sp, #12]
 8005578:	2330      	movs	r3, #48	; 0x30
 800557a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8005720 <_svfiprintf_r+0x1e8>
 800557e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005582:	f04f 0901 	mov.w	r9, #1
 8005586:	4623      	mov	r3, r4
 8005588:	469a      	mov	sl, r3
 800558a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800558e:	b10a      	cbz	r2, 8005594 <_svfiprintf_r+0x5c>
 8005590:	2a25      	cmp	r2, #37	; 0x25
 8005592:	d1f9      	bne.n	8005588 <_svfiprintf_r+0x50>
 8005594:	ebba 0b04 	subs.w	fp, sl, r4
 8005598:	d00b      	beq.n	80055b2 <_svfiprintf_r+0x7a>
 800559a:	465b      	mov	r3, fp
 800559c:	4622      	mov	r2, r4
 800559e:	4629      	mov	r1, r5
 80055a0:	4638      	mov	r0, r7
 80055a2:	f7ff ff6f 	bl	8005484 <__ssputs_r>
 80055a6:	3001      	adds	r0, #1
 80055a8:	f000 80a9 	beq.w	80056fe <_svfiprintf_r+0x1c6>
 80055ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80055ae:	445a      	add	r2, fp
 80055b0:	9209      	str	r2, [sp, #36]	; 0x24
 80055b2:	f89a 3000 	ldrb.w	r3, [sl]
 80055b6:	2b00      	cmp	r3, #0
 80055b8:	f000 80a1 	beq.w	80056fe <_svfiprintf_r+0x1c6>
 80055bc:	2300      	movs	r3, #0
 80055be:	f04f 32ff 	mov.w	r2, #4294967295
 80055c2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80055c6:	f10a 0a01 	add.w	sl, sl, #1
 80055ca:	9304      	str	r3, [sp, #16]
 80055cc:	9307      	str	r3, [sp, #28]
 80055ce:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80055d2:	931a      	str	r3, [sp, #104]	; 0x68
 80055d4:	4654      	mov	r4, sl
 80055d6:	2205      	movs	r2, #5
 80055d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80055dc:	4850      	ldr	r0, [pc, #320]	; (8005720 <_svfiprintf_r+0x1e8>)
 80055de:	f7fa fdf7 	bl	80001d0 <memchr>
 80055e2:	9a04      	ldr	r2, [sp, #16]
 80055e4:	b9d8      	cbnz	r0, 800561e <_svfiprintf_r+0xe6>
 80055e6:	06d0      	lsls	r0, r2, #27
 80055e8:	bf44      	itt	mi
 80055ea:	2320      	movmi	r3, #32
 80055ec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80055f0:	0711      	lsls	r1, r2, #28
 80055f2:	bf44      	itt	mi
 80055f4:	232b      	movmi	r3, #43	; 0x2b
 80055f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80055fa:	f89a 3000 	ldrb.w	r3, [sl]
 80055fe:	2b2a      	cmp	r3, #42	; 0x2a
 8005600:	d015      	beq.n	800562e <_svfiprintf_r+0xf6>
 8005602:	9a07      	ldr	r2, [sp, #28]
 8005604:	4654      	mov	r4, sl
 8005606:	2000      	movs	r0, #0
 8005608:	f04f 0c0a 	mov.w	ip, #10
 800560c:	4621      	mov	r1, r4
 800560e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005612:	3b30      	subs	r3, #48	; 0x30
 8005614:	2b09      	cmp	r3, #9
 8005616:	d94d      	bls.n	80056b4 <_svfiprintf_r+0x17c>
 8005618:	b1b0      	cbz	r0, 8005648 <_svfiprintf_r+0x110>
 800561a:	9207      	str	r2, [sp, #28]
 800561c:	e014      	b.n	8005648 <_svfiprintf_r+0x110>
 800561e:	eba0 0308 	sub.w	r3, r0, r8
 8005622:	fa09 f303 	lsl.w	r3, r9, r3
 8005626:	4313      	orrs	r3, r2
 8005628:	9304      	str	r3, [sp, #16]
 800562a:	46a2      	mov	sl, r4
 800562c:	e7d2      	b.n	80055d4 <_svfiprintf_r+0x9c>
 800562e:	9b03      	ldr	r3, [sp, #12]
 8005630:	1d19      	adds	r1, r3, #4
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	9103      	str	r1, [sp, #12]
 8005636:	2b00      	cmp	r3, #0
 8005638:	bfbb      	ittet	lt
 800563a:	425b      	neglt	r3, r3
 800563c:	f042 0202 	orrlt.w	r2, r2, #2
 8005640:	9307      	strge	r3, [sp, #28]
 8005642:	9307      	strlt	r3, [sp, #28]
 8005644:	bfb8      	it	lt
 8005646:	9204      	strlt	r2, [sp, #16]
 8005648:	7823      	ldrb	r3, [r4, #0]
 800564a:	2b2e      	cmp	r3, #46	; 0x2e
 800564c:	d10c      	bne.n	8005668 <_svfiprintf_r+0x130>
 800564e:	7863      	ldrb	r3, [r4, #1]
 8005650:	2b2a      	cmp	r3, #42	; 0x2a
 8005652:	d134      	bne.n	80056be <_svfiprintf_r+0x186>
 8005654:	9b03      	ldr	r3, [sp, #12]
 8005656:	1d1a      	adds	r2, r3, #4
 8005658:	681b      	ldr	r3, [r3, #0]
 800565a:	9203      	str	r2, [sp, #12]
 800565c:	2b00      	cmp	r3, #0
 800565e:	bfb8      	it	lt
 8005660:	f04f 33ff 	movlt.w	r3, #4294967295
 8005664:	3402      	adds	r4, #2
 8005666:	9305      	str	r3, [sp, #20]
 8005668:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8005730 <_svfiprintf_r+0x1f8>
 800566c:	7821      	ldrb	r1, [r4, #0]
 800566e:	2203      	movs	r2, #3
 8005670:	4650      	mov	r0, sl
 8005672:	f7fa fdad 	bl	80001d0 <memchr>
 8005676:	b138      	cbz	r0, 8005688 <_svfiprintf_r+0x150>
 8005678:	9b04      	ldr	r3, [sp, #16]
 800567a:	eba0 000a 	sub.w	r0, r0, sl
 800567e:	2240      	movs	r2, #64	; 0x40
 8005680:	4082      	lsls	r2, r0
 8005682:	4313      	orrs	r3, r2
 8005684:	3401      	adds	r4, #1
 8005686:	9304      	str	r3, [sp, #16]
 8005688:	f814 1b01 	ldrb.w	r1, [r4], #1
 800568c:	4825      	ldr	r0, [pc, #148]	; (8005724 <_svfiprintf_r+0x1ec>)
 800568e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005692:	2206      	movs	r2, #6
 8005694:	f7fa fd9c 	bl	80001d0 <memchr>
 8005698:	2800      	cmp	r0, #0
 800569a:	d038      	beq.n	800570e <_svfiprintf_r+0x1d6>
 800569c:	4b22      	ldr	r3, [pc, #136]	; (8005728 <_svfiprintf_r+0x1f0>)
 800569e:	bb1b      	cbnz	r3, 80056e8 <_svfiprintf_r+0x1b0>
 80056a0:	9b03      	ldr	r3, [sp, #12]
 80056a2:	3307      	adds	r3, #7
 80056a4:	f023 0307 	bic.w	r3, r3, #7
 80056a8:	3308      	adds	r3, #8
 80056aa:	9303      	str	r3, [sp, #12]
 80056ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80056ae:	4433      	add	r3, r6
 80056b0:	9309      	str	r3, [sp, #36]	; 0x24
 80056b2:	e768      	b.n	8005586 <_svfiprintf_r+0x4e>
 80056b4:	fb0c 3202 	mla	r2, ip, r2, r3
 80056b8:	460c      	mov	r4, r1
 80056ba:	2001      	movs	r0, #1
 80056bc:	e7a6      	b.n	800560c <_svfiprintf_r+0xd4>
 80056be:	2300      	movs	r3, #0
 80056c0:	3401      	adds	r4, #1
 80056c2:	9305      	str	r3, [sp, #20]
 80056c4:	4619      	mov	r1, r3
 80056c6:	f04f 0c0a 	mov.w	ip, #10
 80056ca:	4620      	mov	r0, r4
 80056cc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80056d0:	3a30      	subs	r2, #48	; 0x30
 80056d2:	2a09      	cmp	r2, #9
 80056d4:	d903      	bls.n	80056de <_svfiprintf_r+0x1a6>
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d0c6      	beq.n	8005668 <_svfiprintf_r+0x130>
 80056da:	9105      	str	r1, [sp, #20]
 80056dc:	e7c4      	b.n	8005668 <_svfiprintf_r+0x130>
 80056de:	fb0c 2101 	mla	r1, ip, r1, r2
 80056e2:	4604      	mov	r4, r0
 80056e4:	2301      	movs	r3, #1
 80056e6:	e7f0      	b.n	80056ca <_svfiprintf_r+0x192>
 80056e8:	ab03      	add	r3, sp, #12
 80056ea:	9300      	str	r3, [sp, #0]
 80056ec:	462a      	mov	r2, r5
 80056ee:	4b0f      	ldr	r3, [pc, #60]	; (800572c <_svfiprintf_r+0x1f4>)
 80056f0:	a904      	add	r1, sp, #16
 80056f2:	4638      	mov	r0, r7
 80056f4:	f7fc fc66 	bl	8001fc4 <_printf_float>
 80056f8:	1c42      	adds	r2, r0, #1
 80056fa:	4606      	mov	r6, r0
 80056fc:	d1d6      	bne.n	80056ac <_svfiprintf_r+0x174>
 80056fe:	89ab      	ldrh	r3, [r5, #12]
 8005700:	065b      	lsls	r3, r3, #25
 8005702:	f53f af2d 	bmi.w	8005560 <_svfiprintf_r+0x28>
 8005706:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005708:	b01d      	add	sp, #116	; 0x74
 800570a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800570e:	ab03      	add	r3, sp, #12
 8005710:	9300      	str	r3, [sp, #0]
 8005712:	462a      	mov	r2, r5
 8005714:	4b05      	ldr	r3, [pc, #20]	; (800572c <_svfiprintf_r+0x1f4>)
 8005716:	a904      	add	r1, sp, #16
 8005718:	4638      	mov	r0, r7
 800571a:	f7fc fef7 	bl	800250c <_printf_i>
 800571e:	e7eb      	b.n	80056f8 <_svfiprintf_r+0x1c0>
 8005720:	08006c40 	.word	0x08006c40
 8005724:	08006c4a 	.word	0x08006c4a
 8005728:	08001fc5 	.word	0x08001fc5
 800572c:	08005485 	.word	0x08005485
 8005730:	08006c46 	.word	0x08006c46

08005734 <__sflush_r>:
 8005734:	898a      	ldrh	r2, [r1, #12]
 8005736:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800573a:	4605      	mov	r5, r0
 800573c:	0710      	lsls	r0, r2, #28
 800573e:	460c      	mov	r4, r1
 8005740:	d458      	bmi.n	80057f4 <__sflush_r+0xc0>
 8005742:	684b      	ldr	r3, [r1, #4]
 8005744:	2b00      	cmp	r3, #0
 8005746:	dc05      	bgt.n	8005754 <__sflush_r+0x20>
 8005748:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800574a:	2b00      	cmp	r3, #0
 800574c:	dc02      	bgt.n	8005754 <__sflush_r+0x20>
 800574e:	2000      	movs	r0, #0
 8005750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005754:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005756:	2e00      	cmp	r6, #0
 8005758:	d0f9      	beq.n	800574e <__sflush_r+0x1a>
 800575a:	2300      	movs	r3, #0
 800575c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005760:	682f      	ldr	r7, [r5, #0]
 8005762:	6a21      	ldr	r1, [r4, #32]
 8005764:	602b      	str	r3, [r5, #0]
 8005766:	d032      	beq.n	80057ce <__sflush_r+0x9a>
 8005768:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800576a:	89a3      	ldrh	r3, [r4, #12]
 800576c:	075a      	lsls	r2, r3, #29
 800576e:	d505      	bpl.n	800577c <__sflush_r+0x48>
 8005770:	6863      	ldr	r3, [r4, #4]
 8005772:	1ac0      	subs	r0, r0, r3
 8005774:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005776:	b10b      	cbz	r3, 800577c <__sflush_r+0x48>
 8005778:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800577a:	1ac0      	subs	r0, r0, r3
 800577c:	2300      	movs	r3, #0
 800577e:	4602      	mov	r2, r0
 8005780:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005782:	6a21      	ldr	r1, [r4, #32]
 8005784:	4628      	mov	r0, r5
 8005786:	47b0      	blx	r6
 8005788:	1c43      	adds	r3, r0, #1
 800578a:	89a3      	ldrh	r3, [r4, #12]
 800578c:	d106      	bne.n	800579c <__sflush_r+0x68>
 800578e:	6829      	ldr	r1, [r5, #0]
 8005790:	291d      	cmp	r1, #29
 8005792:	d82b      	bhi.n	80057ec <__sflush_r+0xb8>
 8005794:	4a29      	ldr	r2, [pc, #164]	; (800583c <__sflush_r+0x108>)
 8005796:	410a      	asrs	r2, r1
 8005798:	07d6      	lsls	r6, r2, #31
 800579a:	d427      	bmi.n	80057ec <__sflush_r+0xb8>
 800579c:	2200      	movs	r2, #0
 800579e:	6062      	str	r2, [r4, #4]
 80057a0:	04d9      	lsls	r1, r3, #19
 80057a2:	6922      	ldr	r2, [r4, #16]
 80057a4:	6022      	str	r2, [r4, #0]
 80057a6:	d504      	bpl.n	80057b2 <__sflush_r+0x7e>
 80057a8:	1c42      	adds	r2, r0, #1
 80057aa:	d101      	bne.n	80057b0 <__sflush_r+0x7c>
 80057ac:	682b      	ldr	r3, [r5, #0]
 80057ae:	b903      	cbnz	r3, 80057b2 <__sflush_r+0x7e>
 80057b0:	6560      	str	r0, [r4, #84]	; 0x54
 80057b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80057b4:	602f      	str	r7, [r5, #0]
 80057b6:	2900      	cmp	r1, #0
 80057b8:	d0c9      	beq.n	800574e <__sflush_r+0x1a>
 80057ba:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80057be:	4299      	cmp	r1, r3
 80057c0:	d002      	beq.n	80057c8 <__sflush_r+0x94>
 80057c2:	4628      	mov	r0, r5
 80057c4:	f7fe fa1a 	bl	8003bfc <_free_r>
 80057c8:	2000      	movs	r0, #0
 80057ca:	6360      	str	r0, [r4, #52]	; 0x34
 80057cc:	e7c0      	b.n	8005750 <__sflush_r+0x1c>
 80057ce:	2301      	movs	r3, #1
 80057d0:	4628      	mov	r0, r5
 80057d2:	47b0      	blx	r6
 80057d4:	1c41      	adds	r1, r0, #1
 80057d6:	d1c8      	bne.n	800576a <__sflush_r+0x36>
 80057d8:	682b      	ldr	r3, [r5, #0]
 80057da:	2b00      	cmp	r3, #0
 80057dc:	d0c5      	beq.n	800576a <__sflush_r+0x36>
 80057de:	2b1d      	cmp	r3, #29
 80057e0:	d001      	beq.n	80057e6 <__sflush_r+0xb2>
 80057e2:	2b16      	cmp	r3, #22
 80057e4:	d101      	bne.n	80057ea <__sflush_r+0xb6>
 80057e6:	602f      	str	r7, [r5, #0]
 80057e8:	e7b1      	b.n	800574e <__sflush_r+0x1a>
 80057ea:	89a3      	ldrh	r3, [r4, #12]
 80057ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80057f0:	81a3      	strh	r3, [r4, #12]
 80057f2:	e7ad      	b.n	8005750 <__sflush_r+0x1c>
 80057f4:	690f      	ldr	r7, [r1, #16]
 80057f6:	2f00      	cmp	r7, #0
 80057f8:	d0a9      	beq.n	800574e <__sflush_r+0x1a>
 80057fa:	0793      	lsls	r3, r2, #30
 80057fc:	680e      	ldr	r6, [r1, #0]
 80057fe:	bf08      	it	eq
 8005800:	694b      	ldreq	r3, [r1, #20]
 8005802:	600f      	str	r7, [r1, #0]
 8005804:	bf18      	it	ne
 8005806:	2300      	movne	r3, #0
 8005808:	eba6 0807 	sub.w	r8, r6, r7
 800580c:	608b      	str	r3, [r1, #8]
 800580e:	f1b8 0f00 	cmp.w	r8, #0
 8005812:	dd9c      	ble.n	800574e <__sflush_r+0x1a>
 8005814:	6a21      	ldr	r1, [r4, #32]
 8005816:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005818:	4643      	mov	r3, r8
 800581a:	463a      	mov	r2, r7
 800581c:	4628      	mov	r0, r5
 800581e:	47b0      	blx	r6
 8005820:	2800      	cmp	r0, #0
 8005822:	dc06      	bgt.n	8005832 <__sflush_r+0xfe>
 8005824:	89a3      	ldrh	r3, [r4, #12]
 8005826:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800582a:	81a3      	strh	r3, [r4, #12]
 800582c:	f04f 30ff 	mov.w	r0, #4294967295
 8005830:	e78e      	b.n	8005750 <__sflush_r+0x1c>
 8005832:	4407      	add	r7, r0
 8005834:	eba8 0800 	sub.w	r8, r8, r0
 8005838:	e7e9      	b.n	800580e <__sflush_r+0xda>
 800583a:	bf00      	nop
 800583c:	dfbffffe 	.word	0xdfbffffe

08005840 <_fflush_r>:
 8005840:	b538      	push	{r3, r4, r5, lr}
 8005842:	690b      	ldr	r3, [r1, #16]
 8005844:	4605      	mov	r5, r0
 8005846:	460c      	mov	r4, r1
 8005848:	b913      	cbnz	r3, 8005850 <_fflush_r+0x10>
 800584a:	2500      	movs	r5, #0
 800584c:	4628      	mov	r0, r5
 800584e:	bd38      	pop	{r3, r4, r5, pc}
 8005850:	b118      	cbz	r0, 800585a <_fflush_r+0x1a>
 8005852:	6a03      	ldr	r3, [r0, #32]
 8005854:	b90b      	cbnz	r3, 800585a <_fflush_r+0x1a>
 8005856:	f7fd fa17 	bl	8002c88 <__sinit>
 800585a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800585e:	2b00      	cmp	r3, #0
 8005860:	d0f3      	beq.n	800584a <_fflush_r+0xa>
 8005862:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005864:	07d0      	lsls	r0, r2, #31
 8005866:	d404      	bmi.n	8005872 <_fflush_r+0x32>
 8005868:	0599      	lsls	r1, r3, #22
 800586a:	d402      	bmi.n	8005872 <_fflush_r+0x32>
 800586c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800586e:	f7fd fb42 	bl	8002ef6 <__retarget_lock_acquire_recursive>
 8005872:	4628      	mov	r0, r5
 8005874:	4621      	mov	r1, r4
 8005876:	f7ff ff5d 	bl	8005734 <__sflush_r>
 800587a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800587c:	07da      	lsls	r2, r3, #31
 800587e:	4605      	mov	r5, r0
 8005880:	d4e4      	bmi.n	800584c <_fflush_r+0xc>
 8005882:	89a3      	ldrh	r3, [r4, #12]
 8005884:	059b      	lsls	r3, r3, #22
 8005886:	d4e1      	bmi.n	800584c <_fflush_r+0xc>
 8005888:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800588a:	f7fd fb35 	bl	8002ef8 <__retarget_lock_release_recursive>
 800588e:	e7dd      	b.n	800584c <_fflush_r+0xc>

08005890 <memmove>:
 8005890:	4288      	cmp	r0, r1
 8005892:	b510      	push	{r4, lr}
 8005894:	eb01 0402 	add.w	r4, r1, r2
 8005898:	d902      	bls.n	80058a0 <memmove+0x10>
 800589a:	4284      	cmp	r4, r0
 800589c:	4623      	mov	r3, r4
 800589e:	d807      	bhi.n	80058b0 <memmove+0x20>
 80058a0:	1e43      	subs	r3, r0, #1
 80058a2:	42a1      	cmp	r1, r4
 80058a4:	d008      	beq.n	80058b8 <memmove+0x28>
 80058a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80058aa:	f803 2f01 	strb.w	r2, [r3, #1]!
 80058ae:	e7f8      	b.n	80058a2 <memmove+0x12>
 80058b0:	4402      	add	r2, r0
 80058b2:	4601      	mov	r1, r0
 80058b4:	428a      	cmp	r2, r1
 80058b6:	d100      	bne.n	80058ba <memmove+0x2a>
 80058b8:	bd10      	pop	{r4, pc}
 80058ba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80058be:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80058c2:	e7f7      	b.n	80058b4 <memmove+0x24>

080058c4 <strncmp>:
 80058c4:	b510      	push	{r4, lr}
 80058c6:	b16a      	cbz	r2, 80058e4 <strncmp+0x20>
 80058c8:	3901      	subs	r1, #1
 80058ca:	1884      	adds	r4, r0, r2
 80058cc:	f810 2b01 	ldrb.w	r2, [r0], #1
 80058d0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80058d4:	429a      	cmp	r2, r3
 80058d6:	d103      	bne.n	80058e0 <strncmp+0x1c>
 80058d8:	42a0      	cmp	r0, r4
 80058da:	d001      	beq.n	80058e0 <strncmp+0x1c>
 80058dc:	2a00      	cmp	r2, #0
 80058de:	d1f5      	bne.n	80058cc <strncmp+0x8>
 80058e0:	1ad0      	subs	r0, r2, r3
 80058e2:	bd10      	pop	{r4, pc}
 80058e4:	4610      	mov	r0, r2
 80058e6:	e7fc      	b.n	80058e2 <strncmp+0x1e>

080058e8 <_sbrk_r>:
 80058e8:	b538      	push	{r3, r4, r5, lr}
 80058ea:	4d06      	ldr	r5, [pc, #24]	; (8005904 <_sbrk_r+0x1c>)
 80058ec:	2300      	movs	r3, #0
 80058ee:	4604      	mov	r4, r0
 80058f0:	4608      	mov	r0, r1
 80058f2:	602b      	str	r3, [r5, #0]
 80058f4:	f7fc f886 	bl	8001a04 <_sbrk>
 80058f8:	1c43      	adds	r3, r0, #1
 80058fa:	d102      	bne.n	8005902 <_sbrk_r+0x1a>
 80058fc:	682b      	ldr	r3, [r5, #0]
 80058fe:	b103      	cbz	r3, 8005902 <_sbrk_r+0x1a>
 8005900:	6023      	str	r3, [r4, #0]
 8005902:	bd38      	pop	{r3, r4, r5, pc}
 8005904:	20000740 	.word	0x20000740

08005908 <memcpy>:
 8005908:	440a      	add	r2, r1
 800590a:	4291      	cmp	r1, r2
 800590c:	f100 33ff 	add.w	r3, r0, #4294967295
 8005910:	d100      	bne.n	8005914 <memcpy+0xc>
 8005912:	4770      	bx	lr
 8005914:	b510      	push	{r4, lr}
 8005916:	f811 4b01 	ldrb.w	r4, [r1], #1
 800591a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800591e:	4291      	cmp	r1, r2
 8005920:	d1f9      	bne.n	8005916 <memcpy+0xe>
 8005922:	bd10      	pop	{r4, pc}
 8005924:	0000      	movs	r0, r0
	...

08005928 <nan>:
 8005928:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8005930 <nan+0x8>
 800592c:	4770      	bx	lr
 800592e:	bf00      	nop
 8005930:	00000000 	.word	0x00000000
 8005934:	7ff80000 	.word	0x7ff80000

08005938 <__assert_func>:
 8005938:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800593a:	4614      	mov	r4, r2
 800593c:	461a      	mov	r2, r3
 800593e:	4b09      	ldr	r3, [pc, #36]	; (8005964 <__assert_func+0x2c>)
 8005940:	681b      	ldr	r3, [r3, #0]
 8005942:	4605      	mov	r5, r0
 8005944:	68d8      	ldr	r0, [r3, #12]
 8005946:	b14c      	cbz	r4, 800595c <__assert_func+0x24>
 8005948:	4b07      	ldr	r3, [pc, #28]	; (8005968 <__assert_func+0x30>)
 800594a:	9100      	str	r1, [sp, #0]
 800594c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005950:	4906      	ldr	r1, [pc, #24]	; (800596c <__assert_func+0x34>)
 8005952:	462b      	mov	r3, r5
 8005954:	f000 fbca 	bl	80060ec <fiprintf>
 8005958:	f000 fbda 	bl	8006110 <abort>
 800595c:	4b04      	ldr	r3, [pc, #16]	; (8005970 <__assert_func+0x38>)
 800595e:	461c      	mov	r4, r3
 8005960:	e7f3      	b.n	800594a <__assert_func+0x12>
 8005962:	bf00      	nop
 8005964:	20000060 	.word	0x20000060
 8005968:	08006c59 	.word	0x08006c59
 800596c:	08006c66 	.word	0x08006c66
 8005970:	08006c94 	.word	0x08006c94

08005974 <_calloc_r>:
 8005974:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005976:	fba1 2402 	umull	r2, r4, r1, r2
 800597a:	b94c      	cbnz	r4, 8005990 <_calloc_r+0x1c>
 800597c:	4611      	mov	r1, r2
 800597e:	9201      	str	r2, [sp, #4]
 8005980:	f7fe f9b0 	bl	8003ce4 <_malloc_r>
 8005984:	9a01      	ldr	r2, [sp, #4]
 8005986:	4605      	mov	r5, r0
 8005988:	b930      	cbnz	r0, 8005998 <_calloc_r+0x24>
 800598a:	4628      	mov	r0, r5
 800598c:	b003      	add	sp, #12
 800598e:	bd30      	pop	{r4, r5, pc}
 8005990:	220c      	movs	r2, #12
 8005992:	6002      	str	r2, [r0, #0]
 8005994:	2500      	movs	r5, #0
 8005996:	e7f8      	b.n	800598a <_calloc_r+0x16>
 8005998:	4621      	mov	r1, r4
 800599a:	f7fd fa2f 	bl	8002dfc <memset>
 800599e:	e7f4      	b.n	800598a <_calloc_r+0x16>

080059a0 <rshift>:
 80059a0:	6903      	ldr	r3, [r0, #16]
 80059a2:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80059a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80059aa:	ea4f 1261 	mov.w	r2, r1, asr #5
 80059ae:	f100 0414 	add.w	r4, r0, #20
 80059b2:	dd45      	ble.n	8005a40 <rshift+0xa0>
 80059b4:	f011 011f 	ands.w	r1, r1, #31
 80059b8:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80059bc:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80059c0:	d10c      	bne.n	80059dc <rshift+0x3c>
 80059c2:	f100 0710 	add.w	r7, r0, #16
 80059c6:	4629      	mov	r1, r5
 80059c8:	42b1      	cmp	r1, r6
 80059ca:	d334      	bcc.n	8005a36 <rshift+0x96>
 80059cc:	1a9b      	subs	r3, r3, r2
 80059ce:	009b      	lsls	r3, r3, #2
 80059d0:	1eea      	subs	r2, r5, #3
 80059d2:	4296      	cmp	r6, r2
 80059d4:	bf38      	it	cc
 80059d6:	2300      	movcc	r3, #0
 80059d8:	4423      	add	r3, r4
 80059da:	e015      	b.n	8005a08 <rshift+0x68>
 80059dc:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80059e0:	f1c1 0820 	rsb	r8, r1, #32
 80059e4:	40cf      	lsrs	r7, r1
 80059e6:	f105 0e04 	add.w	lr, r5, #4
 80059ea:	46a1      	mov	r9, r4
 80059ec:	4576      	cmp	r6, lr
 80059ee:	46f4      	mov	ip, lr
 80059f0:	d815      	bhi.n	8005a1e <rshift+0x7e>
 80059f2:	1a9a      	subs	r2, r3, r2
 80059f4:	0092      	lsls	r2, r2, #2
 80059f6:	3a04      	subs	r2, #4
 80059f8:	3501      	adds	r5, #1
 80059fa:	42ae      	cmp	r6, r5
 80059fc:	bf38      	it	cc
 80059fe:	2200      	movcc	r2, #0
 8005a00:	18a3      	adds	r3, r4, r2
 8005a02:	50a7      	str	r7, [r4, r2]
 8005a04:	b107      	cbz	r7, 8005a08 <rshift+0x68>
 8005a06:	3304      	adds	r3, #4
 8005a08:	1b1a      	subs	r2, r3, r4
 8005a0a:	42a3      	cmp	r3, r4
 8005a0c:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8005a10:	bf08      	it	eq
 8005a12:	2300      	moveq	r3, #0
 8005a14:	6102      	str	r2, [r0, #16]
 8005a16:	bf08      	it	eq
 8005a18:	6143      	streq	r3, [r0, #20]
 8005a1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005a1e:	f8dc c000 	ldr.w	ip, [ip]
 8005a22:	fa0c fc08 	lsl.w	ip, ip, r8
 8005a26:	ea4c 0707 	orr.w	r7, ip, r7
 8005a2a:	f849 7b04 	str.w	r7, [r9], #4
 8005a2e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8005a32:	40cf      	lsrs	r7, r1
 8005a34:	e7da      	b.n	80059ec <rshift+0x4c>
 8005a36:	f851 cb04 	ldr.w	ip, [r1], #4
 8005a3a:	f847 cf04 	str.w	ip, [r7, #4]!
 8005a3e:	e7c3      	b.n	80059c8 <rshift+0x28>
 8005a40:	4623      	mov	r3, r4
 8005a42:	e7e1      	b.n	8005a08 <rshift+0x68>

08005a44 <__hexdig_fun>:
 8005a44:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8005a48:	2b09      	cmp	r3, #9
 8005a4a:	d802      	bhi.n	8005a52 <__hexdig_fun+0xe>
 8005a4c:	3820      	subs	r0, #32
 8005a4e:	b2c0      	uxtb	r0, r0
 8005a50:	4770      	bx	lr
 8005a52:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005a56:	2b05      	cmp	r3, #5
 8005a58:	d801      	bhi.n	8005a5e <__hexdig_fun+0x1a>
 8005a5a:	3847      	subs	r0, #71	; 0x47
 8005a5c:	e7f7      	b.n	8005a4e <__hexdig_fun+0xa>
 8005a5e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005a62:	2b05      	cmp	r3, #5
 8005a64:	d801      	bhi.n	8005a6a <__hexdig_fun+0x26>
 8005a66:	3827      	subs	r0, #39	; 0x27
 8005a68:	e7f1      	b.n	8005a4e <__hexdig_fun+0xa>
 8005a6a:	2000      	movs	r0, #0
 8005a6c:	4770      	bx	lr
	...

08005a70 <__gethex>:
 8005a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a74:	4617      	mov	r7, r2
 8005a76:	680a      	ldr	r2, [r1, #0]
 8005a78:	b085      	sub	sp, #20
 8005a7a:	f102 0b02 	add.w	fp, r2, #2
 8005a7e:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005a82:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005a86:	4681      	mov	r9, r0
 8005a88:	468a      	mov	sl, r1
 8005a8a:	9302      	str	r3, [sp, #8]
 8005a8c:	32fe      	adds	r2, #254	; 0xfe
 8005a8e:	eb02 030b 	add.w	r3, r2, fp
 8005a92:	46d8      	mov	r8, fp
 8005a94:	f81b 0b01 	ldrb.w	r0, [fp], #1
 8005a98:	9301      	str	r3, [sp, #4]
 8005a9a:	2830      	cmp	r0, #48	; 0x30
 8005a9c:	d0f7      	beq.n	8005a8e <__gethex+0x1e>
 8005a9e:	f7ff ffd1 	bl	8005a44 <__hexdig_fun>
 8005aa2:	4604      	mov	r4, r0
 8005aa4:	2800      	cmp	r0, #0
 8005aa6:	d138      	bne.n	8005b1a <__gethex+0xaa>
 8005aa8:	49a7      	ldr	r1, [pc, #668]	; (8005d48 <__gethex+0x2d8>)
 8005aaa:	2201      	movs	r2, #1
 8005aac:	4640      	mov	r0, r8
 8005aae:	f7ff ff09 	bl	80058c4 <strncmp>
 8005ab2:	4606      	mov	r6, r0
 8005ab4:	2800      	cmp	r0, #0
 8005ab6:	d169      	bne.n	8005b8c <__gethex+0x11c>
 8005ab8:	f898 0001 	ldrb.w	r0, [r8, #1]
 8005abc:	465d      	mov	r5, fp
 8005abe:	f7ff ffc1 	bl	8005a44 <__hexdig_fun>
 8005ac2:	2800      	cmp	r0, #0
 8005ac4:	d064      	beq.n	8005b90 <__gethex+0x120>
 8005ac6:	465a      	mov	r2, fp
 8005ac8:	7810      	ldrb	r0, [r2, #0]
 8005aca:	2830      	cmp	r0, #48	; 0x30
 8005acc:	4690      	mov	r8, r2
 8005ace:	f102 0201 	add.w	r2, r2, #1
 8005ad2:	d0f9      	beq.n	8005ac8 <__gethex+0x58>
 8005ad4:	f7ff ffb6 	bl	8005a44 <__hexdig_fun>
 8005ad8:	2301      	movs	r3, #1
 8005ada:	fab0 f480 	clz	r4, r0
 8005ade:	0964      	lsrs	r4, r4, #5
 8005ae0:	465e      	mov	r6, fp
 8005ae2:	9301      	str	r3, [sp, #4]
 8005ae4:	4642      	mov	r2, r8
 8005ae6:	4615      	mov	r5, r2
 8005ae8:	3201      	adds	r2, #1
 8005aea:	7828      	ldrb	r0, [r5, #0]
 8005aec:	f7ff ffaa 	bl	8005a44 <__hexdig_fun>
 8005af0:	2800      	cmp	r0, #0
 8005af2:	d1f8      	bne.n	8005ae6 <__gethex+0x76>
 8005af4:	4994      	ldr	r1, [pc, #592]	; (8005d48 <__gethex+0x2d8>)
 8005af6:	2201      	movs	r2, #1
 8005af8:	4628      	mov	r0, r5
 8005afa:	f7ff fee3 	bl	80058c4 <strncmp>
 8005afe:	b978      	cbnz	r0, 8005b20 <__gethex+0xb0>
 8005b00:	b946      	cbnz	r6, 8005b14 <__gethex+0xa4>
 8005b02:	1c6e      	adds	r6, r5, #1
 8005b04:	4632      	mov	r2, r6
 8005b06:	4615      	mov	r5, r2
 8005b08:	3201      	adds	r2, #1
 8005b0a:	7828      	ldrb	r0, [r5, #0]
 8005b0c:	f7ff ff9a 	bl	8005a44 <__hexdig_fun>
 8005b10:	2800      	cmp	r0, #0
 8005b12:	d1f8      	bne.n	8005b06 <__gethex+0x96>
 8005b14:	1b73      	subs	r3, r6, r5
 8005b16:	009e      	lsls	r6, r3, #2
 8005b18:	e004      	b.n	8005b24 <__gethex+0xb4>
 8005b1a:	2400      	movs	r4, #0
 8005b1c:	4626      	mov	r6, r4
 8005b1e:	e7e1      	b.n	8005ae4 <__gethex+0x74>
 8005b20:	2e00      	cmp	r6, #0
 8005b22:	d1f7      	bne.n	8005b14 <__gethex+0xa4>
 8005b24:	782b      	ldrb	r3, [r5, #0]
 8005b26:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8005b2a:	2b50      	cmp	r3, #80	; 0x50
 8005b2c:	d13d      	bne.n	8005baa <__gethex+0x13a>
 8005b2e:	786b      	ldrb	r3, [r5, #1]
 8005b30:	2b2b      	cmp	r3, #43	; 0x2b
 8005b32:	d02f      	beq.n	8005b94 <__gethex+0x124>
 8005b34:	2b2d      	cmp	r3, #45	; 0x2d
 8005b36:	d031      	beq.n	8005b9c <__gethex+0x12c>
 8005b38:	1c69      	adds	r1, r5, #1
 8005b3a:	f04f 0b00 	mov.w	fp, #0
 8005b3e:	7808      	ldrb	r0, [r1, #0]
 8005b40:	f7ff ff80 	bl	8005a44 <__hexdig_fun>
 8005b44:	1e42      	subs	r2, r0, #1
 8005b46:	b2d2      	uxtb	r2, r2
 8005b48:	2a18      	cmp	r2, #24
 8005b4a:	d82e      	bhi.n	8005baa <__gethex+0x13a>
 8005b4c:	f1a0 0210 	sub.w	r2, r0, #16
 8005b50:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005b54:	f7ff ff76 	bl	8005a44 <__hexdig_fun>
 8005b58:	f100 3cff 	add.w	ip, r0, #4294967295
 8005b5c:	fa5f fc8c 	uxtb.w	ip, ip
 8005b60:	f1bc 0f18 	cmp.w	ip, #24
 8005b64:	d91d      	bls.n	8005ba2 <__gethex+0x132>
 8005b66:	f1bb 0f00 	cmp.w	fp, #0
 8005b6a:	d000      	beq.n	8005b6e <__gethex+0xfe>
 8005b6c:	4252      	negs	r2, r2
 8005b6e:	4416      	add	r6, r2
 8005b70:	f8ca 1000 	str.w	r1, [sl]
 8005b74:	b1dc      	cbz	r4, 8005bae <__gethex+0x13e>
 8005b76:	9b01      	ldr	r3, [sp, #4]
 8005b78:	2b00      	cmp	r3, #0
 8005b7a:	bf14      	ite	ne
 8005b7c:	f04f 0800 	movne.w	r8, #0
 8005b80:	f04f 0806 	moveq.w	r8, #6
 8005b84:	4640      	mov	r0, r8
 8005b86:	b005      	add	sp, #20
 8005b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b8c:	4645      	mov	r5, r8
 8005b8e:	4626      	mov	r6, r4
 8005b90:	2401      	movs	r4, #1
 8005b92:	e7c7      	b.n	8005b24 <__gethex+0xb4>
 8005b94:	f04f 0b00 	mov.w	fp, #0
 8005b98:	1ca9      	adds	r1, r5, #2
 8005b9a:	e7d0      	b.n	8005b3e <__gethex+0xce>
 8005b9c:	f04f 0b01 	mov.w	fp, #1
 8005ba0:	e7fa      	b.n	8005b98 <__gethex+0x128>
 8005ba2:	230a      	movs	r3, #10
 8005ba4:	fb03 0002 	mla	r0, r3, r2, r0
 8005ba8:	e7d0      	b.n	8005b4c <__gethex+0xdc>
 8005baa:	4629      	mov	r1, r5
 8005bac:	e7e0      	b.n	8005b70 <__gethex+0x100>
 8005bae:	eba5 0308 	sub.w	r3, r5, r8
 8005bb2:	3b01      	subs	r3, #1
 8005bb4:	4621      	mov	r1, r4
 8005bb6:	2b07      	cmp	r3, #7
 8005bb8:	dc0a      	bgt.n	8005bd0 <__gethex+0x160>
 8005bba:	4648      	mov	r0, r9
 8005bbc:	f7fe f91e 	bl	8003dfc <_Balloc>
 8005bc0:	4604      	mov	r4, r0
 8005bc2:	b940      	cbnz	r0, 8005bd6 <__gethex+0x166>
 8005bc4:	4b61      	ldr	r3, [pc, #388]	; (8005d4c <__gethex+0x2dc>)
 8005bc6:	4602      	mov	r2, r0
 8005bc8:	21e4      	movs	r1, #228	; 0xe4
 8005bca:	4861      	ldr	r0, [pc, #388]	; (8005d50 <__gethex+0x2e0>)
 8005bcc:	f7ff feb4 	bl	8005938 <__assert_func>
 8005bd0:	3101      	adds	r1, #1
 8005bd2:	105b      	asrs	r3, r3, #1
 8005bd4:	e7ef      	b.n	8005bb6 <__gethex+0x146>
 8005bd6:	f100 0a14 	add.w	sl, r0, #20
 8005bda:	2300      	movs	r3, #0
 8005bdc:	495a      	ldr	r1, [pc, #360]	; (8005d48 <__gethex+0x2d8>)
 8005bde:	f8cd a004 	str.w	sl, [sp, #4]
 8005be2:	469b      	mov	fp, r3
 8005be4:	45a8      	cmp	r8, r5
 8005be6:	d342      	bcc.n	8005c6e <__gethex+0x1fe>
 8005be8:	9801      	ldr	r0, [sp, #4]
 8005bea:	f840 bb04 	str.w	fp, [r0], #4
 8005bee:	eba0 000a 	sub.w	r0, r0, sl
 8005bf2:	1080      	asrs	r0, r0, #2
 8005bf4:	6120      	str	r0, [r4, #16]
 8005bf6:	ea4f 1840 	mov.w	r8, r0, lsl #5
 8005bfa:	4658      	mov	r0, fp
 8005bfc:	f7fe f9f0 	bl	8003fe0 <__hi0bits>
 8005c00:	683d      	ldr	r5, [r7, #0]
 8005c02:	eba8 0000 	sub.w	r0, r8, r0
 8005c06:	42a8      	cmp	r0, r5
 8005c08:	dd59      	ble.n	8005cbe <__gethex+0x24e>
 8005c0a:	eba0 0805 	sub.w	r8, r0, r5
 8005c0e:	4641      	mov	r1, r8
 8005c10:	4620      	mov	r0, r4
 8005c12:	f7fe fd7f 	bl	8004714 <__any_on>
 8005c16:	4683      	mov	fp, r0
 8005c18:	b1b8      	cbz	r0, 8005c4a <__gethex+0x1da>
 8005c1a:	f108 33ff 	add.w	r3, r8, #4294967295
 8005c1e:	1159      	asrs	r1, r3, #5
 8005c20:	f003 021f 	and.w	r2, r3, #31
 8005c24:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005c28:	f04f 0b01 	mov.w	fp, #1
 8005c2c:	fa0b f202 	lsl.w	r2, fp, r2
 8005c30:	420a      	tst	r2, r1
 8005c32:	d00a      	beq.n	8005c4a <__gethex+0x1da>
 8005c34:	455b      	cmp	r3, fp
 8005c36:	dd06      	ble.n	8005c46 <__gethex+0x1d6>
 8005c38:	f1a8 0102 	sub.w	r1, r8, #2
 8005c3c:	4620      	mov	r0, r4
 8005c3e:	f7fe fd69 	bl	8004714 <__any_on>
 8005c42:	2800      	cmp	r0, #0
 8005c44:	d138      	bne.n	8005cb8 <__gethex+0x248>
 8005c46:	f04f 0b02 	mov.w	fp, #2
 8005c4a:	4641      	mov	r1, r8
 8005c4c:	4620      	mov	r0, r4
 8005c4e:	f7ff fea7 	bl	80059a0 <rshift>
 8005c52:	4446      	add	r6, r8
 8005c54:	68bb      	ldr	r3, [r7, #8]
 8005c56:	42b3      	cmp	r3, r6
 8005c58:	da41      	bge.n	8005cde <__gethex+0x26e>
 8005c5a:	4621      	mov	r1, r4
 8005c5c:	4648      	mov	r0, r9
 8005c5e:	f7fe f90d 	bl	8003e7c <_Bfree>
 8005c62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005c64:	2300      	movs	r3, #0
 8005c66:	6013      	str	r3, [r2, #0]
 8005c68:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 8005c6c:	e78a      	b.n	8005b84 <__gethex+0x114>
 8005c6e:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 8005c72:	2a2e      	cmp	r2, #46	; 0x2e
 8005c74:	d014      	beq.n	8005ca0 <__gethex+0x230>
 8005c76:	2b20      	cmp	r3, #32
 8005c78:	d106      	bne.n	8005c88 <__gethex+0x218>
 8005c7a:	9b01      	ldr	r3, [sp, #4]
 8005c7c:	f843 bb04 	str.w	fp, [r3], #4
 8005c80:	f04f 0b00 	mov.w	fp, #0
 8005c84:	9301      	str	r3, [sp, #4]
 8005c86:	465b      	mov	r3, fp
 8005c88:	7828      	ldrb	r0, [r5, #0]
 8005c8a:	9303      	str	r3, [sp, #12]
 8005c8c:	f7ff feda 	bl	8005a44 <__hexdig_fun>
 8005c90:	9b03      	ldr	r3, [sp, #12]
 8005c92:	f000 000f 	and.w	r0, r0, #15
 8005c96:	4098      	lsls	r0, r3
 8005c98:	ea4b 0b00 	orr.w	fp, fp, r0
 8005c9c:	3304      	adds	r3, #4
 8005c9e:	e7a1      	b.n	8005be4 <__gethex+0x174>
 8005ca0:	45a8      	cmp	r8, r5
 8005ca2:	d8e8      	bhi.n	8005c76 <__gethex+0x206>
 8005ca4:	2201      	movs	r2, #1
 8005ca6:	4628      	mov	r0, r5
 8005ca8:	9303      	str	r3, [sp, #12]
 8005caa:	f7ff fe0b 	bl	80058c4 <strncmp>
 8005cae:	4926      	ldr	r1, [pc, #152]	; (8005d48 <__gethex+0x2d8>)
 8005cb0:	9b03      	ldr	r3, [sp, #12]
 8005cb2:	2800      	cmp	r0, #0
 8005cb4:	d1df      	bne.n	8005c76 <__gethex+0x206>
 8005cb6:	e795      	b.n	8005be4 <__gethex+0x174>
 8005cb8:	f04f 0b03 	mov.w	fp, #3
 8005cbc:	e7c5      	b.n	8005c4a <__gethex+0x1da>
 8005cbe:	da0b      	bge.n	8005cd8 <__gethex+0x268>
 8005cc0:	eba5 0800 	sub.w	r8, r5, r0
 8005cc4:	4621      	mov	r1, r4
 8005cc6:	4642      	mov	r2, r8
 8005cc8:	4648      	mov	r0, r9
 8005cca:	f7fe faf1 	bl	80042b0 <__lshift>
 8005cce:	eba6 0608 	sub.w	r6, r6, r8
 8005cd2:	4604      	mov	r4, r0
 8005cd4:	f100 0a14 	add.w	sl, r0, #20
 8005cd8:	f04f 0b00 	mov.w	fp, #0
 8005cdc:	e7ba      	b.n	8005c54 <__gethex+0x1e4>
 8005cde:	687b      	ldr	r3, [r7, #4]
 8005ce0:	42b3      	cmp	r3, r6
 8005ce2:	dd73      	ble.n	8005dcc <__gethex+0x35c>
 8005ce4:	1b9e      	subs	r6, r3, r6
 8005ce6:	42b5      	cmp	r5, r6
 8005ce8:	dc34      	bgt.n	8005d54 <__gethex+0x2e4>
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	2b02      	cmp	r3, #2
 8005cee:	d023      	beq.n	8005d38 <__gethex+0x2c8>
 8005cf0:	2b03      	cmp	r3, #3
 8005cf2:	d025      	beq.n	8005d40 <__gethex+0x2d0>
 8005cf4:	2b01      	cmp	r3, #1
 8005cf6:	d115      	bne.n	8005d24 <__gethex+0x2b4>
 8005cf8:	42b5      	cmp	r5, r6
 8005cfa:	d113      	bne.n	8005d24 <__gethex+0x2b4>
 8005cfc:	2d01      	cmp	r5, #1
 8005cfe:	d10b      	bne.n	8005d18 <__gethex+0x2a8>
 8005d00:	9a02      	ldr	r2, [sp, #8]
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	6013      	str	r3, [r2, #0]
 8005d06:	2301      	movs	r3, #1
 8005d08:	6123      	str	r3, [r4, #16]
 8005d0a:	f8ca 3000 	str.w	r3, [sl]
 8005d0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005d10:	f04f 0862 	mov.w	r8, #98	; 0x62
 8005d14:	601c      	str	r4, [r3, #0]
 8005d16:	e735      	b.n	8005b84 <__gethex+0x114>
 8005d18:	1e69      	subs	r1, r5, #1
 8005d1a:	4620      	mov	r0, r4
 8005d1c:	f7fe fcfa 	bl	8004714 <__any_on>
 8005d20:	2800      	cmp	r0, #0
 8005d22:	d1ed      	bne.n	8005d00 <__gethex+0x290>
 8005d24:	4621      	mov	r1, r4
 8005d26:	4648      	mov	r0, r9
 8005d28:	f7fe f8a8 	bl	8003e7c <_Bfree>
 8005d2c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005d2e:	2300      	movs	r3, #0
 8005d30:	6013      	str	r3, [r2, #0]
 8005d32:	f04f 0850 	mov.w	r8, #80	; 0x50
 8005d36:	e725      	b.n	8005b84 <__gethex+0x114>
 8005d38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d3a:	2b00      	cmp	r3, #0
 8005d3c:	d1f2      	bne.n	8005d24 <__gethex+0x2b4>
 8005d3e:	e7df      	b.n	8005d00 <__gethex+0x290>
 8005d40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d1dc      	bne.n	8005d00 <__gethex+0x290>
 8005d46:	e7ed      	b.n	8005d24 <__gethex+0x2b4>
 8005d48:	08006bec 	.word	0x08006bec
 8005d4c:	08006a84 	.word	0x08006a84
 8005d50:	08006c95 	.word	0x08006c95
 8005d54:	f106 38ff 	add.w	r8, r6, #4294967295
 8005d58:	f1bb 0f00 	cmp.w	fp, #0
 8005d5c:	d133      	bne.n	8005dc6 <__gethex+0x356>
 8005d5e:	f1b8 0f00 	cmp.w	r8, #0
 8005d62:	d004      	beq.n	8005d6e <__gethex+0x2fe>
 8005d64:	4641      	mov	r1, r8
 8005d66:	4620      	mov	r0, r4
 8005d68:	f7fe fcd4 	bl	8004714 <__any_on>
 8005d6c:	4683      	mov	fp, r0
 8005d6e:	ea4f 1268 	mov.w	r2, r8, asr #5
 8005d72:	2301      	movs	r3, #1
 8005d74:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005d78:	f008 081f 	and.w	r8, r8, #31
 8005d7c:	fa03 f308 	lsl.w	r3, r3, r8
 8005d80:	4213      	tst	r3, r2
 8005d82:	4631      	mov	r1, r6
 8005d84:	4620      	mov	r0, r4
 8005d86:	bf18      	it	ne
 8005d88:	f04b 0b02 	orrne.w	fp, fp, #2
 8005d8c:	1bad      	subs	r5, r5, r6
 8005d8e:	f7ff fe07 	bl	80059a0 <rshift>
 8005d92:	687e      	ldr	r6, [r7, #4]
 8005d94:	f04f 0802 	mov.w	r8, #2
 8005d98:	f1bb 0f00 	cmp.w	fp, #0
 8005d9c:	d04a      	beq.n	8005e34 <__gethex+0x3c4>
 8005d9e:	68fb      	ldr	r3, [r7, #12]
 8005da0:	2b02      	cmp	r3, #2
 8005da2:	d016      	beq.n	8005dd2 <__gethex+0x362>
 8005da4:	2b03      	cmp	r3, #3
 8005da6:	d018      	beq.n	8005dda <__gethex+0x36a>
 8005da8:	2b01      	cmp	r3, #1
 8005daa:	d109      	bne.n	8005dc0 <__gethex+0x350>
 8005dac:	f01b 0f02 	tst.w	fp, #2
 8005db0:	d006      	beq.n	8005dc0 <__gethex+0x350>
 8005db2:	f8da 3000 	ldr.w	r3, [sl]
 8005db6:	ea4b 0b03 	orr.w	fp, fp, r3
 8005dba:	f01b 0f01 	tst.w	fp, #1
 8005dbe:	d10f      	bne.n	8005de0 <__gethex+0x370>
 8005dc0:	f048 0810 	orr.w	r8, r8, #16
 8005dc4:	e036      	b.n	8005e34 <__gethex+0x3c4>
 8005dc6:	f04f 0b01 	mov.w	fp, #1
 8005dca:	e7d0      	b.n	8005d6e <__gethex+0x2fe>
 8005dcc:	f04f 0801 	mov.w	r8, #1
 8005dd0:	e7e2      	b.n	8005d98 <__gethex+0x328>
 8005dd2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005dd4:	f1c3 0301 	rsb	r3, r3, #1
 8005dd8:	930f      	str	r3, [sp, #60]	; 0x3c
 8005dda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	d0ef      	beq.n	8005dc0 <__gethex+0x350>
 8005de0:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005de4:	f104 0214 	add.w	r2, r4, #20
 8005de8:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8005dec:	9301      	str	r3, [sp, #4]
 8005dee:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 8005df2:	2300      	movs	r3, #0
 8005df4:	4694      	mov	ip, r2
 8005df6:	f852 1b04 	ldr.w	r1, [r2], #4
 8005dfa:	f1b1 3fff 	cmp.w	r1, #4294967295
 8005dfe:	d01e      	beq.n	8005e3e <__gethex+0x3ce>
 8005e00:	3101      	adds	r1, #1
 8005e02:	f8cc 1000 	str.w	r1, [ip]
 8005e06:	f1b8 0f02 	cmp.w	r8, #2
 8005e0a:	f104 0214 	add.w	r2, r4, #20
 8005e0e:	d13d      	bne.n	8005e8c <__gethex+0x41c>
 8005e10:	683b      	ldr	r3, [r7, #0]
 8005e12:	3b01      	subs	r3, #1
 8005e14:	42ab      	cmp	r3, r5
 8005e16:	d10b      	bne.n	8005e30 <__gethex+0x3c0>
 8005e18:	1169      	asrs	r1, r5, #5
 8005e1a:	2301      	movs	r3, #1
 8005e1c:	f005 051f 	and.w	r5, r5, #31
 8005e20:	fa03 f505 	lsl.w	r5, r3, r5
 8005e24:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005e28:	421d      	tst	r5, r3
 8005e2a:	bf18      	it	ne
 8005e2c:	f04f 0801 	movne.w	r8, #1
 8005e30:	f048 0820 	orr.w	r8, r8, #32
 8005e34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005e36:	601c      	str	r4, [r3, #0]
 8005e38:	9b02      	ldr	r3, [sp, #8]
 8005e3a:	601e      	str	r6, [r3, #0]
 8005e3c:	e6a2      	b.n	8005b84 <__gethex+0x114>
 8005e3e:	4290      	cmp	r0, r2
 8005e40:	f842 3c04 	str.w	r3, [r2, #-4]
 8005e44:	d8d6      	bhi.n	8005df4 <__gethex+0x384>
 8005e46:	68a2      	ldr	r2, [r4, #8]
 8005e48:	4593      	cmp	fp, r2
 8005e4a:	db17      	blt.n	8005e7c <__gethex+0x40c>
 8005e4c:	6861      	ldr	r1, [r4, #4]
 8005e4e:	4648      	mov	r0, r9
 8005e50:	3101      	adds	r1, #1
 8005e52:	f7fd ffd3 	bl	8003dfc <_Balloc>
 8005e56:	4682      	mov	sl, r0
 8005e58:	b918      	cbnz	r0, 8005e62 <__gethex+0x3f2>
 8005e5a:	4b1b      	ldr	r3, [pc, #108]	; (8005ec8 <__gethex+0x458>)
 8005e5c:	4602      	mov	r2, r0
 8005e5e:	2184      	movs	r1, #132	; 0x84
 8005e60:	e6b3      	b.n	8005bca <__gethex+0x15a>
 8005e62:	6922      	ldr	r2, [r4, #16]
 8005e64:	3202      	adds	r2, #2
 8005e66:	f104 010c 	add.w	r1, r4, #12
 8005e6a:	0092      	lsls	r2, r2, #2
 8005e6c:	300c      	adds	r0, #12
 8005e6e:	f7ff fd4b 	bl	8005908 <memcpy>
 8005e72:	4621      	mov	r1, r4
 8005e74:	4648      	mov	r0, r9
 8005e76:	f7fe f801 	bl	8003e7c <_Bfree>
 8005e7a:	4654      	mov	r4, sl
 8005e7c:	6922      	ldr	r2, [r4, #16]
 8005e7e:	1c51      	adds	r1, r2, #1
 8005e80:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8005e84:	6121      	str	r1, [r4, #16]
 8005e86:	2101      	movs	r1, #1
 8005e88:	6151      	str	r1, [r2, #20]
 8005e8a:	e7bc      	b.n	8005e06 <__gethex+0x396>
 8005e8c:	6921      	ldr	r1, [r4, #16]
 8005e8e:	4559      	cmp	r1, fp
 8005e90:	dd0b      	ble.n	8005eaa <__gethex+0x43a>
 8005e92:	2101      	movs	r1, #1
 8005e94:	4620      	mov	r0, r4
 8005e96:	f7ff fd83 	bl	80059a0 <rshift>
 8005e9a:	68bb      	ldr	r3, [r7, #8]
 8005e9c:	3601      	adds	r6, #1
 8005e9e:	42b3      	cmp	r3, r6
 8005ea0:	f6ff aedb 	blt.w	8005c5a <__gethex+0x1ea>
 8005ea4:	f04f 0801 	mov.w	r8, #1
 8005ea8:	e7c2      	b.n	8005e30 <__gethex+0x3c0>
 8005eaa:	f015 051f 	ands.w	r5, r5, #31
 8005eae:	d0f9      	beq.n	8005ea4 <__gethex+0x434>
 8005eb0:	9b01      	ldr	r3, [sp, #4]
 8005eb2:	441a      	add	r2, r3
 8005eb4:	f1c5 0520 	rsb	r5, r5, #32
 8005eb8:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8005ebc:	f7fe f890 	bl	8003fe0 <__hi0bits>
 8005ec0:	42a8      	cmp	r0, r5
 8005ec2:	dbe6      	blt.n	8005e92 <__gethex+0x422>
 8005ec4:	e7ee      	b.n	8005ea4 <__gethex+0x434>
 8005ec6:	bf00      	nop
 8005ec8:	08006a84 	.word	0x08006a84

08005ecc <L_shift>:
 8005ecc:	f1c2 0208 	rsb	r2, r2, #8
 8005ed0:	0092      	lsls	r2, r2, #2
 8005ed2:	b570      	push	{r4, r5, r6, lr}
 8005ed4:	f1c2 0620 	rsb	r6, r2, #32
 8005ed8:	6843      	ldr	r3, [r0, #4]
 8005eda:	6804      	ldr	r4, [r0, #0]
 8005edc:	fa03 f506 	lsl.w	r5, r3, r6
 8005ee0:	432c      	orrs	r4, r5
 8005ee2:	40d3      	lsrs	r3, r2
 8005ee4:	6004      	str	r4, [r0, #0]
 8005ee6:	f840 3f04 	str.w	r3, [r0, #4]!
 8005eea:	4288      	cmp	r0, r1
 8005eec:	d3f4      	bcc.n	8005ed8 <L_shift+0xc>
 8005eee:	bd70      	pop	{r4, r5, r6, pc}

08005ef0 <__match>:
 8005ef0:	b530      	push	{r4, r5, lr}
 8005ef2:	6803      	ldr	r3, [r0, #0]
 8005ef4:	3301      	adds	r3, #1
 8005ef6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005efa:	b914      	cbnz	r4, 8005f02 <__match+0x12>
 8005efc:	6003      	str	r3, [r0, #0]
 8005efe:	2001      	movs	r0, #1
 8005f00:	bd30      	pop	{r4, r5, pc}
 8005f02:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005f06:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8005f0a:	2d19      	cmp	r5, #25
 8005f0c:	bf98      	it	ls
 8005f0e:	3220      	addls	r2, #32
 8005f10:	42a2      	cmp	r2, r4
 8005f12:	d0f0      	beq.n	8005ef6 <__match+0x6>
 8005f14:	2000      	movs	r0, #0
 8005f16:	e7f3      	b.n	8005f00 <__match+0x10>

08005f18 <__hexnan>:
 8005f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005f1c:	680b      	ldr	r3, [r1, #0]
 8005f1e:	6801      	ldr	r1, [r0, #0]
 8005f20:	115e      	asrs	r6, r3, #5
 8005f22:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005f26:	f013 031f 	ands.w	r3, r3, #31
 8005f2a:	b087      	sub	sp, #28
 8005f2c:	bf18      	it	ne
 8005f2e:	3604      	addne	r6, #4
 8005f30:	2500      	movs	r5, #0
 8005f32:	1f37      	subs	r7, r6, #4
 8005f34:	4682      	mov	sl, r0
 8005f36:	4690      	mov	r8, r2
 8005f38:	9301      	str	r3, [sp, #4]
 8005f3a:	f846 5c04 	str.w	r5, [r6, #-4]
 8005f3e:	46b9      	mov	r9, r7
 8005f40:	463c      	mov	r4, r7
 8005f42:	9502      	str	r5, [sp, #8]
 8005f44:	46ab      	mov	fp, r5
 8005f46:	784a      	ldrb	r2, [r1, #1]
 8005f48:	1c4b      	adds	r3, r1, #1
 8005f4a:	9303      	str	r3, [sp, #12]
 8005f4c:	b342      	cbz	r2, 8005fa0 <__hexnan+0x88>
 8005f4e:	4610      	mov	r0, r2
 8005f50:	9105      	str	r1, [sp, #20]
 8005f52:	9204      	str	r2, [sp, #16]
 8005f54:	f7ff fd76 	bl	8005a44 <__hexdig_fun>
 8005f58:	2800      	cmp	r0, #0
 8005f5a:	d14f      	bne.n	8005ffc <__hexnan+0xe4>
 8005f5c:	9a04      	ldr	r2, [sp, #16]
 8005f5e:	9905      	ldr	r1, [sp, #20]
 8005f60:	2a20      	cmp	r2, #32
 8005f62:	d818      	bhi.n	8005f96 <__hexnan+0x7e>
 8005f64:	9b02      	ldr	r3, [sp, #8]
 8005f66:	459b      	cmp	fp, r3
 8005f68:	dd13      	ble.n	8005f92 <__hexnan+0x7a>
 8005f6a:	454c      	cmp	r4, r9
 8005f6c:	d206      	bcs.n	8005f7c <__hexnan+0x64>
 8005f6e:	2d07      	cmp	r5, #7
 8005f70:	dc04      	bgt.n	8005f7c <__hexnan+0x64>
 8005f72:	462a      	mov	r2, r5
 8005f74:	4649      	mov	r1, r9
 8005f76:	4620      	mov	r0, r4
 8005f78:	f7ff ffa8 	bl	8005ecc <L_shift>
 8005f7c:	4544      	cmp	r4, r8
 8005f7e:	d950      	bls.n	8006022 <__hexnan+0x10a>
 8005f80:	2300      	movs	r3, #0
 8005f82:	f1a4 0904 	sub.w	r9, r4, #4
 8005f86:	f844 3c04 	str.w	r3, [r4, #-4]
 8005f8a:	f8cd b008 	str.w	fp, [sp, #8]
 8005f8e:	464c      	mov	r4, r9
 8005f90:	461d      	mov	r5, r3
 8005f92:	9903      	ldr	r1, [sp, #12]
 8005f94:	e7d7      	b.n	8005f46 <__hexnan+0x2e>
 8005f96:	2a29      	cmp	r2, #41	; 0x29
 8005f98:	d155      	bne.n	8006046 <__hexnan+0x12e>
 8005f9a:	3102      	adds	r1, #2
 8005f9c:	f8ca 1000 	str.w	r1, [sl]
 8005fa0:	f1bb 0f00 	cmp.w	fp, #0
 8005fa4:	d04f      	beq.n	8006046 <__hexnan+0x12e>
 8005fa6:	454c      	cmp	r4, r9
 8005fa8:	d206      	bcs.n	8005fb8 <__hexnan+0xa0>
 8005faa:	2d07      	cmp	r5, #7
 8005fac:	dc04      	bgt.n	8005fb8 <__hexnan+0xa0>
 8005fae:	462a      	mov	r2, r5
 8005fb0:	4649      	mov	r1, r9
 8005fb2:	4620      	mov	r0, r4
 8005fb4:	f7ff ff8a 	bl	8005ecc <L_shift>
 8005fb8:	4544      	cmp	r4, r8
 8005fba:	d934      	bls.n	8006026 <__hexnan+0x10e>
 8005fbc:	f1a8 0204 	sub.w	r2, r8, #4
 8005fc0:	4623      	mov	r3, r4
 8005fc2:	f853 1b04 	ldr.w	r1, [r3], #4
 8005fc6:	f842 1f04 	str.w	r1, [r2, #4]!
 8005fca:	429f      	cmp	r7, r3
 8005fcc:	d2f9      	bcs.n	8005fc2 <__hexnan+0xaa>
 8005fce:	1b3b      	subs	r3, r7, r4
 8005fd0:	f023 0303 	bic.w	r3, r3, #3
 8005fd4:	3304      	adds	r3, #4
 8005fd6:	3e03      	subs	r6, #3
 8005fd8:	3401      	adds	r4, #1
 8005fda:	42a6      	cmp	r6, r4
 8005fdc:	bf38      	it	cc
 8005fde:	2304      	movcc	r3, #4
 8005fe0:	4443      	add	r3, r8
 8005fe2:	2200      	movs	r2, #0
 8005fe4:	f843 2b04 	str.w	r2, [r3], #4
 8005fe8:	429f      	cmp	r7, r3
 8005fea:	d2fb      	bcs.n	8005fe4 <__hexnan+0xcc>
 8005fec:	683b      	ldr	r3, [r7, #0]
 8005fee:	b91b      	cbnz	r3, 8005ff8 <__hexnan+0xe0>
 8005ff0:	4547      	cmp	r7, r8
 8005ff2:	d126      	bne.n	8006042 <__hexnan+0x12a>
 8005ff4:	2301      	movs	r3, #1
 8005ff6:	603b      	str	r3, [r7, #0]
 8005ff8:	2005      	movs	r0, #5
 8005ffa:	e025      	b.n	8006048 <__hexnan+0x130>
 8005ffc:	3501      	adds	r5, #1
 8005ffe:	2d08      	cmp	r5, #8
 8006000:	f10b 0b01 	add.w	fp, fp, #1
 8006004:	dd06      	ble.n	8006014 <__hexnan+0xfc>
 8006006:	4544      	cmp	r4, r8
 8006008:	d9c3      	bls.n	8005f92 <__hexnan+0x7a>
 800600a:	2300      	movs	r3, #0
 800600c:	f844 3c04 	str.w	r3, [r4, #-4]
 8006010:	2501      	movs	r5, #1
 8006012:	3c04      	subs	r4, #4
 8006014:	6822      	ldr	r2, [r4, #0]
 8006016:	f000 000f 	and.w	r0, r0, #15
 800601a:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800601e:	6020      	str	r0, [r4, #0]
 8006020:	e7b7      	b.n	8005f92 <__hexnan+0x7a>
 8006022:	2508      	movs	r5, #8
 8006024:	e7b5      	b.n	8005f92 <__hexnan+0x7a>
 8006026:	9b01      	ldr	r3, [sp, #4]
 8006028:	2b00      	cmp	r3, #0
 800602a:	d0df      	beq.n	8005fec <__hexnan+0xd4>
 800602c:	f1c3 0320 	rsb	r3, r3, #32
 8006030:	f04f 32ff 	mov.w	r2, #4294967295
 8006034:	40da      	lsrs	r2, r3
 8006036:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800603a:	4013      	ands	r3, r2
 800603c:	f846 3c04 	str.w	r3, [r6, #-4]
 8006040:	e7d4      	b.n	8005fec <__hexnan+0xd4>
 8006042:	3f04      	subs	r7, #4
 8006044:	e7d2      	b.n	8005fec <__hexnan+0xd4>
 8006046:	2004      	movs	r0, #4
 8006048:	b007      	add	sp, #28
 800604a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800604e <__ascii_mbtowc>:
 800604e:	b082      	sub	sp, #8
 8006050:	b901      	cbnz	r1, 8006054 <__ascii_mbtowc+0x6>
 8006052:	a901      	add	r1, sp, #4
 8006054:	b142      	cbz	r2, 8006068 <__ascii_mbtowc+0x1a>
 8006056:	b14b      	cbz	r3, 800606c <__ascii_mbtowc+0x1e>
 8006058:	7813      	ldrb	r3, [r2, #0]
 800605a:	600b      	str	r3, [r1, #0]
 800605c:	7812      	ldrb	r2, [r2, #0]
 800605e:	1e10      	subs	r0, r2, #0
 8006060:	bf18      	it	ne
 8006062:	2001      	movne	r0, #1
 8006064:	b002      	add	sp, #8
 8006066:	4770      	bx	lr
 8006068:	4610      	mov	r0, r2
 800606a:	e7fb      	b.n	8006064 <__ascii_mbtowc+0x16>
 800606c:	f06f 0001 	mvn.w	r0, #1
 8006070:	e7f8      	b.n	8006064 <__ascii_mbtowc+0x16>

08006072 <_realloc_r>:
 8006072:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006076:	4680      	mov	r8, r0
 8006078:	4614      	mov	r4, r2
 800607a:	460e      	mov	r6, r1
 800607c:	b921      	cbnz	r1, 8006088 <_realloc_r+0x16>
 800607e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006082:	4611      	mov	r1, r2
 8006084:	f7fd be2e 	b.w	8003ce4 <_malloc_r>
 8006088:	b92a      	cbnz	r2, 8006096 <_realloc_r+0x24>
 800608a:	f7fd fdb7 	bl	8003bfc <_free_r>
 800608e:	4625      	mov	r5, r4
 8006090:	4628      	mov	r0, r5
 8006092:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006096:	f000 f842 	bl	800611e <_malloc_usable_size_r>
 800609a:	4284      	cmp	r4, r0
 800609c:	4607      	mov	r7, r0
 800609e:	d802      	bhi.n	80060a6 <_realloc_r+0x34>
 80060a0:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80060a4:	d812      	bhi.n	80060cc <_realloc_r+0x5a>
 80060a6:	4621      	mov	r1, r4
 80060a8:	4640      	mov	r0, r8
 80060aa:	f7fd fe1b 	bl	8003ce4 <_malloc_r>
 80060ae:	4605      	mov	r5, r0
 80060b0:	2800      	cmp	r0, #0
 80060b2:	d0ed      	beq.n	8006090 <_realloc_r+0x1e>
 80060b4:	42bc      	cmp	r4, r7
 80060b6:	4622      	mov	r2, r4
 80060b8:	4631      	mov	r1, r6
 80060ba:	bf28      	it	cs
 80060bc:	463a      	movcs	r2, r7
 80060be:	f7ff fc23 	bl	8005908 <memcpy>
 80060c2:	4631      	mov	r1, r6
 80060c4:	4640      	mov	r0, r8
 80060c6:	f7fd fd99 	bl	8003bfc <_free_r>
 80060ca:	e7e1      	b.n	8006090 <_realloc_r+0x1e>
 80060cc:	4635      	mov	r5, r6
 80060ce:	e7df      	b.n	8006090 <_realloc_r+0x1e>

080060d0 <__ascii_wctomb>:
 80060d0:	b149      	cbz	r1, 80060e6 <__ascii_wctomb+0x16>
 80060d2:	2aff      	cmp	r2, #255	; 0xff
 80060d4:	bf85      	ittet	hi
 80060d6:	238a      	movhi	r3, #138	; 0x8a
 80060d8:	6003      	strhi	r3, [r0, #0]
 80060da:	700a      	strbls	r2, [r1, #0]
 80060dc:	f04f 30ff 	movhi.w	r0, #4294967295
 80060e0:	bf98      	it	ls
 80060e2:	2001      	movls	r0, #1
 80060e4:	4770      	bx	lr
 80060e6:	4608      	mov	r0, r1
 80060e8:	4770      	bx	lr
	...

080060ec <fiprintf>:
 80060ec:	b40e      	push	{r1, r2, r3}
 80060ee:	b503      	push	{r0, r1, lr}
 80060f0:	4601      	mov	r1, r0
 80060f2:	ab03      	add	r3, sp, #12
 80060f4:	4805      	ldr	r0, [pc, #20]	; (800610c <fiprintf+0x20>)
 80060f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80060fa:	6800      	ldr	r0, [r0, #0]
 80060fc:	9301      	str	r3, [sp, #4]
 80060fe:	f000 f83f 	bl	8006180 <_vfiprintf_r>
 8006102:	b002      	add	sp, #8
 8006104:	f85d eb04 	ldr.w	lr, [sp], #4
 8006108:	b003      	add	sp, #12
 800610a:	4770      	bx	lr
 800610c:	20000060 	.word	0x20000060

08006110 <abort>:
 8006110:	b508      	push	{r3, lr}
 8006112:	2006      	movs	r0, #6
 8006114:	f000 fa0c 	bl	8006530 <raise>
 8006118:	2001      	movs	r0, #1
 800611a:	f7fb fbfb 	bl	8001914 <_exit>

0800611e <_malloc_usable_size_r>:
 800611e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006122:	1f18      	subs	r0, r3, #4
 8006124:	2b00      	cmp	r3, #0
 8006126:	bfbc      	itt	lt
 8006128:	580b      	ldrlt	r3, [r1, r0]
 800612a:	18c0      	addlt	r0, r0, r3
 800612c:	4770      	bx	lr

0800612e <__sfputc_r>:
 800612e:	6893      	ldr	r3, [r2, #8]
 8006130:	3b01      	subs	r3, #1
 8006132:	2b00      	cmp	r3, #0
 8006134:	b410      	push	{r4}
 8006136:	6093      	str	r3, [r2, #8]
 8006138:	da08      	bge.n	800614c <__sfputc_r+0x1e>
 800613a:	6994      	ldr	r4, [r2, #24]
 800613c:	42a3      	cmp	r3, r4
 800613e:	db01      	blt.n	8006144 <__sfputc_r+0x16>
 8006140:	290a      	cmp	r1, #10
 8006142:	d103      	bne.n	800614c <__sfputc_r+0x1e>
 8006144:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006148:	f000 b934 	b.w	80063b4 <__swbuf_r>
 800614c:	6813      	ldr	r3, [r2, #0]
 800614e:	1c58      	adds	r0, r3, #1
 8006150:	6010      	str	r0, [r2, #0]
 8006152:	7019      	strb	r1, [r3, #0]
 8006154:	4608      	mov	r0, r1
 8006156:	f85d 4b04 	ldr.w	r4, [sp], #4
 800615a:	4770      	bx	lr

0800615c <__sfputs_r>:
 800615c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800615e:	4606      	mov	r6, r0
 8006160:	460f      	mov	r7, r1
 8006162:	4614      	mov	r4, r2
 8006164:	18d5      	adds	r5, r2, r3
 8006166:	42ac      	cmp	r4, r5
 8006168:	d101      	bne.n	800616e <__sfputs_r+0x12>
 800616a:	2000      	movs	r0, #0
 800616c:	e007      	b.n	800617e <__sfputs_r+0x22>
 800616e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006172:	463a      	mov	r2, r7
 8006174:	4630      	mov	r0, r6
 8006176:	f7ff ffda 	bl	800612e <__sfputc_r>
 800617a:	1c43      	adds	r3, r0, #1
 800617c:	d1f3      	bne.n	8006166 <__sfputs_r+0xa>
 800617e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006180 <_vfiprintf_r>:
 8006180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006184:	460d      	mov	r5, r1
 8006186:	b09d      	sub	sp, #116	; 0x74
 8006188:	4614      	mov	r4, r2
 800618a:	4698      	mov	r8, r3
 800618c:	4606      	mov	r6, r0
 800618e:	b118      	cbz	r0, 8006198 <_vfiprintf_r+0x18>
 8006190:	6a03      	ldr	r3, [r0, #32]
 8006192:	b90b      	cbnz	r3, 8006198 <_vfiprintf_r+0x18>
 8006194:	f7fc fd78 	bl	8002c88 <__sinit>
 8006198:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800619a:	07d9      	lsls	r1, r3, #31
 800619c:	d405      	bmi.n	80061aa <_vfiprintf_r+0x2a>
 800619e:	89ab      	ldrh	r3, [r5, #12]
 80061a0:	059a      	lsls	r2, r3, #22
 80061a2:	d402      	bmi.n	80061aa <_vfiprintf_r+0x2a>
 80061a4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80061a6:	f7fc fea6 	bl	8002ef6 <__retarget_lock_acquire_recursive>
 80061aa:	89ab      	ldrh	r3, [r5, #12]
 80061ac:	071b      	lsls	r3, r3, #28
 80061ae:	d501      	bpl.n	80061b4 <_vfiprintf_r+0x34>
 80061b0:	692b      	ldr	r3, [r5, #16]
 80061b2:	b99b      	cbnz	r3, 80061dc <_vfiprintf_r+0x5c>
 80061b4:	4629      	mov	r1, r5
 80061b6:	4630      	mov	r0, r6
 80061b8:	f000 f93a 	bl	8006430 <__swsetup_r>
 80061bc:	b170      	cbz	r0, 80061dc <_vfiprintf_r+0x5c>
 80061be:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80061c0:	07dc      	lsls	r4, r3, #31
 80061c2:	d504      	bpl.n	80061ce <_vfiprintf_r+0x4e>
 80061c4:	f04f 30ff 	mov.w	r0, #4294967295
 80061c8:	b01d      	add	sp, #116	; 0x74
 80061ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061ce:	89ab      	ldrh	r3, [r5, #12]
 80061d0:	0598      	lsls	r0, r3, #22
 80061d2:	d4f7      	bmi.n	80061c4 <_vfiprintf_r+0x44>
 80061d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80061d6:	f7fc fe8f 	bl	8002ef8 <__retarget_lock_release_recursive>
 80061da:	e7f3      	b.n	80061c4 <_vfiprintf_r+0x44>
 80061dc:	2300      	movs	r3, #0
 80061de:	9309      	str	r3, [sp, #36]	; 0x24
 80061e0:	2320      	movs	r3, #32
 80061e2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80061e6:	f8cd 800c 	str.w	r8, [sp, #12]
 80061ea:	2330      	movs	r3, #48	; 0x30
 80061ec:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80063a0 <_vfiprintf_r+0x220>
 80061f0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80061f4:	f04f 0901 	mov.w	r9, #1
 80061f8:	4623      	mov	r3, r4
 80061fa:	469a      	mov	sl, r3
 80061fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006200:	b10a      	cbz	r2, 8006206 <_vfiprintf_r+0x86>
 8006202:	2a25      	cmp	r2, #37	; 0x25
 8006204:	d1f9      	bne.n	80061fa <_vfiprintf_r+0x7a>
 8006206:	ebba 0b04 	subs.w	fp, sl, r4
 800620a:	d00b      	beq.n	8006224 <_vfiprintf_r+0xa4>
 800620c:	465b      	mov	r3, fp
 800620e:	4622      	mov	r2, r4
 8006210:	4629      	mov	r1, r5
 8006212:	4630      	mov	r0, r6
 8006214:	f7ff ffa2 	bl	800615c <__sfputs_r>
 8006218:	3001      	adds	r0, #1
 800621a:	f000 80a9 	beq.w	8006370 <_vfiprintf_r+0x1f0>
 800621e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006220:	445a      	add	r2, fp
 8006222:	9209      	str	r2, [sp, #36]	; 0x24
 8006224:	f89a 3000 	ldrb.w	r3, [sl]
 8006228:	2b00      	cmp	r3, #0
 800622a:	f000 80a1 	beq.w	8006370 <_vfiprintf_r+0x1f0>
 800622e:	2300      	movs	r3, #0
 8006230:	f04f 32ff 	mov.w	r2, #4294967295
 8006234:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006238:	f10a 0a01 	add.w	sl, sl, #1
 800623c:	9304      	str	r3, [sp, #16]
 800623e:	9307      	str	r3, [sp, #28]
 8006240:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006244:	931a      	str	r3, [sp, #104]	; 0x68
 8006246:	4654      	mov	r4, sl
 8006248:	2205      	movs	r2, #5
 800624a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800624e:	4854      	ldr	r0, [pc, #336]	; (80063a0 <_vfiprintf_r+0x220>)
 8006250:	f7f9 ffbe 	bl	80001d0 <memchr>
 8006254:	9a04      	ldr	r2, [sp, #16]
 8006256:	b9d8      	cbnz	r0, 8006290 <_vfiprintf_r+0x110>
 8006258:	06d1      	lsls	r1, r2, #27
 800625a:	bf44      	itt	mi
 800625c:	2320      	movmi	r3, #32
 800625e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006262:	0713      	lsls	r3, r2, #28
 8006264:	bf44      	itt	mi
 8006266:	232b      	movmi	r3, #43	; 0x2b
 8006268:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800626c:	f89a 3000 	ldrb.w	r3, [sl]
 8006270:	2b2a      	cmp	r3, #42	; 0x2a
 8006272:	d015      	beq.n	80062a0 <_vfiprintf_r+0x120>
 8006274:	9a07      	ldr	r2, [sp, #28]
 8006276:	4654      	mov	r4, sl
 8006278:	2000      	movs	r0, #0
 800627a:	f04f 0c0a 	mov.w	ip, #10
 800627e:	4621      	mov	r1, r4
 8006280:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006284:	3b30      	subs	r3, #48	; 0x30
 8006286:	2b09      	cmp	r3, #9
 8006288:	d94d      	bls.n	8006326 <_vfiprintf_r+0x1a6>
 800628a:	b1b0      	cbz	r0, 80062ba <_vfiprintf_r+0x13a>
 800628c:	9207      	str	r2, [sp, #28]
 800628e:	e014      	b.n	80062ba <_vfiprintf_r+0x13a>
 8006290:	eba0 0308 	sub.w	r3, r0, r8
 8006294:	fa09 f303 	lsl.w	r3, r9, r3
 8006298:	4313      	orrs	r3, r2
 800629a:	9304      	str	r3, [sp, #16]
 800629c:	46a2      	mov	sl, r4
 800629e:	e7d2      	b.n	8006246 <_vfiprintf_r+0xc6>
 80062a0:	9b03      	ldr	r3, [sp, #12]
 80062a2:	1d19      	adds	r1, r3, #4
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	9103      	str	r1, [sp, #12]
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	bfbb      	ittet	lt
 80062ac:	425b      	neglt	r3, r3
 80062ae:	f042 0202 	orrlt.w	r2, r2, #2
 80062b2:	9307      	strge	r3, [sp, #28]
 80062b4:	9307      	strlt	r3, [sp, #28]
 80062b6:	bfb8      	it	lt
 80062b8:	9204      	strlt	r2, [sp, #16]
 80062ba:	7823      	ldrb	r3, [r4, #0]
 80062bc:	2b2e      	cmp	r3, #46	; 0x2e
 80062be:	d10c      	bne.n	80062da <_vfiprintf_r+0x15a>
 80062c0:	7863      	ldrb	r3, [r4, #1]
 80062c2:	2b2a      	cmp	r3, #42	; 0x2a
 80062c4:	d134      	bne.n	8006330 <_vfiprintf_r+0x1b0>
 80062c6:	9b03      	ldr	r3, [sp, #12]
 80062c8:	1d1a      	adds	r2, r3, #4
 80062ca:	681b      	ldr	r3, [r3, #0]
 80062cc:	9203      	str	r2, [sp, #12]
 80062ce:	2b00      	cmp	r3, #0
 80062d0:	bfb8      	it	lt
 80062d2:	f04f 33ff 	movlt.w	r3, #4294967295
 80062d6:	3402      	adds	r4, #2
 80062d8:	9305      	str	r3, [sp, #20]
 80062da:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 80063b0 <_vfiprintf_r+0x230>
 80062de:	7821      	ldrb	r1, [r4, #0]
 80062e0:	2203      	movs	r2, #3
 80062e2:	4650      	mov	r0, sl
 80062e4:	f7f9 ff74 	bl	80001d0 <memchr>
 80062e8:	b138      	cbz	r0, 80062fa <_vfiprintf_r+0x17a>
 80062ea:	9b04      	ldr	r3, [sp, #16]
 80062ec:	eba0 000a 	sub.w	r0, r0, sl
 80062f0:	2240      	movs	r2, #64	; 0x40
 80062f2:	4082      	lsls	r2, r0
 80062f4:	4313      	orrs	r3, r2
 80062f6:	3401      	adds	r4, #1
 80062f8:	9304      	str	r3, [sp, #16]
 80062fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80062fe:	4829      	ldr	r0, [pc, #164]	; (80063a4 <_vfiprintf_r+0x224>)
 8006300:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006304:	2206      	movs	r2, #6
 8006306:	f7f9 ff63 	bl	80001d0 <memchr>
 800630a:	2800      	cmp	r0, #0
 800630c:	d03f      	beq.n	800638e <_vfiprintf_r+0x20e>
 800630e:	4b26      	ldr	r3, [pc, #152]	; (80063a8 <_vfiprintf_r+0x228>)
 8006310:	bb1b      	cbnz	r3, 800635a <_vfiprintf_r+0x1da>
 8006312:	9b03      	ldr	r3, [sp, #12]
 8006314:	3307      	adds	r3, #7
 8006316:	f023 0307 	bic.w	r3, r3, #7
 800631a:	3308      	adds	r3, #8
 800631c:	9303      	str	r3, [sp, #12]
 800631e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006320:	443b      	add	r3, r7
 8006322:	9309      	str	r3, [sp, #36]	; 0x24
 8006324:	e768      	b.n	80061f8 <_vfiprintf_r+0x78>
 8006326:	fb0c 3202 	mla	r2, ip, r2, r3
 800632a:	460c      	mov	r4, r1
 800632c:	2001      	movs	r0, #1
 800632e:	e7a6      	b.n	800627e <_vfiprintf_r+0xfe>
 8006330:	2300      	movs	r3, #0
 8006332:	3401      	adds	r4, #1
 8006334:	9305      	str	r3, [sp, #20]
 8006336:	4619      	mov	r1, r3
 8006338:	f04f 0c0a 	mov.w	ip, #10
 800633c:	4620      	mov	r0, r4
 800633e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006342:	3a30      	subs	r2, #48	; 0x30
 8006344:	2a09      	cmp	r2, #9
 8006346:	d903      	bls.n	8006350 <_vfiprintf_r+0x1d0>
 8006348:	2b00      	cmp	r3, #0
 800634a:	d0c6      	beq.n	80062da <_vfiprintf_r+0x15a>
 800634c:	9105      	str	r1, [sp, #20]
 800634e:	e7c4      	b.n	80062da <_vfiprintf_r+0x15a>
 8006350:	fb0c 2101 	mla	r1, ip, r1, r2
 8006354:	4604      	mov	r4, r0
 8006356:	2301      	movs	r3, #1
 8006358:	e7f0      	b.n	800633c <_vfiprintf_r+0x1bc>
 800635a:	ab03      	add	r3, sp, #12
 800635c:	9300      	str	r3, [sp, #0]
 800635e:	462a      	mov	r2, r5
 8006360:	4b12      	ldr	r3, [pc, #72]	; (80063ac <_vfiprintf_r+0x22c>)
 8006362:	a904      	add	r1, sp, #16
 8006364:	4630      	mov	r0, r6
 8006366:	f7fb fe2d 	bl	8001fc4 <_printf_float>
 800636a:	4607      	mov	r7, r0
 800636c:	1c78      	adds	r0, r7, #1
 800636e:	d1d6      	bne.n	800631e <_vfiprintf_r+0x19e>
 8006370:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006372:	07d9      	lsls	r1, r3, #31
 8006374:	d405      	bmi.n	8006382 <_vfiprintf_r+0x202>
 8006376:	89ab      	ldrh	r3, [r5, #12]
 8006378:	059a      	lsls	r2, r3, #22
 800637a:	d402      	bmi.n	8006382 <_vfiprintf_r+0x202>
 800637c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800637e:	f7fc fdbb 	bl	8002ef8 <__retarget_lock_release_recursive>
 8006382:	89ab      	ldrh	r3, [r5, #12]
 8006384:	065b      	lsls	r3, r3, #25
 8006386:	f53f af1d 	bmi.w	80061c4 <_vfiprintf_r+0x44>
 800638a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800638c:	e71c      	b.n	80061c8 <_vfiprintf_r+0x48>
 800638e:	ab03      	add	r3, sp, #12
 8006390:	9300      	str	r3, [sp, #0]
 8006392:	462a      	mov	r2, r5
 8006394:	4b05      	ldr	r3, [pc, #20]	; (80063ac <_vfiprintf_r+0x22c>)
 8006396:	a904      	add	r1, sp, #16
 8006398:	4630      	mov	r0, r6
 800639a:	f7fc f8b7 	bl	800250c <_printf_i>
 800639e:	e7e4      	b.n	800636a <_vfiprintf_r+0x1ea>
 80063a0:	08006c40 	.word	0x08006c40
 80063a4:	08006c4a 	.word	0x08006c4a
 80063a8:	08001fc5 	.word	0x08001fc5
 80063ac:	0800615d 	.word	0x0800615d
 80063b0:	08006c46 	.word	0x08006c46

080063b4 <__swbuf_r>:
 80063b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80063b6:	460e      	mov	r6, r1
 80063b8:	4614      	mov	r4, r2
 80063ba:	4605      	mov	r5, r0
 80063bc:	b118      	cbz	r0, 80063c6 <__swbuf_r+0x12>
 80063be:	6a03      	ldr	r3, [r0, #32]
 80063c0:	b90b      	cbnz	r3, 80063c6 <__swbuf_r+0x12>
 80063c2:	f7fc fc61 	bl	8002c88 <__sinit>
 80063c6:	69a3      	ldr	r3, [r4, #24]
 80063c8:	60a3      	str	r3, [r4, #8]
 80063ca:	89a3      	ldrh	r3, [r4, #12]
 80063cc:	071a      	lsls	r2, r3, #28
 80063ce:	d525      	bpl.n	800641c <__swbuf_r+0x68>
 80063d0:	6923      	ldr	r3, [r4, #16]
 80063d2:	b31b      	cbz	r3, 800641c <__swbuf_r+0x68>
 80063d4:	6823      	ldr	r3, [r4, #0]
 80063d6:	6922      	ldr	r2, [r4, #16]
 80063d8:	1a98      	subs	r0, r3, r2
 80063da:	6963      	ldr	r3, [r4, #20]
 80063dc:	b2f6      	uxtb	r6, r6
 80063de:	4283      	cmp	r3, r0
 80063e0:	4637      	mov	r7, r6
 80063e2:	dc04      	bgt.n	80063ee <__swbuf_r+0x3a>
 80063e4:	4621      	mov	r1, r4
 80063e6:	4628      	mov	r0, r5
 80063e8:	f7ff fa2a 	bl	8005840 <_fflush_r>
 80063ec:	b9e0      	cbnz	r0, 8006428 <__swbuf_r+0x74>
 80063ee:	68a3      	ldr	r3, [r4, #8]
 80063f0:	3b01      	subs	r3, #1
 80063f2:	60a3      	str	r3, [r4, #8]
 80063f4:	6823      	ldr	r3, [r4, #0]
 80063f6:	1c5a      	adds	r2, r3, #1
 80063f8:	6022      	str	r2, [r4, #0]
 80063fa:	701e      	strb	r6, [r3, #0]
 80063fc:	6962      	ldr	r2, [r4, #20]
 80063fe:	1c43      	adds	r3, r0, #1
 8006400:	429a      	cmp	r2, r3
 8006402:	d004      	beq.n	800640e <__swbuf_r+0x5a>
 8006404:	89a3      	ldrh	r3, [r4, #12]
 8006406:	07db      	lsls	r3, r3, #31
 8006408:	d506      	bpl.n	8006418 <__swbuf_r+0x64>
 800640a:	2e0a      	cmp	r6, #10
 800640c:	d104      	bne.n	8006418 <__swbuf_r+0x64>
 800640e:	4621      	mov	r1, r4
 8006410:	4628      	mov	r0, r5
 8006412:	f7ff fa15 	bl	8005840 <_fflush_r>
 8006416:	b938      	cbnz	r0, 8006428 <__swbuf_r+0x74>
 8006418:	4638      	mov	r0, r7
 800641a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800641c:	4621      	mov	r1, r4
 800641e:	4628      	mov	r0, r5
 8006420:	f000 f806 	bl	8006430 <__swsetup_r>
 8006424:	2800      	cmp	r0, #0
 8006426:	d0d5      	beq.n	80063d4 <__swbuf_r+0x20>
 8006428:	f04f 37ff 	mov.w	r7, #4294967295
 800642c:	e7f4      	b.n	8006418 <__swbuf_r+0x64>
	...

08006430 <__swsetup_r>:
 8006430:	b538      	push	{r3, r4, r5, lr}
 8006432:	4b2a      	ldr	r3, [pc, #168]	; (80064dc <__swsetup_r+0xac>)
 8006434:	4605      	mov	r5, r0
 8006436:	6818      	ldr	r0, [r3, #0]
 8006438:	460c      	mov	r4, r1
 800643a:	b118      	cbz	r0, 8006444 <__swsetup_r+0x14>
 800643c:	6a03      	ldr	r3, [r0, #32]
 800643e:	b90b      	cbnz	r3, 8006444 <__swsetup_r+0x14>
 8006440:	f7fc fc22 	bl	8002c88 <__sinit>
 8006444:	89a3      	ldrh	r3, [r4, #12]
 8006446:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800644a:	0718      	lsls	r0, r3, #28
 800644c:	d422      	bmi.n	8006494 <__swsetup_r+0x64>
 800644e:	06d9      	lsls	r1, r3, #27
 8006450:	d407      	bmi.n	8006462 <__swsetup_r+0x32>
 8006452:	2309      	movs	r3, #9
 8006454:	602b      	str	r3, [r5, #0]
 8006456:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800645a:	81a3      	strh	r3, [r4, #12]
 800645c:	f04f 30ff 	mov.w	r0, #4294967295
 8006460:	e034      	b.n	80064cc <__swsetup_r+0x9c>
 8006462:	0758      	lsls	r0, r3, #29
 8006464:	d512      	bpl.n	800648c <__swsetup_r+0x5c>
 8006466:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006468:	b141      	cbz	r1, 800647c <__swsetup_r+0x4c>
 800646a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800646e:	4299      	cmp	r1, r3
 8006470:	d002      	beq.n	8006478 <__swsetup_r+0x48>
 8006472:	4628      	mov	r0, r5
 8006474:	f7fd fbc2 	bl	8003bfc <_free_r>
 8006478:	2300      	movs	r3, #0
 800647a:	6363      	str	r3, [r4, #52]	; 0x34
 800647c:	89a3      	ldrh	r3, [r4, #12]
 800647e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8006482:	81a3      	strh	r3, [r4, #12]
 8006484:	2300      	movs	r3, #0
 8006486:	6063      	str	r3, [r4, #4]
 8006488:	6923      	ldr	r3, [r4, #16]
 800648a:	6023      	str	r3, [r4, #0]
 800648c:	89a3      	ldrh	r3, [r4, #12]
 800648e:	f043 0308 	orr.w	r3, r3, #8
 8006492:	81a3      	strh	r3, [r4, #12]
 8006494:	6923      	ldr	r3, [r4, #16]
 8006496:	b94b      	cbnz	r3, 80064ac <__swsetup_r+0x7c>
 8006498:	89a3      	ldrh	r3, [r4, #12]
 800649a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800649e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80064a2:	d003      	beq.n	80064ac <__swsetup_r+0x7c>
 80064a4:	4621      	mov	r1, r4
 80064a6:	4628      	mov	r0, r5
 80064a8:	f000 f884 	bl	80065b4 <__smakebuf_r>
 80064ac:	89a0      	ldrh	r0, [r4, #12]
 80064ae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80064b2:	f010 0301 	ands.w	r3, r0, #1
 80064b6:	d00a      	beq.n	80064ce <__swsetup_r+0x9e>
 80064b8:	2300      	movs	r3, #0
 80064ba:	60a3      	str	r3, [r4, #8]
 80064bc:	6963      	ldr	r3, [r4, #20]
 80064be:	425b      	negs	r3, r3
 80064c0:	61a3      	str	r3, [r4, #24]
 80064c2:	6923      	ldr	r3, [r4, #16]
 80064c4:	b943      	cbnz	r3, 80064d8 <__swsetup_r+0xa8>
 80064c6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80064ca:	d1c4      	bne.n	8006456 <__swsetup_r+0x26>
 80064cc:	bd38      	pop	{r3, r4, r5, pc}
 80064ce:	0781      	lsls	r1, r0, #30
 80064d0:	bf58      	it	pl
 80064d2:	6963      	ldrpl	r3, [r4, #20]
 80064d4:	60a3      	str	r3, [r4, #8]
 80064d6:	e7f4      	b.n	80064c2 <__swsetup_r+0x92>
 80064d8:	2000      	movs	r0, #0
 80064da:	e7f7      	b.n	80064cc <__swsetup_r+0x9c>
 80064dc:	20000060 	.word	0x20000060

080064e0 <_raise_r>:
 80064e0:	291f      	cmp	r1, #31
 80064e2:	b538      	push	{r3, r4, r5, lr}
 80064e4:	4604      	mov	r4, r0
 80064e6:	460d      	mov	r5, r1
 80064e8:	d904      	bls.n	80064f4 <_raise_r+0x14>
 80064ea:	2316      	movs	r3, #22
 80064ec:	6003      	str	r3, [r0, #0]
 80064ee:	f04f 30ff 	mov.w	r0, #4294967295
 80064f2:	bd38      	pop	{r3, r4, r5, pc}
 80064f4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80064f6:	b112      	cbz	r2, 80064fe <_raise_r+0x1e>
 80064f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80064fc:	b94b      	cbnz	r3, 8006512 <_raise_r+0x32>
 80064fe:	4620      	mov	r0, r4
 8006500:	f000 f830 	bl	8006564 <_getpid_r>
 8006504:	462a      	mov	r2, r5
 8006506:	4601      	mov	r1, r0
 8006508:	4620      	mov	r0, r4
 800650a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800650e:	f000 b817 	b.w	8006540 <_kill_r>
 8006512:	2b01      	cmp	r3, #1
 8006514:	d00a      	beq.n	800652c <_raise_r+0x4c>
 8006516:	1c59      	adds	r1, r3, #1
 8006518:	d103      	bne.n	8006522 <_raise_r+0x42>
 800651a:	2316      	movs	r3, #22
 800651c:	6003      	str	r3, [r0, #0]
 800651e:	2001      	movs	r0, #1
 8006520:	e7e7      	b.n	80064f2 <_raise_r+0x12>
 8006522:	2400      	movs	r4, #0
 8006524:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006528:	4628      	mov	r0, r5
 800652a:	4798      	blx	r3
 800652c:	2000      	movs	r0, #0
 800652e:	e7e0      	b.n	80064f2 <_raise_r+0x12>

08006530 <raise>:
 8006530:	4b02      	ldr	r3, [pc, #8]	; (800653c <raise+0xc>)
 8006532:	4601      	mov	r1, r0
 8006534:	6818      	ldr	r0, [r3, #0]
 8006536:	f7ff bfd3 	b.w	80064e0 <_raise_r>
 800653a:	bf00      	nop
 800653c:	20000060 	.word	0x20000060

08006540 <_kill_r>:
 8006540:	b538      	push	{r3, r4, r5, lr}
 8006542:	4d07      	ldr	r5, [pc, #28]	; (8006560 <_kill_r+0x20>)
 8006544:	2300      	movs	r3, #0
 8006546:	4604      	mov	r4, r0
 8006548:	4608      	mov	r0, r1
 800654a:	4611      	mov	r1, r2
 800654c:	602b      	str	r3, [r5, #0]
 800654e:	f7fb f9d1 	bl	80018f4 <_kill>
 8006552:	1c43      	adds	r3, r0, #1
 8006554:	d102      	bne.n	800655c <_kill_r+0x1c>
 8006556:	682b      	ldr	r3, [r5, #0]
 8006558:	b103      	cbz	r3, 800655c <_kill_r+0x1c>
 800655a:	6023      	str	r3, [r4, #0]
 800655c:	bd38      	pop	{r3, r4, r5, pc}
 800655e:	bf00      	nop
 8006560:	20000740 	.word	0x20000740

08006564 <_getpid_r>:
 8006564:	f7fb b9be 	b.w	80018e4 <_getpid>

08006568 <__swhatbuf_r>:
 8006568:	b570      	push	{r4, r5, r6, lr}
 800656a:	460c      	mov	r4, r1
 800656c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006570:	2900      	cmp	r1, #0
 8006572:	b096      	sub	sp, #88	; 0x58
 8006574:	4615      	mov	r5, r2
 8006576:	461e      	mov	r6, r3
 8006578:	da0d      	bge.n	8006596 <__swhatbuf_r+0x2e>
 800657a:	89a3      	ldrh	r3, [r4, #12]
 800657c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8006580:	f04f 0100 	mov.w	r1, #0
 8006584:	bf0c      	ite	eq
 8006586:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800658a:	2340      	movne	r3, #64	; 0x40
 800658c:	2000      	movs	r0, #0
 800658e:	6031      	str	r1, [r6, #0]
 8006590:	602b      	str	r3, [r5, #0]
 8006592:	b016      	add	sp, #88	; 0x58
 8006594:	bd70      	pop	{r4, r5, r6, pc}
 8006596:	466a      	mov	r2, sp
 8006598:	f000 f848 	bl	800662c <_fstat_r>
 800659c:	2800      	cmp	r0, #0
 800659e:	dbec      	blt.n	800657a <__swhatbuf_r+0x12>
 80065a0:	9901      	ldr	r1, [sp, #4]
 80065a2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80065a6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80065aa:	4259      	negs	r1, r3
 80065ac:	4159      	adcs	r1, r3
 80065ae:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80065b2:	e7eb      	b.n	800658c <__swhatbuf_r+0x24>

080065b4 <__smakebuf_r>:
 80065b4:	898b      	ldrh	r3, [r1, #12]
 80065b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80065b8:	079d      	lsls	r5, r3, #30
 80065ba:	4606      	mov	r6, r0
 80065bc:	460c      	mov	r4, r1
 80065be:	d507      	bpl.n	80065d0 <__smakebuf_r+0x1c>
 80065c0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80065c4:	6023      	str	r3, [r4, #0]
 80065c6:	6123      	str	r3, [r4, #16]
 80065c8:	2301      	movs	r3, #1
 80065ca:	6163      	str	r3, [r4, #20]
 80065cc:	b002      	add	sp, #8
 80065ce:	bd70      	pop	{r4, r5, r6, pc}
 80065d0:	ab01      	add	r3, sp, #4
 80065d2:	466a      	mov	r2, sp
 80065d4:	f7ff ffc8 	bl	8006568 <__swhatbuf_r>
 80065d8:	9900      	ldr	r1, [sp, #0]
 80065da:	4605      	mov	r5, r0
 80065dc:	4630      	mov	r0, r6
 80065de:	f7fd fb81 	bl	8003ce4 <_malloc_r>
 80065e2:	b948      	cbnz	r0, 80065f8 <__smakebuf_r+0x44>
 80065e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80065e8:	059a      	lsls	r2, r3, #22
 80065ea:	d4ef      	bmi.n	80065cc <__smakebuf_r+0x18>
 80065ec:	f023 0303 	bic.w	r3, r3, #3
 80065f0:	f043 0302 	orr.w	r3, r3, #2
 80065f4:	81a3      	strh	r3, [r4, #12]
 80065f6:	e7e3      	b.n	80065c0 <__smakebuf_r+0xc>
 80065f8:	89a3      	ldrh	r3, [r4, #12]
 80065fa:	6020      	str	r0, [r4, #0]
 80065fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006600:	81a3      	strh	r3, [r4, #12]
 8006602:	9b00      	ldr	r3, [sp, #0]
 8006604:	6163      	str	r3, [r4, #20]
 8006606:	9b01      	ldr	r3, [sp, #4]
 8006608:	6120      	str	r0, [r4, #16]
 800660a:	b15b      	cbz	r3, 8006624 <__smakebuf_r+0x70>
 800660c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006610:	4630      	mov	r0, r6
 8006612:	f000 f81d 	bl	8006650 <_isatty_r>
 8006616:	b128      	cbz	r0, 8006624 <__smakebuf_r+0x70>
 8006618:	89a3      	ldrh	r3, [r4, #12]
 800661a:	f023 0303 	bic.w	r3, r3, #3
 800661e:	f043 0301 	orr.w	r3, r3, #1
 8006622:	81a3      	strh	r3, [r4, #12]
 8006624:	89a3      	ldrh	r3, [r4, #12]
 8006626:	431d      	orrs	r5, r3
 8006628:	81a5      	strh	r5, [r4, #12]
 800662a:	e7cf      	b.n	80065cc <__smakebuf_r+0x18>

0800662c <_fstat_r>:
 800662c:	b538      	push	{r3, r4, r5, lr}
 800662e:	4d07      	ldr	r5, [pc, #28]	; (800664c <_fstat_r+0x20>)
 8006630:	2300      	movs	r3, #0
 8006632:	4604      	mov	r4, r0
 8006634:	4608      	mov	r0, r1
 8006636:	4611      	mov	r1, r2
 8006638:	602b      	str	r3, [r5, #0]
 800663a:	f7fb f9ba 	bl	80019b2 <_fstat>
 800663e:	1c43      	adds	r3, r0, #1
 8006640:	d102      	bne.n	8006648 <_fstat_r+0x1c>
 8006642:	682b      	ldr	r3, [r5, #0]
 8006644:	b103      	cbz	r3, 8006648 <_fstat_r+0x1c>
 8006646:	6023      	str	r3, [r4, #0]
 8006648:	bd38      	pop	{r3, r4, r5, pc}
 800664a:	bf00      	nop
 800664c:	20000740 	.word	0x20000740

08006650 <_isatty_r>:
 8006650:	b538      	push	{r3, r4, r5, lr}
 8006652:	4d06      	ldr	r5, [pc, #24]	; (800666c <_isatty_r+0x1c>)
 8006654:	2300      	movs	r3, #0
 8006656:	4604      	mov	r4, r0
 8006658:	4608      	mov	r0, r1
 800665a:	602b      	str	r3, [r5, #0]
 800665c:	f7fb f9b9 	bl	80019d2 <_isatty>
 8006660:	1c43      	adds	r3, r0, #1
 8006662:	d102      	bne.n	800666a <_isatty_r+0x1a>
 8006664:	682b      	ldr	r3, [r5, #0]
 8006666:	b103      	cbz	r3, 800666a <_isatty_r+0x1a>
 8006668:	6023      	str	r3, [r4, #0]
 800666a:	bd38      	pop	{r3, r4, r5, pc}
 800666c:	20000740 	.word	0x20000740

08006670 <_init>:
 8006670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006672:	bf00      	nop
 8006674:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006676:	bc08      	pop	{r3}
 8006678:	469e      	mov	lr, r3
 800667a:	4770      	bx	lr

0800667c <_fini>:
 800667c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800667e:	bf00      	nop
 8006680:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006682:	bc08      	pop	{r3}
 8006684:	469e      	mov	lr, r3
 8006686:	4770      	bx	lr
